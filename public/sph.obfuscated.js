var _0x175f=['drag','transparencyFactor','_points','invalidate','gaussian_blur_fragment','_densityMaterial','weights','_renderTarget','tiny_blur_hdre_fragment','OneFactor','modelViewMatrixInverse','defines','SQUARE','uniform\x20vec3\x20numCells;\x0auniform\x20vec3\x20wallExtent;\x0auniform\x20float\x20cellSize;\x0auniform\x20vec3\x20spherePosition;\x0auniform\x20float\x20sphereRadius;\x0a\x0afloat\x20getDistance(vec3\x20pos)\x0a{\x0a\x20\x20\x20\x20float\x20wallDist\x20=\x20signedDistanceWalls(pos,\x20wallExtent);\x0a\x20\x20\x20\x20float\x20sphereDist\x20=\x20signedDistanceSphere(pos,\x20spherePosition,\x20sphereRadius);\x0a\x20\x20\x20\x20return\x20min(wallDist,\x20sphereDist);\x0a}\x0a\x0avec3\x20getNormal(vec3\x20pos)\x0a{\x0a\x20\x20\x20\x20float\x20r\x20=\x20getDistance(pos\x20+\x20vec3(cellSize,\x200.0,\x200.0));\x0a\x20\x20\x20\x20float\x20l\x20=\x20getDistance(pos\x20-\x20vec3(cellSize,\x200.0,\x200.0));\x0a\x20\x20\x20\x20float\x20t\x20=\x20getDistance(pos\x20+\x20vec3(0.0,\x20cellSize,\x200.0));\x0a\x20\x20\x20\x20float\x20b\x20=\x20getDistance(pos\x20-\x20vec3(0.0,\x20cellSize,\x200.0));\x0a\x20\x20\x20\x20float\x20n\x20=\x20getDistance(pos\x20+\x20vec3(0.0,\x200.0,\x20cellSize));\x0a\x20\x20\x20\x20float\x20f\x20=\x20getDistance(pos\x20-\x20vec3(0.0,\x200.0,\x20cellSize));\x0a\x0a\x20\x20\x20\x20//\x20normalization\x20happens\x20in\x20collision\x20test\x20anyway,\x20so\x20no\x20need\x20for\x20it\x20here\x0a\x20\x20\x20\x20return\x20normalize(vec3(r\x20-\x20l,\x20t\x20-\x20b,\x20n\x20-\x20f));\x0a}\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec3\x20pos\x20=\x20getCellPositionFromFragCoord(gl_FragCoord.xy,\x20numCells,\x20cellSize);\x0a\x20\x20\x20\x20float\x20dist\x20=\x20getDistance(pos);\x0a\x20\x20\x20\x20vec3\x20normal\x20=\x20getNormal(pos);\x0a\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(normal,\x20dist);\x0a}\x0a','prototype','normalMap','_amplitude','RepeatWrapping','sph_position_fragment.glsl','_isDown','_envMap','programs','_depthMaterial','varying\x20vec3\x20worldPosition;\x0avarying\x20vec3\x20viewPosition;\x0avarying\x20vec3\x20worldNormal;\x0a\x0a#if\x20defined(SSAO_MAP)\x20||\x20defined(ALBEDO_MAP)\x20||\x20defined(NORMAL_MAP)\x20||\x20defined(ROUGHNESS_MAP)\x20||\x20defined(EMISSION_MAP)\x0avarying\x20vec2\x20texCoords;\x0a#endif\x0a\x0a#if\x20defined(AMBIENT_OCCLUSION_MAP)\x0aattribute\x20vec2\x20uv2;\x0a\x0avarying\x20vec2\x20texCoords2;\x0a#endif\x0a\x0a#ifdef\x20SSAO_MAP\x0avarying\x20vec4\x20projection;\x0a#endif\x0a\x0a#ifdef\x20SHADOW_MAP\x0auniform\x20mat4\x20shadowMatrix;\x0a\x0avarying\x20vec4\x20shadowCoord;\x0a#endif\x0a\x0a#ifdef\x20DISPLACEMENT_MAP\x0auniform\x20sampler2D\x20displacementMap;\x0auniform\x20float\x20displacementMapRange;\x0a#endif\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec3\x20norm\x20=\x20normalize(normal);\x0a\x20\x20\x20\x20vec4\x20localPos\x20=\x20vec4(position,\x201.0);\x0a\x20\x20\x20\x20#ifdef\x20DISPLACEMENT_MAP\x0a\x20\x20\x20\x20vec2\x20invUV\x20=\x20uv;\x0a\x20\x20\x20\x20invUV.y\x20=\x201.0\x20-\x20invUV.y;\x0a\x20\x20\x20\x20float\x20displ\x20=\x20(texture2D(displacementMap,\x20invUV).x\x20-\x20.5)\x20*\x20displacementMapRange;\x0a\x20\x20\x20\x20localPos.xyz\x20+=\x20norm\x20*\x20displ;\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20worldPosition\x20=\x20(modelMatrix\x20*\x20localPos).xyz;\x0a\x20\x20\x20\x20//\x20normalMatrix\x20seems\x20to\x20be\x20view\x20space...\x20need\x20world\x20space,\x20but\x20it\x27s\x20okay\x20since\x20we\x27re\x20using\x20uniform\x20scaling\x20only\x0a\x20\x20\x20\x20vec4\x20viewPos\x20=\x20modelViewMatrix\x20*\x20localPos;\x0a\x20\x20\x20\x20worldNormal\x20=\x20mat3(modelMatrix)\x20*\x20norm;\x0a\x20\x20\x20\x20gl_Position\x20=\x20projectionMatrix\x20*\x20viewPos;\x0a\x20\x20\x20\x20viewPosition\x20=\x20viewPos.xyz;\x0a\x0a\x20\x20\x20\x20#if\x20defined(SSAO_MAP)\x20||\x20defined(ALBEDO_MAP)\x20||\x20defined(NORMAL_MAP)\x20||\x20defined(ROUGHNESS_MAP)\x20||\x20defined(EMISSION_MAP)\x0a\x20\x20\x20\x20texCoords\x20=\x20uv;\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#if\x20defined(AMBIENT_OCCLUSION_MAP)\x0a\x20\x20\x20\x20texCoords2\x20=\x20uv2;\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#ifdef\x20SSAO_MAP\x0a\x20\x20\x20\x20projection\x20=\x20gl_Position;\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#ifdef\x20SHADOW_MAP\x0a\x20\x20\x20\x20shadowCoord\x20=\x20(shadowMatrix\x20*\x20vec4(worldPosition,\x201.0))\x20*\x20.5\x20+\x20.5;\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#ifdef\x20AO_MAP\x0a\x20\x20\x20\x20texCoords2\x20=\x20uv2;\x0a\x20\x20\x20\x20#endif\x0a}','touchstart','computeVertexNormals','equals','_particleRadius','irradiance','swap','send','_numCells','sph_bucket_vertex.glsl','application/json','position','sph_particle_depth_fragment','_distanceField','quality','fragmentShader','_update','getHalfOrFloat','renderTarget2','info','parse','#define\x20MIN_VARIANCE\x20-0.0001\x0a#define\x20LIGHT_BLEED_REDUCTION\x20.5\x0a\x0avarying\x20vec3\x20worldPosition;\x0avarying\x20vec3\x20viewPosition;\x0avarying\x20vec3\x20worldNormal;\x0a\x0a#if\x20defined(SSAO_MAP)\x20||\x20defined(ALBEDO_MAP)\x20||\x20defined(NORMAL_MAP)\x20||\x20defined(ROUGHNESS_MAP)\x20||\x20defined(EMISSION_MAP)\x0avarying\x20vec2\x20texCoords;\x0a#endif\x0a\x0a#ifdef\x20SSAO_MAP\x0avarying\x20vec4\x20projection;\x0auniform\x20sampler2D\x20ssaoMap;\x0a#endif\x0a\x0auniform\x20float\x20shadowMapSize;\x0auniform\x20float\x20shadowMapPixelSize;\x0a\x0a#ifdef\x20SHADOW_MAP\x0auniform\x20sampler2D\x20shadowMap;\x0a\x0avarying\x20vec4\x20shadowCoord;\x0a\x0a#ifdef\x20PCF_SHADOW_MAP\x0auniform\x20vec2\x20shadowOffsets[NUM_SHADOW_SAMPLES];\x20//\x20w\x20contains\x20bias\x0a#endif\x0a#endif\x0a\x0a\x0a#ifdef\x20ALBEDO_MAP\x0auniform\x20sampler2D\x20albedoMap;\x0a\x0a#ifdef\x20ALBEDO_MAP_2\x0auniform\x20sampler2D\x20albedoMap2;\x0auniform\x20float\x20albedoBlend;\x0a#endif\x0a\x0a#endif\x0a\x0auniform\x20vec3\x20color;\x0a\x0auniform\x20float\x20roughness;\x0auniform\x20float\x20normalSpecularReflection;\x0a\x0a#ifdef\x20NORMAL_MAP\x0auniform\x20sampler2D\x20normalMap;\x0a#endif\x0a\x0a#ifdef\x20ROUGHNESS_MAP\x0auniform\x20sampler2D\x20roughnessMap;\x0auniform\x20float\x20roughnessMapRange;\x0a#endif\x0a\x0a#ifdef\x20EMISSION_MAP\x0auniform\x20sampler2D\x20emissionMap;\x0a#endif\x0a\x0auniform\x20vec3\x20emissionColor;\x0a\x0a#ifdef\x20AMBIENT_OCCLUSION_MAP\x0auniform\x20sampler2D\x20aoMap;\x0avarying\x20vec2\x20texCoords2;\x0a#endif\x0a\x0a#ifdef\x20LOCAL_SKYBOX\x0a//\x20this\x20could\x20also\x20be\x20applied\x20to\x20irradiance\x20map\x0auniform\x20vec3\x20skyboxPosition;\x0auniform\x20float\x20skyboxSize;\x0a#endif\x0a\x0a#ifdef\x20SPECULAR_PROBE\x0auniform\x20samplerCube\x20specularProbe;\x0auniform\x20vec3\x20specularProbeColor;\x0a#endif\x0a\x0a#ifdef\x20FOG_PROBE\x0auniform\x20samplerCube\x20fogProbe;\x0auniform\x20float\x20fogProbeBoost;\x0a#endif\x0a\x0a#ifdef\x20IRRADIANCE_PROBE\x0auniform\x20samplerCube\x20irradianceProbe;\x0auniform\x20float\x20irradianceProbeBoost;\x0a#endif\x0a\x0a//\x20internal\x0auniform\x20vec3\x20ambientLightColor;\x0a\x0auniform\x20float\x20alpha;\x0a\x0a#ifdef\x20FOG\x0auniform\x20float\x20fogDensity;\x0auniform\x20vec3\x20fogColor;\x0a#endif\x0a\x0a#if\x20NUM_POINT_LIGHTS\x20>\x200\x0astruct\x20PointLight\x20{\x0a\x20\x20\x20\x20vec3\x20position;\x0a\x20\x20\x20\x20vec3\x20color;\x0a\x20\x20\x20\x20float\x20distance;\x0a\x20\x20\x20\x20float\x20decay;\x0a\x20\x20\x20\x20int\x20shadow;\x0a\x20\x20\x20\x20float\x20shadowBias;\x0a\x20\x20\x20\x20float\x20shadowRadius;\x0a\x20\x20\x20\x20vec2\x20shadowMapSize;\x0a};\x0a\x0auniform\x20PointLight\x20pointLights[\x20NUM_POINT_LIGHTS\x20];\x0a#endif\x0a\x0a#if\x20NUM_DIR_LIGHTS\x20>\x200\x0astruct\x20DirectionalLight\x20{\x0a\x20\x20\x20\x20vec3\x20direction;\x0a\x20\x20\x20\x20vec3\x20color;\x0a\x20\x20\x20\x20int\x20shadow;\x0a\x20\x20\x20\x20float\x20shadowBias;\x0a\x20\x20\x20\x20float\x20shadowRadius;\x0a\x20\x20\x20\x20vec2\x20shadowMapSize;\x0a};\x0auniform\x20DirectionalLight\x20directionalLights[\x20NUM_DIR_LIGHTS\x20];\x0a#endif\x0a\x0a#ifdef\x20NORMAL_MAP\x0avec3\x20perturbNormal2Arb(vec3\x20position,\x20vec3\x20worldNormal,\x20vec3\x20normalSample)\x0a{\x0a\x20\x20\x20\x20vec3\x20q0\x20=\x20dFdx(\x20position.xyz\x20);\x0a\x20\x20\x20\x20vec3\x20q1\x20=\x20dFdy(\x20position.xyz\x20);\x0a\x20\x20\x20\x20vec2\x20st0\x20=\x20dFdx(\x20texCoords.st\x20);\x0a\x20\x20\x20\x20vec2\x20st1\x20=\x20dFdy(\x20texCoords.st\x20);\x0a\x20\x20\x20\x20vec3\x20S\x20=\x20normalize(\x20q0\x20*\x20st1.t\x20-\x20q1\x20*\x20st0.t\x20);\x0a\x20\x20\x20\x20vec3\x20T\x20=\x20normalize(\x20-q0\x20*\x20st1.s\x20+\x20q1\x20*\x20st0.s\x20);\x0a\x20\x20\x20\x20vec3\x20N\x20=\x20normalize(\x20worldNormal\x20);\x0a\x20\x20\x20\x20mat3\x20tsn\x20=\x20mat3(\x20S,\x20T,\x20N\x20);\x0a\x20\x20\x20\x20return\x20normalize(\x20tsn\x20*\x20normalSample\x20);\x0a}\x0a#endif\x0a\x0avec3\x20getNormal()\x0a{\x0a#if\x20defined(NORMAL_MAP)\x0a\x20\x20\x20\x20vec4\x20normalSample\x20=\x20texture2D(\x20normalMap,\x20texCoords\x20);\x0a\x20\x20\x20\x20vec3\x20normal\x20=\x20normalSample.xyz\x20*\x202.0\x20-\x201.0;\x0a\x20\x20\x20\x20#ifdef\x20OBJECT_NORMALS\x0a\x20\x20\x20\x20return\x20normalize(normal);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20return\x20perturbNormal2Arb(worldPosition,\x20worldNormal,\x20normal);\x0a#else\x0a\x20\x20\x20\x20#ifdef\x20FACE_NORMALS\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20q0\x20=\x20dFdx(\x20worldPosition.xyz\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20q1\x20=\x20dFdy(\x20worldPosition.xyz\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20normalize(cross(q0,\x20q1));\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20normalize(worldNormal);\x0a\x20\x20\x20\x20#endif\x0a#endif\x0a}\x0a\x0a#ifdef\x20VSM_SHADOW_MAP\x0avec2\x20getVSMMoments(vec2\x20uv)\x0a{\x0a\x20\x20\x20\x20vec4\x20s\x20=\x20texture2D(shadowMap,\x20uv);\x0a\x20\x20\x20\x20#ifdef\x20VSM_FLOAT\x0a\x20\x20\x20\x20return\x20s.xy;\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20return\x20vec2(RG8ToFloat(s.xy),\x20RG8ToFloat(s.zw));\x0a\x20\x20\x20\x20#endif\x0a}\x0a#endif\x0a\x0afloat\x20getShadow()\x20{\x0a#ifdef\x20SHADOW_MAP\x0a\x0a\x20\x20\x20\x20#ifdef\x20PCF_SHADOW_MAP\x0a\x20\x20\x20\x20\x20\x20\x20\x20#if\x20NUM_SHADOW_SAMPLES\x20>\x201\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20shadow\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20i\x20=\x200;\x20i\x20<\x20NUM_SHADOW_SAMPLES;\x20++i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20//\x20pseudo\x20random\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#ifdef\x20DITHER_SHADOW\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20angle\x20=\x20fract\x20(sin((gl_FragCoord.x\x20+\x200.5)\x20*\x20(gl_FragCoord.y\x20+\x201.0))\x20*\x2043758.5453123)\x20*\x203.1415\x20*\x202.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20c\x20=\x20cos(angle);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20s\x20=\x20sin(angle);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20offset;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20offset.x\x20=\x20c\x20*\x20shadowOffsets[i].x\x20-\x20s\x20*\x20shadowOffsets[i].y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20offset.y\x20=\x20s\x20*\x20shadowOffsets[i].x\x20+\x20c\x20*\x20shadowOffsets[i].y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20offset\x20=\x20shadowOffsets[i];\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20occlDepth\x20=\x20RGBA8ToFloat(texture2D(shadowMap,\x20shadowCoord.xy\x20+\x20offset));\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20diff\x20=\x20shadowCoord.z\x20-\x20occlDepth;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20shadow\x20+=\x20float(diff\x20<=\x200.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20shadow\x20*=\x20RCP_NUM_SHADOW_SAMPLES;\x0a\x20\x20\x20\x20\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20occlDepth\x20=\x20RGBA8ToFloat(texture2D(shadowMap,\x20shadowCoord.xy));\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20diff\x20=\x20shadowCoord.z\x20-\x20occlDepth;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20shadow\x20=\x20float(diff\x20<=\x200.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#ifdef\x20VSM_SHADOW_MAP\x0a\x0a//\x20the\x20moments\x20seem\x20correct\x20on\x20ipad...\x20why\x20do\x20the\x20calculations\x20differ?\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20moments\x20=\x20getVSMMoments(shadowCoord.xy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20p\x20=\x20linearStep(shadowCoord.z\x20-\x200.02,\x20shadowCoord.z,\x20moments.x);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20variance\x20=\x20moments.y\x20-\x20moments.x\x20*\x20moments.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20variance\x20=\x20max(variance,\x20MIN_VARIANCE);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20diff\x20=\x20shadowCoord.z\x20-\x20moments.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20upperBound\x20=\x20variance\x20/\x20(variance\x20+\x20diff*diff);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20shadow\x20=\x20linearStep(LIGHT_BLEED_REDUCTION,\x201.0,\x20upperBound);\x0a\x20\x20\x20\x20\x20\x20\x20\x20shadow\x20=\x20clamp(max(shadow,\x20p),\x200.0,\x201.0);\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20vec2\x20edges\x20=\x20abs(shadowCoord.xy\x20*\x202.0\x20-\x201.0);\x0a\x20\x20\x20\x20float\x20edge\x20=\x20max(edges.x,\x20edges.y);\x0a\x20\x20\x20\x20edge\x20=\x20linearStep(.8,\x201.0,\x20edge);\x0a\x20\x20\x20\x20shadow\x20=\x20mix(shadow,\x201.0,\x20edge);\x0a\x20\x20\x20\x20return\x20shadow;\x0a#else\x0a\x20\x20\x20\x20return\x201.0;\x0a#endif\x0a}\x0a\x0afloat\x20fresnel(float\x20NdotL,\x20float\x20lowProfileDefault)\x0a{\x0a#ifdef\x20PERFORMANCE_PROFILE_HIGH\x0a//\x20angle\x20to\x20the\x20power\x20of\x205\x0a\x20\x20\x20\x20float\x20angle\x20=\x201.0\x20-\x20NdotL;\x0a\x20\x20\x20\x20float\x20fresnelFactor\x20=\x20angle\x20*\x20angle;\x0a\x20\x20\x20\x20fresnelFactor\x20*=\x20fresnelFactor;\x0a\x20\x20\x20\x20fresnelFactor\x20*=\x20angle;\x0a\x20\x20\x20\x20return\x20normalSpecularReflection\x20+\x20(1.0\x20-\x20normalSpecularReflection)\x20*\x20fresnelFactor;\x0a#else\x0a\x20\x20\x20\x20return\x20lowProfileDefault;\x0a#endif\x0a}\x0a\x0afloat\x20trowbridgeReitz(float\x20roughnessSqr,\x20vec3\x20lightDir,\x20vec3\x20normal,\x20vec3\x20viewDir)\x0a{\x0a\x20\x20\x20\x20vec3\x20halfVec\x20=\x20normalize(lightDir\x20+\x20viewDir);\x0a\x20\x20\x20\x20float\x20micro\x20=\x20max(dot(halfVec,\x20normal),\x200.0);\x0a\x20\x20\x20\x20float\x20denom\x20=\x20(micro\x20*\x20micro)\x20*\x20(roughnessSqr\x20-\x201.0)\x20+\x201.0;\x0a\x20\x20\x20\x20return\x20roughnessSqr\x20/\x20(denom\x20*\x20denom);\x0a}\x0a\x0avoid\x20accumulate(vec3\x20lightDir,\x20vec3\x20lightColor,\x20vec3\x20normal,\x20vec3\x20viewDir,\x20float\x20roughnessSqr,\x20out\x20vec3\x20diffuseLight,\x20out\x20vec3\x20specularLight)\x0a{\x0a\x20\x20\x20\x20float\x20NdotL\x20=\x20max(dot(lightDir,\x20normal),\x200.0);\x0a\x20\x20\x20\x20vec3\x20irradiance\x20=\x20lightColor\x20*\x20NdotL;\x0a\x20\x20\x20\x20diffuseLight\x20+=\x20irradiance;\x0a\x0a#ifndef\x20IGNORESPECULAR\x0a\x20\x20\x20\x20float\x20F\x20=\x20fresnel(NdotL,\x20.08);\x0a\x20\x20\x20\x20float\x20D\x20=\x20trowbridgeReitz(roughnessSqr,\x20lightDir,\x20normal,\x20viewDir);\x0a\x20\x20\x20\x20float\x20amount\x20=\x20D\x20*\x20F;\x0a\x0a\x20\x20\x20\x20specularLight\x20+=\x20irradiance\x20*\x20amount;\x0a#endif\x0a}\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20float\x20roughnessSqr\x20=\x20roughness;\x0a\x20\x20\x20\x20#ifdef\x20ROUGHNESS_MAP\x0a\x20\x20\x20\x20roughnessSqr\x20-=\x20(texture2D(roughnessMap,\x20texCoords).x\x20-\x20.5)\x20*\x20roughnessMapRange;\x0a\x20\x20\x20\x20roughnessSqr\x20=\x20clamp(roughnessSqr,\x200.0,\x201.0);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20roughnessSqr\x20*=\x20roughnessSqr;\x0a\x20\x20\x20\x20vec3\x20viewWorldDir\x20=\x20normalize(worldPosition\x20-\x20cameraPosition);\x0a\x20\x20\x20\x20vec3\x20viewDir\x20=\x20-normalize(viewPosition);\x0a\x0a\x20\x20\x20\x20vec3\x20normal\x20=\x20getNormal();\x0a\x20\x20\x20\x20vec3\x20viewNormal\x20=\x20mat3(viewMatrix)\x20*\x20normal;\x0a\x0a\x20\x20\x20\x20vec3\x20albedo\x20=\x20vec3(1.0);\x0a\x0a#ifdef\x20ALBEDO_MAP\x0a\x20\x20\x20\x20albedo\x20=\x20texture2D(albedoMap,\x20texCoords).xyz;\x0a\x20\x20\x20\x20albedo\x20*=\x20albedo;\x0a\x0a\x20\x20\x20\x20#ifdef\x20ALBEDO_MAP_2\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20albedo2\x20=\x20texture2D(albedoMap2,\x20texCoords).xyz;\x0a\x20\x20\x20\x20\x20\x20\x20\x20albedo\x20=\x20mix(albedo,\x20albedo2\x20*\x20albedo2,\x20albedoBlend);\x0a\x20\x20\x20\x20#endif\x0a#endif\x0a\x0a\x20\x20\x20\x20albedo\x20*=\x20color;\x0a\x0a\x20\x20\x20\x20vec3\x20diffuseLight\x20=\x20vec3(0.0);\x0a\x0a\x20\x20\x20\x20#ifdef\x20IRRADIANCE_PROBE\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20diffuseSample\x20=\x20textureCube(irradianceProbe,\x20normal);\x0a\x20\x20\x20\x20\x20\x20\x20\x20diffuseLight\x20=\x20decodeHDRE(diffuseSample);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20diffuseLight\x20*=\x20diffuseLight\x20*\x20irradianceProbeBoost;\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20float\x20ao\x20=\x201.0;\x0a\x20\x20\x20\x20#ifdef\x20AMBIENT_OCCLUSION_MAP\x0a\x20\x20\x20\x20\x20\x20\x20\x20ao\x20=\x20texture2D(aoMap,\x20texCoords2).x;\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#ifdef\x20SSAO_MAP\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20screenUV\x20=\x20projection.xy\x20/\x20projection.w\x20*\x20.5\x20+\x20.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20ao\x20=\x20texture2D(ssaoMap,\x20screenUV).x;\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20diffuseLight\x20+=\x20ambientLightColor;\x0a\x20\x20\x20\x20#ifndef\x20AO_ON_DIFFUSE\x0a\x20\x20\x20\x20diffuseLight\x20*=\x20ao;\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20vec3\x20specularLight\x20=\x20vec3(0.0);\x0a\x0a\x20\x20\x20\x20#ifdef\x20SPECULAR_PROBE\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20reflectedView\x20=\x20reflect(viewWorldDir,\x20normal);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fresnelFactor\x20=\x20fresnel(max(dot(viewWorldDir,\x20normal),\x200.0),\x20.35);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20#ifdef\x20LOCAL_SKYBOX\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20offsetRefl\x20=\x20intersectCubeMap(worldPosition\x20-\x20skyboxPosition,\x20reflectedView,\x20skyboxSize);\x0a\x20\x20\x20\x20\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20offsetRefl\x20=\x20reflectedView;\x0a\x20\x20\x20\x20\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20reflectionSample\x20=\x20textureCube(specularProbe,\x20reflectedView);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20reflection;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20reflection\x20=\x20decodeHDRE(reflectionSample);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20reflection\x20*=\x20reflection\x20*\x20specularProbeColor;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20specularLight\x20=\x20reflection\x20*\x20fresnelFactor;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20#ifdef\x20AMBIENT_OCCLUSION_MAP\x0a//\x20\x20\x20\x20\x20\x20\x20\x20specularLight\x20*=\x20ao;\x0a\x20\x20\x20\x20\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x20\x20\x20\x20for\x20(int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20++i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20worldDir\x20=\x20pointLights[i].position\x20-\x20worldPosition;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20sqrDist\x20=\x20dot(worldDir,\x20worldDir);\x0a\x20\x20\x20\x20\x20\x20\x20\x20worldDir\x20/=\x20sqrt(sqrDist);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20fallOffColor\x20=\x20pointLights[i].color\x20/\x20max(sqrDist,\x20.001);\x0a\x20\x20\x20\x20\x20\x20\x20\x20accumulate(worldDir,\x20fallOffColor,\x20normal,\x20viewDir,\x20roughnessSqr,\x20diffuseLight,\x20specularLight);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20float\x20shadow\x20=\x20getShadow();\x0a\x0a\x20\x20\x20\x20#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x20\x20\x20\x20for\x20(int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20++i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20NdotL\x20=\x20max(dot(directionalLights[i].direction,\x20viewNormal),\x200.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20irradiance\x20=\x20directionalLights[i].color\x20*\x20NdotL;\x0a\x20\x20\x20\x20\x20\x20\x20\x20irradiance\x20*=\x20shadow;\x0a\x20\x20\x20\x20\x20\x20\x20\x20diffuseLight\x20+=\x20irradiance;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20#ifndef\x20IGNORESPECULAR\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20F\x20=\x20fresnel(NdotL,\x20.04);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20D\x20=\x20trowbridgeReitz(roughnessSqr,\x20directionalLights[i].direction,\x20viewNormal,\x20viewDir);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20amount\x20=\x20D\x20*\x20F;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20specularLight\x20+=\x20irradiance\x20*\x20amount;\x0a\x20\x20\x20\x20\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#ifdef\x20AO_ON_DIFFUSE\x0a\x20\x20\x20\x20diffuseLight\x20*=\x20ao;\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20vec3\x20color\x20=\x20albedo\x20*\x20diffuseLight\x20+\x20specularLight;\x0a\x0a\x20\x20\x20\x20vec3\x20emission\x20=\x20emissionColor;\x0a\x20\x20\x20\x20#ifdef\x20EMISSION_MAP\x0a\x20\x20\x20\x20vec3\x20emissionSample\x20=\x20texture2D(emissionMap,\x20texCoords).xyz;\x0a\x20\x20\x20\x20emissionSample\x20*=\x20emissionSample;\x0a\x20\x20\x20\x20emission\x20*=\x20emissionSample;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20color\x20+=\x20emission;\x0a\x0a\x20\x20\x20\x20#ifdef\x20FOG\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fogAmount\x20=\x20clamp(exp2(viewPosition.z\x20*\x20fogDensity),\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20fogCol\x20=\x20fogColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20#ifdef\x20FOG_PROBE\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20fogSample\x20=\x20textureCube(fogProbe,\x20vec3(viewWorldDir.x\x20,\x200.0,\x20viewWorldDir.z));\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fogSample.xyz\x20=\x20decodeHDRE(fogSample);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fogSample.xyz\x20*=\x20fogSample.xyz\x20*\x20fogProbeBoost;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fogCol\x20*=\x20fogSample.xyz;\x0a\x20\x20\x20\x20\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20color\x20=\x20mix(fogCol,\x20color,\x20fogAmount);\x0a\x0a//\x20ONLY\x20FOR\x20THIS\x20PROJECT,\x20this\x20provides\x20a\x20fade-out\x20for\x20the\x20horizon\x0a\x20\x20\x20\x20\x20\x20\x20\x20fogAmount\x20=\x20smoothstep(100.0,\x20250.0,\x20length(worldPosition.xz));\x0a\x20\x20\x20\x20\x20\x20\x20\x20color\x20=\x20mix(color,\x20fogCol,\x20fogAmount);\x0a\x20\x20\x20\x20#endif\x0a\x0a\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20encodeHDRE(sqrt(color));\x0a//\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(shadow);\x0a}\x0a','normalsNeedUpdate','remove','OneMinusSrcAlphaFactor','650625pSPnVl','_onKeyUp','BoxGeometry','updateMatrixWorld','sky_vertex','sph_quad_vertex.glsl','_initRenderer','minRadius','entity','setFromMatrixPosition','sph_distance_vertex','0px','colorBuffer','_sph','clamp','getInclude','volumetric_lighting_fragment.glsl','maxRadius','assets/','fragDepth','setPixelRatio','2cfnoxu','#define\x20FACE_NORMALS\x0a','setRenderTarget','clear','innerHeight','style','sqrt','ignoreLights','hasOwnProperty','GREATER','CopyShader','overrideMimeType','cos','#define\x20OBJECT_NORMALS\x0a','_expScale','onRemoved','OES_texture_float_linear','viewMatrixInverse','slice','sph_quad_vertex','497XnHfuv','EXTREME','clearAlpha','Object3D','volumetric_lighting_fragment','shift','maxAzimuth','radius','resize','_onProgress','_renderBucketPass','_quality','Color','2411fvoEiO','lookAt','PlaneBufferGeometry','vUv\x20=\x20uv;','effectComposer','onUpdate','_height','context','updateProjectionMatrix','absorption','_constantSize','bilat_gaussian_blur_fragment.glsl','include_sph','This\x20requires\x20the\x20WebGL\x20','visible','reset','debug_vec3_vertex','call','charAt','name','add','CASCADE_MODE','setFromSpherical','_decayFactor','varying\x20vec2\x20texCoords;\x0a\x0auniform\x20sampler2D\x20densityField;\x0auniform\x20vec2\x20rcpTexSize;\x0auniform\x20vec3\x20numCells;\x0a\x0afloat\x20sampleDensity(vec2\x20texCoord)\x0a{\x0a\x20\x20\x20\x20vec4\x20samp\x20=\x20texture2D(densityField,\x20texCoord);\x0a\x20\x20\x20\x20return\x20samp.x;\x0a}\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20float\x20right\x20=\x20sampleDensity(texCoords\x20+\x20vec2(rcpTexSize.x,\x200.0));\x0a\x20\x20\x20\x20float\x20left\x20=\x20sampleDensity(texCoords\x20-\x20vec2(rcpTexSize.x,\x200.0));\x0a\x20\x20\x20\x20float\x20top\x20=\x20sampleDensity(texCoords\x20+\x20vec2(0.0,\x20rcpTexSize.y));\x0a\x20\x20\x20\x20float\x20bottom\x20=\x20sampleDensity(texCoords\x20-\x20vec2(0.0,\x20rcpTexSize.y));\x0a\x20\x20\x20\x20float\x20far\x20=\x20sampleDensity(texCoords\x20+\x20vec2(1.0/numCells.z,\x200.0));\x0a\x20\x20\x20\x20float\x20near\x20=\x20sampleDensity(texCoords\x20-\x20vec2(1.0/numCells.z,\x200.0));\x0a\x20\x20\x20\x20//\x20use\x20the\x20inverse\x20gradient\x20as\x20the\x20hint\x20of\x20direction\x20where\x20most\x20light\x20comes\x20from\x20(similar\x20to\x20bent\x20normals)\x0a\x20\x20\x20\x20vec3\x20grad\x20=\x20vec3(right\x20-\x20left,\x20top\x20-\x20bottom,\x20far\x20-\x20near);\x0a\x20\x20\x20\x20grad\x20/=\x20max(length(grad),\x200.001);\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(-grad\x20*\x20.5\x20+\x20.5,\x201.0);\x0a}','Points:\x20','vec4\x20encodeHDRE(vec3\x20color)\x0a{\x0a#ifdef\x20HDRE\x0a\x20\x20\x20\x20float\x20maxValue\x20=\x20max(max(color.r,\x20color.g),\x20color.b)\x20+\x20.01;\x0a\x20\x20\x20\x20float\x20e\x20=\x20floor(max(log(maxValue),\x200.0));\x0a\x20\x20\x20\x20color\x20/=\x20exp(e);\x0a\x20\x20\x20\x20return\x20vec4(color,\x20e\x20/\x205.0);\x0a#else\x0a\x20\x20\x20\x20return\x20vec4(color,\x201.0);\x0a#endif\x0a}\x0a\x0avec3\x20decodeHDRE(vec4\x20hdre)\x0a{\x0a#ifdef\x20HDRE\x0a\x20\x20\x20\x20float\x20e\x20=\x20hdre.a\x20*\x205.0;\x0a\x20\x20\x20\x20hdre.xyz\x20*=\x20exp(e);\x0a\x20\x20\x20\x20return\x20hdre.xyz;\x0a#else\x0a\x20\x20\x20\x20return\x20hdre.xyz;\x0a#endif\x0a}\x0a\x0afloat\x20luminance(vec3\x20color)\x0a{\x0a\x20\x20\x20\x20return\x20dot(color,\x20vec3(.30,\x200.59,\x20.11));\x0a}\x0a\x0afloat\x20luminance(vec4\x20color)\x0a{\x0a\x20\x20\x20\x20return\x20luminance(color.xyz);\x0a}\x0a\x0afloat\x20linearStep(float\x20lower,\x20float\x20upper,\x20float\x20x)\x0a{\x0a\x20\x20\x20\x20return\x20clamp((x\x20-\x20lower)\x20/\x20(upper\x20-\x20lower),\x200.0,\x201.0);\x0a}\x0a\x0a//\x20Only\x20for\x200\x20-\x201\x0avec4\x20floatToRGBA8(float\x20value)\x0a{\x0a\x20\x20\x20\x20vec4\x20enc\x20=\x20value\x20*\x20vec4(1.0,\x20255.0,\x2065025.0,\x2016581375.0);\x0a\x20\x20\x20\x20//\x20cannot\x20fract\x20first\x20value\x20or\x201\x20would\x20not\x20be\x20encodable\x0a\x20\x20\x20\x20enc.yzw\x20=\x20fract(enc.yzw);\x0a\x20\x20\x20\x20return\x20enc\x20-\x20enc.yzww\x20*\x20vec4(1.0/255.0,\x201.0/255.0,\x201.0/255.0,\x200.0);\x0a}\x0a\x0afloat\x20RGBA8ToFloat(vec4\x20rgba)\x0a{\x0a\x20\x20\x20\x20return\x20dot(rgba,\x20vec4(1.0,\x201.0/255.0,\x201.0/65025.0,\x201.0/16581375.0));\x0a}\x0a\x0avec2\x20floatToRG8(float\x20value)\x0a{\x0a\x20\x20\x20\x20vec2\x20enc\x20=\x20vec2(1.0,\x20255.0)\x20*\x20value;\x0a\x20\x20\x20\x20enc.y\x20=\x20fract(enc.y);\x0a\x20\x20\x20\x20enc.x\x20-=\x20enc.y\x20/\x20255.0;\x0a\x20\x20\x20\x20return\x20enc;\x0a}\x0a\x0afloat\x20RG8ToFloat(vec2\x20rg)\x0a{\x0a\x20\x20\x20\x20return\x20dot(rg,\x20vec2(1.0,\x201.0/255.0));\x0a}\x0a\x0avec3\x20intersectCubeMap(vec3\x20rayOrigin,\x20vec3\x20rayDir,\x20float\x20cubeSize)\x0a{\x0a\x20\x20\x20\x20vec3\x20t\x20=\x20(cubeSize\x20*\x20sign(rayDir)\x20-\x20rayOrigin)\x20/\x20rayDir;\x0a\x20\x20\x20\x20float\x20minT\x20=\x20min(min(t.x,\x20t.y),\x20t.z);\x0a\x20\x20\x20\x20return\x20rayOrigin\x20+\x20minT\x20*\x20rayDir;\x0a}','renderer','_pointGeometry','CLAMP_TO_EDGE','stencilFunc','sph_accel_fragment.glsl','#define\x20DISPLACEMENT_MAP\x0a','posX.jpg','sph_particle_point_fragment.glsl','textures/skybox/irradiance/','_executeTask','CubeTextureLoader','envMap','setIndex','setFromRotationMatrix','_scale','BufferAttribute','post_z_vertex.glsl','densityField','absolute','renderToScreen','_numParticles','getTime','tDiffuse','_sceneDepthRenderer','sin','length','irradianceProbe','onload','log','positionBuffer','#define\x20LOCAL_SKYBOX\x0a','_moveAcceleration','pixelSize','CustomBlending','Quality','struct\x20DirectionalLight\x20{\x0a\x20\x20\x20\x20vec3\x20direction;\x0a\x20\x20\x20\x20vec3\x20color;\x0a\x20\x20\x20\x20int\x20shadow;\x0a\x20\x20\x20\x20float\x20shadowBias;\x0a\x20\x20\x20\x20float\x20shadowRadius;\x0a\x20\x20\x20\x20vec2\x20shadowMapSize;\x0a};\x0a\x0astruct\x20PointLight\x20{\x0a\x20\x20\x20\x20vec3\x20position;\x0a\x20\x20\x20\x20vec3\x20color;\x0a\x20\x20\x20\x20float\x20distance;\x0a\x20\x20\x20\x20float\x20decay;\x0a\x20\x20\x20\x20int\x20shadow;\x0a\x20\x20\x20\x20float\x20shadowBias;\x0a\x20\x20\x20\x20float\x20shadowRadius;\x0a\x20\x20\x20\x20vec2\x20shadowMapSize;\x0a};\x0a\x0a\x0avarying\x20vec3\x20viewVector;\x0avarying\x20vec3\x20localViewDir;\x0avarying\x20vec3\x20viewWorldDir;\x0avarying\x20vec3\x20frustumVec;\x0a\x0auniform\x20sampler2D\x20lightAccum;\x0a\x0auniform\x20sampler2D\x20waterDepthMap;\x0auniform\x20sampler2D\x20sceneDepthMap;\x0a\x0a#if\x20NUM_DIR_LIGHTS\x20>\x200\x0auniform\x20DirectionalLight\x20directionalLights[\x20NUM_DIR_LIGHTS\x20];\x0a#endif\x0a\x0a#if\x20NUM_POINT_LIGHTS\x20>\x200\x0auniform\x20PointLight\x20pointLights[\x20NUM_POINT_LIGHTS\x20];\x0a#endif\x0a\x0a#ifdef\x20SKYBOX\x0auniform\x20samplerCube\x20skybox;\x0a#endif\x0a\x0auniform\x20vec2\x20pixelSize;\x0auniform\x20vec3\x20numCells;\x0auniform\x20float\x20cellSize;\x0auniform\x20mat4\x20viewMatrixInverse;\x0auniform\x20mat4\x20projectionMatrix;\x0auniform\x20vec3\x20absorption;\x0auniform\x20float\x20cameraNear;\x0auniform\x20float\x20cameraRange;\x0auniform\x20float\x20transparencyFactor;\x0auniform\x20float\x20roughness;\x0auniform\x20float\x20normalSpecularReflection;\x0auniform\x20mat4\x20modelViewMatrixInverse;\x0auniform\x20vec3\x20mie;\x0a\x0avec4\x20sampleData(vec3\x20pos)\x0a{\x0a\x20\x20\x20\x20vec4\x20samp\x20=\x20sampleCellLinear(lightAccum,\x20pos,\x20numCells,\x20cellSize);\x0a//\x20\x20\x20\x20if\x20(!isInsideFluidDomain(pos,\x20numCells,\x20cellSize))\x0a//\x20\x20\x20\x20\x20\x20\x20\x20samp\x20=\x20vec4(0.0);\x0a\x20\x20\x20\x20return\x20samp;\x0a}\x0a\x0afloat\x20trowbridgeReitz(float\x20roughnessSqr,\x20vec3\x20lightDir,\x20vec3\x20normal,\x20vec3\x20viewDir)\x0a{\x0a\x20\x20\x20\x20vec3\x20halfVec\x20=\x20normalize(lightDir\x20+\x20viewDir);\x0a\x20\x20\x20\x20float\x20micro\x20=\x20max(dot(halfVec,\x20normal),\x200.0);\x0a\x20\x20\x20\x20float\x20denom\x20=\x20(micro\x20*\x20micro)\x20*\x20(roughnessSqr\x20-\x201.0)\x20+\x201.0;\x0a\x20\x20\x20\x20return\x20roughnessSqr\x20/\x20(denom\x20*\x20denom);\x0a}\x0a\x0afloat\x20fresnel(float\x20NdotL)\x0a{\x0a\x20\x20\x20\x20float\x20angle\x20=\x201.0\x20-\x20NdotL;\x0a\x20\x20\x20\x20float\x20fresnelFactor\x20=\x20pow(angle,\x205.0);\x0a\x20\x20\x20\x20return\x20normalSpecularReflection\x20+\x20(1.0\x20-\x20normalSpecularReflection)\x20*\x20fresnelFactor;\x0a}\x0a\x0avec3\x20getReflectedLight(DirectionalLight\x20light,\x20vec3\x20normal,\x20vec3\x20viewDir)\x0a{\x0a\x20\x20\x20\x20float\x20D\x20=\x20trowbridgeReitz(roughness\x20*\x20roughness,\x20light.direction,\x20normal,\x20viewDir);\x0a\x20\x20\x20\x20float\x20dot\x20=\x20max(dot(normal,\x20light.direction),\x200.0);\x0a\x20\x20\x20\x20return\x20D\x20*\x20fresnel(dot)\x20*\x20light.color;\x0a}\x0a\x0a\x0avec3\x20getViewPos(vec2\x20uv)\x0a{\x0a\x20\x20\x20\x20float\x20depth\x20=\x20RGBA8ToFloat(texture2D(waterDepthMap,\x20uv));\x0a\x20\x20\x20\x20float\x20z\x20=\x20depth\x20*\x20cameraRange\x20+\x20cameraNear;\x0a\x20\x20\x20\x20return\x20frustumVec\x20*\x20vec3(uv\x20*\x202.0\x20-\x201.0,\x201.0)\x20*\x20z;\x0a}\x0a\x0avec3\x20getViewNormal(vec2\x20uv,\x20vec3\x20viewPos)\x0a{\x0a\x20\x20\x20\x20vec3\x20left\x20=\x20getViewPos(uv\x20-\x20vec2(pixelSize.x,\x200.0));\x0a\x20\x20\x20\x20vec3\x20right\x20=\x20getViewPos(uv\x20+\x20vec2(pixelSize.x,\x200.0));\x0a\x20\x20\x20\x20vec3\x20bottom\x20=\x20getViewPos(uv\x20-\x20vec2(0.0,\x20pixelSize.y));\x0a\x20\x20\x20\x20vec3\x20top\x20=\x20getViewPos(uv\x20+\x20vec2(0.0,\x20pixelSize.y));\x0a\x20\x20\x20\x20vec3\x20tanR\x20=\x20normalize(right\x20-\x20left);\x0a\x20\x20\x20\x20vec3\x20tanT\x20=\x20normalize(top\x20-\x20bottom);\x0a\x20\x20\x20\x20return\x20normalize(cross(tanR,\x20tanT));\x0a}\x0a\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20vec2\x20uv2d\x20=\x20gl_FragCoord.xy\x20*\x20pixelSize;\x0a\x0a\x20\x20\x20\x20float\x20depth\x20=\x20RGBA8ToFloat(texture2D(waterDepthMap,\x20uv2d));\x0a\x20\x20\x20\x20if\x20(depth\x20>\x20.9)\x20discard;\x0a\x0a\x20\x20\x20\x20float\x20sceneDepth\x20=\x20RGBA8ToFloat(texture2D(sceneDepthMap,\x20uv2d));\x0a\x0a\x20\x20\x20\x20float\x20z\x20=\x20cameraNear\x20+\x20depth\x20*\x20cameraRange;\x0a\x20\x20\x20\x20vec3\x20viewZNorm\x20=\x20-viewVector\x20/\x20viewVector.z;\x0a\x20\x20\x20\x20vec4\x20viewPos\x20=\x20vec4(z\x20*\x20viewZNorm,\x201.0);\x0a\x20\x20\x20\x20vec3\x20rayPos\x20=\x20(modelViewMatrixInverse\x20*\x20viewPos).xyz;\x0a\x0a\x20\x20\x20\x20//\x20hide\x20particles\x20that\x20end\x20up\x20outside\x20the\x20bounds\x0a\x20\x20\x20\x20if\x20(!isInsideFluidDomain(rayPos,\x20numCells,\x20cellSize))\x20discard;\x0a\x0a\x20\x20\x20\x20float\x20marchLen\x20=\x20distance(viewPos.xyz,\x20viewVector);\x0a\x20\x20\x20\x20float\x20sampleDistance\x20=\x20marchLen\x20/\x20float(NUM_SAMPLES);\x0a\x20\x20\x20\x20sampleDistance\x20=\x20max(sampleDistance,\x20cellSize);\x0a\x0a\x20\x20\x20\x20vec3\x20stepAbsorb\x20=\x20absorption\x20*\x20sampleDistance;\x0a\x20\x20\x20\x20vec3\x20transmittance\x20=\x20exp(-stepAbsorb);\x20\x20//\x20at\x20least\x20SOME\x20transmission\x20to\x20prevent\x20ugly\x20aliasing\x0a\x20\x20\x20\x20vec3\x20color\x20=\x20vec3(0.0);\x0a\x0a\x20\x20\x20\x20vec4\x20projected\x20=\x20projectionMatrix\x20*\x20viewPos;\x0a\x20\x20\x20\x20projected\x20/=\x20projected.w;\x0a\x20\x20\x20\x20gl_FragDepthEXT\x20=\x20projected.z\x20*\x20.5\x20+\x20.5;\x0a\x0a\x20\x20\x20\x20//\x20transform\x20to\x20fluid\x20space\x0a\x20\x20\x20\x20vec3\x20rayStep\x20=\x20normalize(localViewDir)\x20*\x20sampleDistance;\x0a\x20\x20\x20\x20vec4\x20startData\x20=\x20sampleCellLinear(lightAccum,\x20rayPos,\x20numCells,\x20cellSize);\x0a\x20\x20\x20\x20vec4\x20data\x20=\x20startData;\x0a\x0a\x20\x20\x20\x20for\x20(int\x20i\x20=\x200;\x20i\x20<\x20NUM_SAMPLES;\x20++i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dens\x20=\x20data.w;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20light\x20=\x20data.xyz;\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20of\x20that\x20light,\x20only\x20the\x20following\x20amount\x20is\x20transmitted\x20(beer-lambert)\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20absorb\x20=\x20clamp(exp(-dens\x20*\x20stepAbsorb),\x200.0,\x201.0);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20color\x20+=\x20light\x20*\x20transmittance\x20*\x20dens;\x0a\x20\x20\x20\x20\x20\x20\x20\x20transmittance\x20*=\x20absorb;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20rayPos\x20+=\x20rayStep;\x0a\x20\x20\x20\x20\x20\x20\x20\x20data\x20=\x20sampleData(rayPos);\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20vec3\x20viewNormal\x20=\x20getViewNormal(uv2d,\x20viewPos.xyz);\x0a\x20\x20\x20\x20vec3\x20worldNormal\x20=\x20mat3(viewMatrixInverse)\x20*\x20viewNormal;\x0a\x20\x20\x20\x20vec3\x20viewWorldDirNorm\x20=\x20normalize(viewWorldDir.xyz);\x0a\x0a\x20\x20\x20\x20#ifdef\x20SKYBOX\x0a\x20\x20\x20\x20vec3\x20cube\x20=\x20textureCube(skybox,\x20viewWorldDirNorm).xyz;\x0a\x20\x20\x20\x20color.xyz\x20+=\x20transmittance\x20*\x20cube\x20*\x20cube\x20*\x20mie;\x0a\x0a\x20\x20\x20\x20vec3\x20reflect\x20=\x20reflect(viewWorldDirNorm,\x20worldNormal);\x0a\x20\x20\x20\x20vec3\x20reflSamp\x20=\x20textureCube(skybox,\x20-reflect).xyz;\x0a\x0a\x20\x20\x20\x20//\x20we\x27re\x20using\x20the\x20start\x20density\x20to\x20prevent\x20overly\x20strong\x20reflections\x20on\x20drops\x20(they\x20have\x20low\x20density)\x0a\x20\x20\x20\x20float\x20fresnelFactor\x20=\x20fresnel(max(dot(reflect,\x20worldNormal),\x200.0))\x20*\x20startData.w;\x0a\x20\x20\x20\x20color.xyz\x20=\x20mix(color.xyz,\x20reflSamp\x20*\x20reflSamp\x20*\x20(1.0\x20-\x20roughness),\x20fresnelFactor);\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20viewDir\x20=\x20-normalize(viewVector);\x0a\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20++i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20+=\x20getReflectedLight(directionalLights[i],\x20viewNormal,\x20viewDir);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20float\x20distToScene\x20=\x20(sceneDepth\x20-\x20depth)\x20*\x20cameraRange\x20+\x20.01;\x0a\x20\x20\x20\x20gl_FragColor.xyz\x20=\x20sqrt(color);\x0a\x20\x20\x20\x20float\x20alpha\x20=\x201.0\x20-\x20exp(-transparencyFactor\x20*\x20distToScene);\x0a\x20\x20\x20\x20gl_FragColor.w\x20=\x20clamp(alpha,\x200.0,\x201.0);\x0a}','sph_particle_depth_vertex.glsl','_getGaussian','far','clearTarget','_assets','mousewheel','execute','getValueAt','_rtOptions','cameraPos','_onMouseUp','ShaderPass','fogDensity','merge','depthWrite','parser','unlit_fragment','varying\x20vec2\x20texCoords;\x0auniform\x20sampler2D\x20velocityBuffer;\x0auniform\x20sampler2D\x20positionBuffer;\x0auniform\x20sampler2D\x20accelBuffer;\x0a\x0auniform\x20float\x20dt;\x0auniform\x20vec3\x20wallExtent;\x0auniform\x20float\x20maxParticleIndex;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec4\x20posSample\x20=\x20texture2D(positionBuffer,\x20texCoords);\x0a\x20\x20\x20\x20vec3\x20a_i\x20=\x20texture2D(accelBuffer,\x20texCoords).xyz;\x0a\x20\x20\x20\x20vec3\x20v_i\x20=\x20texture2D(velocityBuffer,\x20texCoords).xyz;\x0a\x20\x20\x20\x20vec3\x20x_i\x20=\x20posSample.xyz;\x0a\x20\x20\x20\x20float\x20thisIndex\x20=\x20posSample.w;\x0a\x0a\x20\x20\x20\x20vec3\x20x_i_1\x20=\x20x_i\x20+\x20dt\x20*\x20(v_i\x20+\x20.5\x20*\x20a_i\x20*\x20dt);\x0a\x0a//\x20\x20\x20\x20x_i_1\x20=\x20min(x_i_1,\x20wallExtent);\x0a//\x20\x20\x20\x20x_i_1\x20=\x20max(x_i_1,\x20-wallExtent);\x0a\x0a\x20\x20\x20\x20if\x20(thisIndex\x20>\x20maxParticleIndex)\x0a\x20\x20\x20\x20\x20\x20\x20\x20x_i_1\x20=\x20x_i;\x0a\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(x_i_1,\x20thisIndex);\x0a}\x0a','collider','attribute\x20vec2\x20positionUV;\x0aattribute\x20float\x20particleIndex;\x0a\x0auniform\x20sampler2D\x20positionBuffer;\x0auniform\x20vec3\x20numCells;\x0auniform\x20float\x20numParticles;\x0auniform\x20float\x20cellSize;\x0a\x0avarying\x20float\x20index;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec4\x20localPos\x20=\x20vec4(texture2D(positionBuffer,\x20positionUV).xyz,\x201.0);\x0a\x20\x20\x20\x20vec2\x20uv\x20=\x20getBucketUV(localPos.xyz,\x20numCells,\x20cellSize);\x0a\x0a\x20\x20\x20\x20//\x20write\x20index\x20to\x20depth\x0a\x20\x20\x20\x20gl_Position\x20=\x20vec4(uv\x20*\x202.0\x20-\x201.0,\x20particleIndex\x20/\x20numParticles\x20*\x202.0\x20-\x201.0,\x201.0);\x0a\x20\x20\x20\x20gl_PointSize\x20=\x201.0;\x0a\x0a\x20\x20\x20\x20//\x20When\x20reading,\x20we\x20assume\x200\x20(clear\x20value)\x20means\x20\x22no\x20particle\x22\x0a\x20\x20\x20\x20index\x20=\x20particleIndex\x20+\x201.0;\x0a}','DOMMouseScroll','floor','destroyEntity','detail','varying\x20vec3\x20worldPosition;\x0avarying\x20vec3\x20viewPosition;\x0avarying\x20vec3\x20worldNormal;\x0a\x0auniform\x20float\x20roughness;\x0auniform\x20float\x20normalSpecularReflection;\x0a\x0a#ifdef\x20SPECULAR_PROBE\x0auniform\x20samplerCube\x20specularProbe;\x0a#endif\x0a\x0a#if\x20NUM_POINT_LIGHTS\x20>\x200\x0astruct\x20PointLight\x20{\x0a\x20\x20\x20\x20vec3\x20position;\x0a\x20\x20\x20\x20vec3\x20color;\x0a\x20\x20\x20\x20float\x20distance;\x0a\x20\x20\x20\x20float\x20decay;\x0a\x20\x20\x20\x20int\x20shadow;\x0a\x20\x20\x20\x20float\x20shadowBias;\x0a\x20\x20\x20\x20float\x20shadowRadius;\x0a\x20\x20\x20\x20vec2\x20shadowMapSize;\x0a};\x0a\x0auniform\x20PointLight\x20pointLights[\x20NUM_POINT_LIGHTS\x20];\x0a#endif\x0a\x0a#if\x20NUM_DIR_LIGHTS\x20>\x200\x0astruct\x20DirectionalLight\x20{\x0a\x20\x20\x20\x20vec3\x20direction;\x0a\x20\x20\x20\x20vec3\x20color;\x0a\x20\x20\x20\x20int\x20shadow;\x0a\x20\x20\x20\x20float\x20shadowBias;\x0a\x20\x20\x20\x20float\x20shadowRadius;\x0a\x20\x20\x20\x20vec2\x20shadowMapSize;\x0a};\x0auniform\x20DirectionalLight\x20directionalLights[\x20NUM_DIR_LIGHTS\x20];\x0a#endif\x0a\x0avec3\x20getNormal()\x0a{\x0a\x20\x20\x20\x20return\x20normalize(worldNormal);\x0a}\x0a\x0afloat\x20fresnel(float\x20NdotL)\x0a{\x0a//\x20angle\x20to\x20the\x20power\x20of\x205\x0a\x20\x20\x20\x20float\x20angle\x20=\x201.0\x20-\x20NdotL;\x0a\x20\x20\x20\x20float\x20fresnelFactor\x20=\x20angle\x20*\x20angle;\x0a\x20\x20\x20\x20fresnelFactor\x20*=\x20fresnelFactor;\x0a\x20\x20\x20\x20fresnelFactor\x20*=\x20angle;\x0a\x20\x20\x20\x20return\x20normalSpecularReflection\x20+\x20(1.0\x20-\x20normalSpecularReflection)\x20*\x20fresnelFactor;\x0a}\x0a\x0afloat\x20trowbridgeReitz(float\x20roughnessSqr,\x20vec3\x20lightDir,\x20vec3\x20normal,\x20vec3\x20viewDir)\x0a{\x0a\x20\x20\x20\x20vec3\x20halfVec\x20=\x20normalize(lightDir\x20+\x20viewDir);\x0a\x20\x20\x20\x20float\x20micro\x20=\x20max(dot(halfVec,\x20normal),\x200.0);\x0a\x20\x20\x20\x20float\x20denom\x20=\x20(micro\x20*\x20micro)\x20*\x20(roughnessSqr\x20-\x201.0)\x20+\x201.0;\x0a\x20\x20\x20\x20return\x20roughnessSqr\x20/\x20(denom\x20*\x20denom);\x0a}\x0a\x0avec3\x20accumulate(vec3\x20lightDir,\x20vec3\x20lightColor,\x20vec3\x20normal,\x20vec3\x20viewDir,\x20float\x20roughnessSqr)\x0a{\x0a\x20\x20\x20\x20float\x20NdotL\x20=\x20max(dot(lightDir,\x20normal),\x200.0);\x0a\x20\x20\x20\x20vec3\x20irradiance\x20=\x20lightColor\x20*\x20NdotL;\x0a\x0a\x20\x20\x20\x20float\x20F\x20=\x20fresnel(NdotL);\x0a\x20\x20\x20\x20float\x20D\x20=\x20trowbridgeReitz(roughnessSqr,\x20lightDir,\x20normal,\x20viewDir);\x0a\x20\x20\x20\x20float\x20amount\x20=\x20D\x20*\x20F;\x0a\x0a\x20\x20\x20\x20return\x20irradiance\x20*\x20amount;\x0a}\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20float\x20roughnessSqr\x20=\x20roughness\x20*\x20roughness;\x0a\x20\x20\x20\x20vec3\x20viewDir\x20=\x20-normalize(viewPosition);\x0a\x0a\x20\x20\x20\x20vec3\x20normal\x20=\x20getNormal();\x0a\x20\x20\x20\x20vec3\x20viewNormal\x20=\x20mat3(viewMatrix)\x20*\x20normal;\x0a\x0a\x20\x20\x20\x20vec3\x20specularLight\x20=\x20vec3(0.0);\x0a\x0a\x20\x20\x20\x20#ifdef\x20SPECULAR_PROBE\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20viewWorldDir\x20=\x20normalize(cameraPosition\x20-\x20worldPosition);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20reflectedView\x20=\x20-reflect(viewWorldDir,\x20normal);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fresnelFactor\x20=\x20fresnel(max(dot(viewWorldDir,\x20normal),\x200.0));\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20reflection\x20=\x20textureCube(specularProbe,\x20reflectedView).xyz;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20specularLight\x20+=\x20reflection\x20*\x20reflection\x20*\x20fresnelFactor;\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x20\x20\x20\x20for\x20(int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20++i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20worldDir\x20=\x20pointLights[i].position\x20-\x20worldPosition;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20sqrDist\x20=\x20dot(worldDir,\x20worldDir);\x0a\x20\x20\x20\x20\x20\x20\x20\x20worldDir\x20/=\x20sqrt(sqrDist);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20fallOffColor\x20=\x20pointLights[i].color\x20/\x20max(sqrDist,\x20.001);\x0a\x20\x20\x20\x20\x20\x20\x20\x20specularLight\x20+=\x20accumulate(worldDir,\x20fallOffColor,\x20normal,\x20viewDir,\x20roughnessSqr);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x20\x20\x20\x20for\x20(int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20++i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20NdotL\x20=\x20max(dot(directionalLights[i].direction,\x20viewNormal),\x200.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20irradiance\x20=\x20directionalLights[i].color\x20*\x20NdotL;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20F\x20=\x20fresnel(NdotL);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20D\x20=\x20trowbridgeReitz(roughnessSqr,\x20directionalLights[i].direction,\x20viewNormal,\x20viewDir);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20amount\x20=\x20D\x20*\x20F;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20specularLight\x20+=\x20irradiance\x20*\x20amount;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20vec3\x20color\x20=\x20specularLight;\x0a\x0a\x20\x20\x20\x20gl_FragColor.xyz\x20=\x20sqrt(color);\x0a\x20\x20\x20\x20gl_FragColor.w\x20=\x201.0;\x0a}\x0a','uniforms','push','cameraNear','THREE.Pass:\x20.render()\x20must\x20be\x20implemented\x20in\x20derived\x20pass.','uniform\x20sampler2D\x20tDiffuse;\x0a\x0avarying\x20vec2\x20vUv;\x0a\x0auniform\x20vec2\x20sampleStep;\x0auniform\x20float\x20weights[NUM_WEIGHTS];\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20vec3\x20col\x20=\x20decodeHDRE(texture2D(tDiffuse,\x20vUv))\x20*\x20weights[0];\x0a\x0a\x20\x20\x20\x20for\x20(int\x20i\x20=\x201;\x20i\x20<=\x20KERNEL_RADIUS;\x20++i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20offset\x20=\x20float(i)\x20*\x20sampleStep;\x0a\x20\x20\x20\x20\x20\x20\x20\x20col\x20+=\x20(decodeHDRE(texture2D(tDiffuse,\x20vUv\x20+\x20offset))\x20+\x20decodeHDRE(texture2D(tDiffuse,\x20vUv\x20-\x20offset)))\x20*\x20weights[i];\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20encodeHDRE(col);\x0a}\x0a','faces','#define\x20FOG\x0a','include_common','dielectric_fragment','_stats','uniform\x20vec3\x20wallExtent;\x0auniform\x20vec3\x20numCells;\x0auniform\x20float\x20cellSize;\x0a\x0afloat\x20getDistance(vec3\x20pos)\x0a{\x0a\x20\x20\x20\x20return\x20signedDistanceWalls(pos,\x20wallExtent);\x0a}\x0a\x0avec3\x20getNormal(vec3\x20pos)\x0a{\x0a\x20\x20\x20\x20float\x20r\x20=\x20getDistance(pos\x20+\x20vec3(cellSize,\x200.0,\x200.0));\x0a\x20\x20\x20\x20float\x20l\x20=\x20getDistance(pos\x20-\x20vec3(cellSize,\x200.0,\x200.0));\x0a\x20\x20\x20\x20float\x20t\x20=\x20getDistance(pos\x20+\x20vec3(0.0,\x20cellSize,\x200.0));\x0a\x20\x20\x20\x20float\x20b\x20=\x20getDistance(pos\x20-\x20vec3(0.0,\x20cellSize,\x200.0));\x0a\x20\x20\x20\x20float\x20n\x20=\x20getDistance(pos\x20+\x20vec3(0.0,\x200.0,\x20cellSize));\x0a\x20\x20\x20\x20float\x20f\x20=\x20getDistance(pos\x20-\x20vec3(0.0,\x200.0,\x20cellSize));\x0a\x0a\x20\x20\x20\x20//\x20normalization\x20happens\x20in\x20collision\x20test\x20anyway,\x20so\x20no\x20need\x20for\x20it\x20here\x0a\x20\x20\x20\x20return\x20normalize(vec3(r\x20-\x20l,\x20t\x20-\x20b,\x20n\x20-\x20f));\x0a}\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec3\x20pos\x20=\x20getCellPositionFromFragCoord(gl_FragCoord.xy,\x20numCells,\x20cellSize);\x0a\x20\x20\x20\x20float\x20dist\x20=\x20getDistance(pos);\x0a\x20\x20\x20\x20vec3\x20normal\x20=\x20getNormal(pos);\x0a\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(normal,\x20dist);\x0a}\x0a','_executeImpl','string','gaussian_blur_hdre_fragment','intersectObject','_particleMass','CIRCULAR','pointGeometry','sph_heightmap_collider_fragment.glsl','GreaterDepth','source','passes','addLight','cellSize','Component\x20already\x20added\x20to\x20an\x20entity!','sph_init_velocity_stream','apply','_sky','KERNEL_RADIUS','uniform\x20sampler2D\x20tDiffuse;\x0a\x0avarying\x20vec2\x20vUv;\x0a\x0auniform\x20vec2\x20sampleStep;\x0auniform\x20float\x20weights[NUM_WEIGHTS];\x0auniform\x20float\x20depthRange;\x0a\x0afloat\x20getWeight(float\x20depth,\x20float\x20refDepth,\x20float\x20baseWeight)\x0a{\x0a//\x20\x20\x20\x20return\x20abs(refDepth\x20-\x20depth)\x20<\x20depthRange?\x20baseWeight:\x200.0;\x0a\x20\x20\x20\x20float\x20diff\x20=\x20abs(refDepth\x20-\x20depth)\x20/\x20depthRange;\x0a\x20\x20\x20\x20float\x20weight\x20=\x20max(1.0\x20-\x20diff,\x200.0);\x0a//\x20\x20\x20\x20weight\x20=\x20pow(weight,\x20.001);\x0a\x20\x20\x20\x20return\x20baseWeight\x20*\x20weight;\x0a}\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20float\x20total\x20=\x20weights[0];\x0a\x20\x20\x20\x20float\x20center\x20=\x20RGBA8ToFloat(texture2D(tDiffuse,\x20vUv));\x0a\x20\x20\x20\x20float\x20val\x20=\x20center\x20*\x20weights[0];\x0a\x0a\x20\x20\x20\x20for\x20(int\x20i\x20=\x201;\x20i\x20<=\x20KERNEL_RADIUS;\x20++i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20offset\x20=\x20float(i)\x20*\x20sampleStep;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20samp\x20=\x20RGBA8ToFloat(texture2D(tDiffuse,\x20vUv\x20+\x20offset));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20weight\x20=\x20getWeight(samp,\x20center,\x20weights[i]);\x0a\x20\x20\x20\x20\x20\x20\x20\x20val\x20+=\x20samp\x20*\x20weight;\x0a\x20\x20\x20\x20\x20\x20\x20\x20total\x20+=\x20weight;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20samp\x20=\x20RGBA8ToFloat(texture2D(tDiffuse,\x20vUv\x20-\x20offset));\x0a\x20\x20\x20\x20\x20\x20\x20\x20weight\x20=\x20getWeight(samp,\x20center,\x20weights[i]);\x0a\x20\x20\x20\x20\x20\x20\x20\x20val\x20+=\x20samp\x20*\x20weight;\x0a\x20\x20\x20\x20\x20\x20\x20\x20total\x20+=\x20weight;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20floatToRGBA8(val\x20/\x20total);\x0a}\x0a','getInverse','#define\x20FOG_PROBE\x0a','WebGLRenderTarget','_invalid','MODEL','format','Matrix4','aspect','linear_depth_fragment','div','_updateQueue','BALL_MODE','isEntity','block','_isRunning','blending','ZeroFactor','now','_mode','sph_wall_collider_fragment','sph_bucket_fragment.glsl','devicePixelRatio','_updateBucket','_initialDistance','queueAsset','_densityBuffer','_fluidMaterial','Already\x20running!','_content','EXT_blend_minmax','sph_heightmap_collider_fragment','_init','GET','unlit_vertex.glsl','_localAcceleration','_plainText','scene','_width','glass_vertex','touches','_renderParticles','THREE.EffectComposer\x20relies\x20on\x20THREE.CopyShader','skyboxSize','getHex','varying\x20vec2\x20texCoords;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20gl_Position\x20=\x20vec4(position,\x201.0);\x0a\x20\x20\x20\x20texCoords\x20=\x20uv;\x0a}\x0a','_basePath','_bucketPixelSize','indexOf','_halfFloatType','_isValid','gl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);','_specularProbeBoost','keydown','_childQueues','LinearFilter','attribute\x20vec2\x20positionUV;\x0a\x0auniform\x20sampler2D\x20positionBuffer;\x0auniform\x20vec3\x20numCells;\x0auniform\x20float\x20cellSize;\x0auniform\x20float\x20particleRadius;\x0auniform\x20float\x20zSliceOffset;\x0a\x0avarying\x20vec3\x20particlePosition;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec4\x20localPos\x20=\x20vec4(texture2D(positionBuffer,\x20positionUV).xyz,\x201.0);\x0a\x20\x20\x20\x20vec2\x20uv\x20=\x20getBucketUV(localPos.xyz,\x20numCells,\x20cellSize);\x0a\x20\x20\x20\x20uv.x\x20+=\x20zSliceOffset\x20/\x20numCells.z;\x0a\x0a\x20\x20\x20\x20gl_Position\x20=\x20vec4(uv\x20*\x202.0\x20-\x201.0,\x200.0,\x201.0);\x0a\x0a\x20\x20\x20\x20float\x20rad\x20=\x20cos(zSliceOffset\x20*\x20cellSize\x20/\x20particleRadius\x20*\x20PI\x20*\x20.5);\x0a\x20\x20\x20\x20float\x20pointSize\x20=\x20ceil(particleRadius\x20/\x20cellSize\x20*\x202.0\x20*\x20rad)\x20+\x201.0;\x0a\x20\x20\x20\x20gl_PointSize\x20=\x20pointSize;\x0a\x0a\x20\x20\x20\x20particlePosition\x20=\x20localPos.xyz;\x0a}','zIndex','readBuffer','#define\x20EMISSION_MAP\x0a','setSize','_initListeners','_time','409463urVYPS','_updateMove','target','copyPass','#define\x20AO_ON_DIFFUSE\x0a','1933866RfCYoY','touchend','join','generateMipmaps','getStartParticleCount','restDistance','numCells','mouseup','restDensity','color:#f00;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px','_onMouseDown','negY.jpg','Vector4','Geometries:\x20','error','width:80px;opacity:0.9;cursor:pointer','_localVelocity','clientX','_volume','_currentIndex','distance_functions','densityBuffer','_json','492583oDerBO','posY.jpg','mousemove','assign','rotation','include_sph.glsl','Component\x20wasn\x27t\x20added\x20to\x20this\x20entity!','dielectric_vertex','minFilter','_oldMouseX','_updatePosition','errorMessage','responseText','lightAccum','AdditiveBlending','TEXTURE_CUBE','==\x20Memory\x20=====','_accelMaterial','roughnessMapRange','Textures:\x20','roughness','onreadystatechange','scale','debug','_zRange','_pointRenderer','sceneDepthMap','_onAssetLoaded','RenderPass','_numLightSamples','autoClear','linear_depth_vertex.glsl','_onTouchMove','200','blendSrcAlpha','origin','_halfExtent','false','map','_initParticles','matrixWorld','blendDst','bilat_gaussian_blur_fragment','_updateRaycaster','KEEP','state','linear_depth_vertex','dispose','negZ.jpg','numParticles','copy','UniformsLib','ceil','specularProbeColor','_bucketMaterial','specularProbe','color','sph_bucket_fragment','ALWAYS','sph_density_fragment.glsl','addEventListener','content','_texture2D','_onTouchDown','_updateRequiresUpdates','_resizeCanvas','viewportSize','_positionBuffer','extensions','removeEventListener','sph_velocity_fragment','skybox','particleBufferSize','ShaderMaterial','textures/cascademap.jpg','accelBuffer2','bucketBuffer','preloaderProgress','particleIndex','_camera','height','_requiresUpdates','color:#f00;background-color:#311;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px','_boxSize','_onKeyDown','material','Scene','Vector3','faceNormals','_material','sky_fragment','userAgent','_onUp','waterDepthMap','EffectComposer','skyboxPosition','aoOnDiffuse','_fluidMesh','glass_fragment','467QYiFkl','_rayCaster','textContent','fromRadius','swapSelect','#define\x20AMBIENT_OCCLUSION_MAP\x0a','_particleBufferSize','sph_particle_depth_vertex','Vertices:\x20','ONE','volumetric_vertex','_renderStats','sampleStep','camera','particleMass','sph_distance_fragment','quaternion','random','==\x20Render\x20=====','buffers','addAttribute','magFilter','emissionColor','_assetLibrary','none','vertexShader','needsSwap','sph_particle_point_vertex.glsl','include_common.glsl','rcpCameraRange','fogColor','FloatType','Spherical','swapBuffers','multiplyMatrices','.glsl','_fluidAbsorption','open','_mie','_coords','_updateDensity','Programs:\x20','WebGLRenderer','_addUpdatableEntity','enabled','type','_setup','update','vertices','_lightingRenderer','_currentDistance','children','setFromCamera','copyGammaToLinear','LOW','_moveVelocity','_target','needsUpdate','INCR','_quad','HIGH','3099NWtkGU','bottom','CylinderBufferGeometry','varying\x20vec2\x20texCoords;\x0a\x0auniform\x20sampler2D\x20densityField;\x0auniform\x20samplerCube\x20irradiance;\x0auniform\x20vec3\x20numCells;\x0auniform\x20vec3\x20absorption;\x0auniform\x20vec3\x20cameraPos;\x0auniform\x20float\x20sampleStep;\x0auniform\x20float\x20cellSize;\x0auniform\x20vec3\x20mieG;\x0a\x0astruct\x20DirectionalLight\x20{\x0a\x20\x20\x20\x20vec3\x20direction;\x0a\x20\x20\x20\x20vec3\x20color;\x0a\x20\x20\x20\x20int\x20shadow;\x0a\x20\x20\x20\x20float\x20shadowBias;\x0a\x20\x20\x20\x20float\x20shadowRadius;\x0a\x20\x20\x20\x20vec2\x20shadowMapSize;\x0a};\x0a\x0astruct\x20PointLight\x20{\x0a\x20\x20\x20\x20vec3\x20position;\x0a\x20\x20\x20\x20vec3\x20color;\x0a\x20\x20\x20\x20float\x20distance;\x0a\x20\x20\x20\x20float\x20decay;\x0a\x20\x20\x20\x20int\x20shadow;\x0a\x20\x20\x20\x20float\x20shadowBias;\x0a\x20\x20\x20\x20float\x20shadowRadius;\x0a\x20\x20\x20\x20vec2\x20shadowMapSize;\x0a};\x0a\x0a#if\x20NUM_DIR_LIGHTS\x20>\x200\x0auniform\x20DirectionalLight\x20directionalLights[\x20NUM_DIR_LIGHTS\x20];\x0a#endif\x0a\x0a#if\x20NUM_POINT_LIGHTS\x20>\x200\x0auniform\x20PointLight\x20pointLights[\x20NUM_POINT_LIGHTS\x20];\x0a#endif\x0a\x0a\x0a//\x20does\x20this\x20contain\x20anything\x20useful?\x0a//\x20http://orbit.dtu.dk/files/5501107/paper.pdf\x0avec3\x20mieFactor(vec3\x20lightDir,\x20vec3\x20viewDir)\x0a{\x0a\x20\x20\x20\x20float\x20cosAng\x20=\x20dot(lightDir,\x20viewDir);\x0a\x20\x20\x20\x20vec3\x20num\x20=\x20vec3(1.0)\x20-\x20mieG;\x0a\x20\x20\x20\x20vec3\x20p\x20=\x20vec3(1.0)\x20+\x20mieG*mieG\x20-\x202.0\x20*\x20mieG\x20*\x20cosAng;\x0a\x20\x20\x20\x20p.x\x20=\x20pow(p.x,\x201.5);\x0a\x20\x20\x20\x20p.y\x20=\x20pow(p.y,\x201.5);\x0a\x20\x20\x20\x20p.z\x20=\x20pow(p.z,\x201.5);\x0a\x20\x20\x20\x20return\x20num\x20*\x20num\x20/\x20(4.0\x20*\x20PI\x20*\x20p);\x0a}\x0a\x0afloat\x20sampleDensity(vec3\x20pos)\x0a{\x0a\x20\x20\x20\x20vec4\x20samp\x20=\x20sampleCellLinear(densityField,\x20pos,\x20numCells,\x20cellSize);\x0a\x20\x20\x20\x20#ifdef\x20WATER\x0a\x20\x20\x20\x20\x20\x20\x20\x20samp.x\x20=\x20samp.x\x20<\x200.0?\x201.0\x20:\x200.0;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20return\x20isInsideFluidDomain(pos,\x20numCells,\x20cellSize)?\x20samp.x\x20:\x200.0;\x0a}\x0a\x0avec3\x20getTransmittedLight(vec3\x20pos,\x20DirectionalLight\x20light,\x20vec3\x20viewDir)\x0a{\x0a\x20\x20\x20\x20float\x20amount\x20=\x200.0;\x0a\x20\x20\x20\x20vec3\x20marchStep\x20=\x20light.direction\x20*\x20sampleStep;\x0a\x20\x20\x20\x20for\x20(int\x20i\x20=\x200;\x20i\x20<\x20NUM_SAMPLES;\x20++i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20amount\x20+=\x20sampleDensity(pos);\x0a\x20\x20\x20\x20\x20\x20\x20\x20pos\x20+=\x20marchStep;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20vec3\x20mie\x20=\x20mieFactor(light.direction,\x20viewDir);\x0a\x0a\x20\x20\x20\x20return\x20exp(-amount\x20*\x20absorption\x20*\x20sampleStep)\x20*\x20light.color\x20*\x20mie;\x0a}\x0a\x0avec3\x20getTransmittedLight(vec3\x20pos,\x20PointLight\x20light,\x20vec3\x20viewDir,\x20vec3\x20localPos)\x0a{\x0a\x20\x20\x20\x20float\x20amount\x20=\x200.0;\x0a\x20\x20\x20\x20vec3\x20lightDir\x20=\x20light.position\x20-\x20localPos;\x0a\x20\x20\x20\x20float\x20len\x20=\x20length(lightDir);\x0a\x20\x20\x20\x20float\x20step\x20=\x20min(len\x20/\x20float(NUM_SAMPLES),\x20sampleStep);\x0a\x20\x20\x20\x20lightDir\x20=\x20normalize(lightDir);\x0a\x20\x20\x20\x20vec3\x20marchStep\x20=\x20lightDir\x20*\x20step;\x0a\x0a\x20\x20\x20\x20for\x20(int\x20i\x20=\x200;\x20i\x20<\x20NUM_SAMPLES;\x20++i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20pos\x20+=\x20marchStep;\x0a\x20\x20\x20\x20\x20\x20\x20\x20amount\x20+=\x20sampleDensity(pos);\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20vec3\x20mie\x20=\x20mieFactor(lightDir,\x20viewDir);\x0a\x0a//\x20pretend\x20the\x20light\x20has\x20some\x20sort\x20of\x20size\x0a//\x20\x20\x20\x20len\x20=\x20max(len,\x2010.0);\x0a\x20\x20\x20\x20return\x20exp(-amount\x20*\x20absorption\x20*\x20step)\x20*\x20mie\x20*\x20light.color\x20/\x20(len\x20*\x20len);\x0a}\x0a\x0avec3\x20getGlobalIllum()\x0a{\x0a\x20\x20\x20\x20float\x20occlStrength\x20=\x20.1;\x0a\x20\x20\x20\x20float\x20sampleDist\x20=\x202.0;\x0a\x20\x20\x20\x20vec2\x20rcpTexSize\x20=\x20vec2(1.0\x20/\x20(numCells.x\x20*\x20numCells.z),\x201.0\x20/\x20numCells.y)\x20*\x20sampleDist;\x0a\x20\x20\x20\x20float\x20right\x20=\x20texture2D(densityField,\x20texCoords\x20+\x20vec2(rcpTexSize.x,\x200.0)).x;\x0a\x20\x20\x20\x20float\x20left\x20=\x20texture2D(densityField,\x20texCoords\x20-\x20vec2(rcpTexSize.x,\x200.0)).x;\x0a\x20\x20\x20\x20float\x20top\x20=\x20texture2D(densityField,\x20texCoords\x20+\x20vec2(0.0,\x20rcpTexSize.y)).x;\x0a\x20\x20\x20\x20float\x20bottom\x20=\x20texture2D(densityField,\x20texCoords\x20-\x20vec2(0.0,\x20rcpTexSize.y)).x;\x0a\x20\x20\x20\x20float\x20far\x20=\x20texture2D(densityField,\x20texCoords\x20+\x20vec2(sampleDist/numCells.z,\x200.0)).x;\x0a\x20\x20\x20\x20float\x20near\x20=\x20texture2D(densityField,\x20texCoords\x20-\x20vec2(sampleDist/numCells.z,\x200.0)).x;\x0a\x20\x20\x20\x20//\x20use\x20the\x20inverse\x20gradient\x20as\x20the\x20hint\x20of\x20direction\x20where\x20most\x20light\x20comes\x20from\x20(similar\x20to\x20bent\x20normals)\x0a\x20\x20\x20\x20vec3\x20grad\x20=\x20-normalize(vec3(right\x20-\x20left,\x20top\x20-\x20bottom,\x20far\x20-\x20near));\x0a\x20\x20\x20\x20right\x20=\x20clamp(right\x20*\x20occlStrength,\x200.0,\x201.0);\x0a\x20\x20\x20\x20left\x20=\x20clamp(left\x20*\x20occlStrength,\x200.0,\x201.0);\x0a\x20\x20\x20\x20top\x20=\x20clamp(top\x20*\x20occlStrength,\x200.0,\x201.0);\x0a\x20\x20\x20\x20bottom\x20=\x20clamp(bottom\x20*\x20occlStrength,\x200.0,\x201.0);\x0a\x20\x20\x20\x20far\x20=\x20clamp(far\x20*\x20occlStrength,\x200.0,\x201.0);\x0a\x20\x20\x20\x20near\x20=\x20clamp(near\x20*\x20occlStrength,\x200.0,\x201.0);\x0a\x0a\x20\x20\x20\x20float\x20occl\x20=\x20(6.0\x20-\x20right\x20-\x20left\x20-\x20top\x20-\x20bottom\x20-\x20far\x20-\x20near)\x20/\x206.0;\x0a\x20\x20\x20\x20vec3\x20cube\x20=\x20textureCube(irradiance,\x20grad).xyz;\x0a\x20\x20\x20\x20return\x20cube\x20*\x20cube\x20*\x20occl;\x0a}\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec4\x20data\x20=\x20texture2D(densityField,\x20texCoords);\x0a\x20\x20\x20\x20vec3\x20localPos\x20=\x20getCellPosition(texCoords,\x20numCells,\x20cellSize);\x0a\x20\x20\x20\x20vec3\x20color\x20=\x20vec3(0.0);\x0a\x20\x20\x20\x20vec3\x20viewDir\x20=\x20normalize(cameraPos\x20-\x20localPos);\x0a\x0a\x20\x20\x20\x20#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20++i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20+=\x20getTransmittedLight(localPos,\x20directionalLights[i],\x20viewDir);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20++i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20+=\x20getTransmittedLight(localPos,\x20pointLights[i],\x20viewDir,\x20localPos);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#ifndef\x20WATER\x0a\x20\x20\x20\x20color\x20+=\x20getGlobalIllum()\x20*\x20clamp(data.x,\x200.0,\x201.0);\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20gl_FragColor.xyz\x20=\x20color;\x0a\x0a\x20\x20\x20\x20#ifdef\x20WATER\x0a//\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor.w\x20=\x20smoothstep(0.0,\x20-0.001,\x20data.x);\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor.w\x20=\x20data.x\x20<\x200.0?\x201.0\x20:\x200.0;\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor.w\x20=\x20data.x;\x0a\x20\x20\x20\x20#endif\x0a}','NUM_WEIGHTS','_onMouseWheel','_maxParticles','varying\x20float\x20index;\x0auniform\x20float\x20numParticles;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(index);\x0a}\x0a','touchmove','uniform\x20sampler2D\x20tDiffuse;','create','_dragging','value','DataTexture','minPolar','boxSize','velocityBuffer','decompose','setPolarImpulse','Calls:\x20','DirectionalLight','varying\x20vec2\x20texCoords;\x0auniform\x20sampler2D\x20positionBuffer;\x0auniform\x20sampler2D\x20velocityBuffer;\x0auniform\x20sampler2D\x20accelBuffer1;\x0auniform\x20sampler2D\x20accelBuffer2;\x0auniform\x20sampler2D\x20collisionBuffer;\x0a\x0auniform\x20float\x20dt;\x0auniform\x20vec3\x20numCells;\x0auniform\x20float\x20cellSize;\x0auniform\x20float\x20restDistance;\x0auniform\x20float\x20maxParticleIndex;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec4\x20posSample\x20=\x20texture2D(positionBuffer,\x20texCoords);\x0a\x20\x20\x20\x20vec3\x20a_i\x20=\x20texture2D(accelBuffer1,\x20texCoords).xyz;\x0a\x20\x20\x20\x20vec3\x20a_i_p\x20=\x20texture2D(accelBuffer2,\x20texCoords).xyz;\x0a\x20\x20\x20\x20vec3\x20v_i\x20=\x20texture2D(velocityBuffer,\x20texCoords).xyz;\x0a\x20\x20\x20\x20vec3\x20x_i\x20=\x20posSample.xyz;\x0a\x20\x20\x20\x20float\x20thisIndex\x20=\x20posSample.w;\x0a\x0a\x20\x20\x20\x20vec3\x20v_i_1\x20=\x20v_i\x20+\x20dt\x20*\x20(a_i\x20+\x20a_i_p)\x20*\x20.5;\x0a\x0a\x20\x20\x20\x20vec3\x20x_i_1\x20=\x20x_i\x20+\x20v_i_1\x20*\x20dt;\x0a\x20\x20\x20\x20vec4\x20boundSample\x20=\x20sampleCellLinear(collisionBuffer,\x20x_i_1,\x20numCells,\x20cellSize);\x0a\x20\x20\x20\x20vec3\x20wallNormal\x20=\x20normalize(boundSample.xyz);\x0a\x20\x20\x20\x20float\x20wallDist\x20=\x20max(restDistance\x20*\x202.0\x20-\x20boundSample.w,\x200.0);\x0a\x20\x20\x20\x20//\x20move\x20the\x20particle\x20back\x20to\x20the\x20correct\x20rest\x20distance,\x20this\x20enforces\x20no-slip\x20condition\x20on\x20velocity\x0a\x20\x20\x20\x20x_i_1\x20+=\x20wallDist\x20*\x20wallNormal;\x0a\x20\x20\x20\x20//\x20update\x20the\x20velocity\x20to\x20match\x0a\x20\x20\x20\x20v_i_1\x20=\x20(x_i_1\x20-\x20x_i)\x20/\x20dt;\x0a\x0a\x20\x20\x20\x20if\x20(thisIndex\x20>\x20maxParticleIndex)\x0a\x20\x20\x20\x20\x20\x20\x20\x20v_i_1\x20=\x20initVelocity(thisIndex,\x20numCells,\x20cellSize);\x0a\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(v_i_1,\x201.0);\x0a}\x0a','_updateableEntities','fogProbeBoost','OrthographicCamera','_components','multiplyScalar','_particleSim','ray','set','_blurMaterial','load','bind','setAll','textures','accelBuffer1','_restDistance','lowPerformance','lookAtTarget','getElementById','blendEquation','_velocityBuffer','_restDensity','posZ.jpg','keyCode','renderTarget1','splice','dampen','padding:0\x200\x203px\x203px;text-align:left;background-color:#200;','SKYBOX','LinearMipMapLinearFilter','spherePosition','Points','geometries','_targetFBO','_positionMaterial','Mesh','maxPolar','varying\x20vec2\x20texCoords;\x0auniform\x20sampler2D\x20map;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec4\x20samp\x20=\x20texture2D(map,\x20texCoords);\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(samp.xyz\x20/**\x20.5\x20+\x20.5*/,\x201.0);\x0a}\x0a','sph_position_fragment','test','Type','keyup','uniform\x20float\x20opacity;','_options','_removeUpdatableEntity','width','_startPitchDistance','aoMap','zoomSpeed','hasComponent','texture','_fromSphericalCoordinates','lights','UniformsUtils','clone','rotateX','BufferGeometry','BackSide','mie','specularProbeBoost','albedoMap','#define\x20NORMAL_MAP\x0a','positionUV','_entity','vec4\x20texel\x20=\x20texture2D(\x20tDiffuse,\x20vUv\x20);','derivatives','setMask','_renderer','Pass','_color','1044588ayoVaB','negX.jpg','varying\x20float\x20radius;\x0avarying\x20vec2\x20centerFrag;\x0avarying\x20vec3\x20viewPosition;\x0a\x0auniform\x20float\x20particleSize;\x0auniform\x20float\x20cameraNear;\x0auniform\x20float\x20rcpCameraRange;\x0auniform\x20mat4\x20projectionMatrix;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20float\x20radius2\x20=\x20radius\x20*\x20radius;\x0a\x20\x20\x20\x20vec2\x20diff\x20=\x20gl_FragCoord.xy\x20-\x20centerFrag;\x0a\x20\x20\x20\x20diff\x20/=\x20radius;\x0a\x20\x20\x20\x20float\x20dist2\x20=\x20dot(diff,\x20diff);\x0a\x20\x20\x20\x20if\x20(dist2\x20>\x201.0)\x20discard;\x0a\x0a\x20\x20\x20\x20vec3\x20normal;\x0a\x20\x20\x20\x20normal.xy\x20=\x20diff;\x0a\x20\x20\x20\x20normal.z\x20=\x20sqrt(1.0\x20-\x20dist2);\x0a\x0a\x20\x20\x20\x20vec3\x20pos\x20=\x20viewPosition\x20-\x20normal\x20*\x20particleSize;\x0a\x20\x20\x20\x20float\x20linearDepth\x20=\x20(-pos.z\x20-\x20cameraNear)\x20*\x20rcpCameraRange;\x0a\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20floatToRGBA8(linearDepth);\x0a\x20\x20\x20\x20gl_FragDepthEXT\x20=\x20linearDepth;\x0a}\x0a','quad','clearColor','MinEquation','sph_init_velocity_still.glsl','_spawnRatio','depthFunc','varying\x20vec2\x20texCoords;\x0avarying\x20vec3\x20viewVector;\x0a\x0auniform\x20mat4\x20unprojectionMatrix;\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20gl_Position\x20=\x20vec4(position,\x201.0);\x0a\x20\x20\x20\x20texCoords\x20=\x20uv;\x0a\x20\x20\x20\x20vec4\x20unproj\x20=\x20unprojectionMatrix\x20*\x20vec4(position.xy,\x200.0,\x201.0);\x0a\x20\x20\x20\x20unproj\x20/=\x20unproj.w;\x0a\x20\x20\x20\x20viewVector\x20=\x20-unproj.xyz\x20/\x20unproj.z;\x0a}\x0a','screenY','sphereRadius','#define\x20ALBEDO_MAP\x0a','sph_ball_collider_fragment.glsl','_oldMouseY','hdre','post_vertex','container','convertGammaToLinear','Math','_numLoaded','mieG','render_volume_vertex','screenX','_onComplete','displacementMap','_maxTests','antialias','createElement','objectNormals','assetLibrary','_blocker','THREE','_onMouseMove','errorContainer','cssText','setLocked','TextureLoader','_container','near','varying\x20float\x20linearDepth;\x0a\x0auniform\x20float\x20cameraNear;\x0auniform\x20float\x20rcpCameraRange;\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20vec4\x20viewPosition\x20=\x20modelViewMatrix\x20*\x20vec4(position,\x201.0);\x0a\x20\x20\x20\x20linearDepth\x20=\x20(-viewPosition.z\x20-\x20cameraNear)\x20*\x20rcpCameraRange;\x0a\x20\x20\x20\x20gl_Position\x20=\x20projectionMatrix\x20*\x20viewPosition;\x0a}','args','stiffness','sph_init_velocity_still','_blur','_distanceFieldRenderer','varying\x20vec2\x20texCoords;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec3\x20localPos\x20=\x20position;\x0a\x20\x20\x20\x20vec4\x20viewPos\x20=\x20modelViewMatrix\x20*\x20vec4(localPos,\x201.0);\x0a\x20\x20\x20\x20gl_Position\x20=\x20projectionMatrix\x20*\x20viewPos;\x0a\x20\x20\x20\x20texCoords\x20=\x20uv;\x0a}','_queue','readyState','_scene','varying\x20vec3\x20particlePosition;\x0a\x0auniform\x20vec3\x20numCells;\x0auniform\x20float\x20cellSize;\x0auniform\x20float\x20particleRadius;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec3\x20pos\x20=\x20getCellPositionFromFragCoord(gl_FragCoord.xy,\x20numCells,\x20cellSize);\x0a\x20\x20\x20\x20//\x20the\x20*\x2010\x20is\x20just\x20so\x20that\x20interpolations\x20find\x20the\x20edge\x20quicker\x0a\x20\x20\x20\x20float\x20signedDist\x20=\x20distance(particlePosition,\x20pos)\x20-\x20particleRadius\x20*\x20100.0;\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(signedDist,\x200.0,\x200.0,\x201.0);\x0a}\x0a','vec3\x20initVelocity(float\x20index,\x20vec3\x20numCells,\x20float\x20cellSize)\x0a{\x0a\x20\x20\x20\x20return\x20vec3(numCells.x,\x200.0,\x20numCells.y)\x20*\x20cellSize;\x0a}','initVelocityGLSL','HalfFloatType','webglcontainer','overrideMaterial','minAzimuth','post_vertex.glsl','filename','emissionMap','_rectRenderer','_smoothingRadius','MAP','_mesh','_renderPoints','_destroyQueue','volumetric_vertex.glsl','BoxBufferGeometry','cameraRange','_updateVelocity','setFunc','varying\x20vec3\x20viewVector;\x0avarying\x20vec3\x20viewWorldDir;\x0avarying\x20vec3\x20localViewDir;\x0avarying\x20vec3\x20frustumVec;\x0a\x0auniform\x20vec3\x20numCells;\x0auniform\x20mat4\x20modelViewMatrixInverse;\x0auniform\x20mat4\x20unprojectionMatrix;\x0a\x0auniform\x20float\x20samplePlaneDistance;\x0a\x0a\x0a#if\x20NUM_DIR_LIGHTS\x20>\x200\x0astruct\x20DirectionalLight\x20{\x0a\x20\x20\x20\x20vec3\x20direction;\x0a\x20\x20\x20\x20vec3\x20color;\x0a\x20\x20\x20\x20int\x20shadow;\x0a\x20\x20\x20\x20float\x20shadowBias;\x0a\x20\x20\x20\x20float\x20shadowRadius;\x0a\x20\x20\x20\x20vec2\x20shadowMapSize;\x0a};\x0a\x0auniform\x20DirectionalLight\x20directionalLights[\x20NUM_DIR_LIGHTS\x20];\x0a\x0a#endif\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20vec4\x20viewPos\x20=\x20modelViewMatrix\x20*\x20vec4(position,\x201.0);\x0a\x20\x20\x20\x20gl_Position\x20=\x20projectionMatrix\x20*\x20viewPos;\x0a\x0a\x20\x20\x20\x20vec3\x20worldPosition\x20=\x20(modelMatrix\x20*\x20vec4(position,\x201.0)).xyz;\x0a\x0a\x20\x20\x20\x20viewWorldDir\x20=\x20worldPosition\x20-\x20cameraPosition;\x0a\x0a\x20\x20\x20\x20//\x20since\x20we\x27re\x20front-culling,\x20this\x20is\x20the\x20backside\x20of\x20the\x20box,\x20where\x0a\x20\x20\x20\x20//\x20the\x20ray\x20should\x20STOP\x0a\x20\x20\x20\x20viewVector\x20=\x20viewPos.xyz;\x0a\x20\x20\x20\x20localViewDir\x20=\x20mat3(modelViewMatrixInverse)\x20*\x20viewVector;\x0a\x0a\x20\x20\x20\x20vec4\x20unproj\x20=\x20unprojectionMatrix\x20*\x20vec4(1.0,\x201.0,\x201.0,\x201.0);\x0a\x0a\x20\x20\x20\x20frustumVec\x20=\x20unproj.xyz\x20/\x20unproj.w;\x0a\x20\x20\x20\x20frustumVec\x20/=\x20-frustumVec.z;\x0a}','doAll','get','#ifdef\x20ALBEDO_MAP\x0avarying\x20vec2\x20texCoords;\x0auniform\x20sampler2D\x20albedoMap;\x0a#endif\x0a\x0auniform\x20vec3\x20color;\x0auniform\x20float\x20opacity;\x0a\x0a#ifdef\x20FOG\x0avarying\x20vec3\x20viewPosition;\x0a\x0auniform\x20float\x20fogDensity;\x0auniform\x20vec3\x20fogColor;\x0a#endif\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20float\x20alpha\x20=\x20opacity;\x0a#ifdef\x20ALBEDO_MAP\x0a\x20\x20\x20\x20vec4\x20albedo\x20=\x20texture2D(albedoMap,\x20texCoords);\x0a\x20\x20\x20\x20alpha\x20*=\x20albedo.w;\x0a\x20\x20\x20\x20albedo.xyz\x20*=\x20albedo.xyz;\x0a\x20\x20\x20\x20albedo.xyz\x20*=\x20color;\x0a\x20\x20\x20\x20vec3\x20col\x20=\x20albedo.xyz;\x0a#else\x0a\x20\x20\x20\x20vec3\x20col\x20=\x20color;\x0a#endif\x0a\x0a\x20\x20\x20\x20#ifdef\x20FOG\x0a\x20\x20\x20\x20float\x20fogAmount\x20=\x20clamp(exp2(viewPosition.z\x20*\x20fogDensity),\x200.0,\x201.0);\x0a\x20\x20\x20\x20col\x20=\x20mix(fogColor,\x20col,\x20fogAmount);\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#ifdef\x20HDRE\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20encodeHDRE(sqrt(col));\x0a\x20\x20\x20\x20#else\x0a//\x20\x20\x20\x20col\x20*=\x20alpha;\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(sqrt(col),\x20alpha);\x0a\x20\x20\x20\x20#endif\x0a}\x0a','volumetric_normals_fragment','vec3\x20initVelocity(float\x20index,\x20vec3\x20numCells,\x20float\x20cellSize)\x0a{\x0a\x20\x20\x20\x20return\x20vec3(0.0);\x0a}','glass_vertex.glsl','display','ClampToEdgeWrapping','findByNamePartial','onComplete','getSize','blendDstAlpha','preserveDrawingBuffer','alpha','points','_onRequireUpdatesChange','init','Vector2','getClearAlpha','start','smoothingRadius','curvatureThreshold','applyMatrix4','_updateAccel','render_volume_vertex.glsl','EXT_frag_depth','calls','_model','void\x20main()\x20{','Float\x20render\x20targets\x20are\x20unsupported!','_lookUp','_getMieFactor','_onEntityUpdateChange','memory','innerHTML','unbind','NearestFilter','#ifdef\x20ALBEDO_MAP\x0avarying\x20vec2\x20texCoords;\x0a#endif\x0a\x0a#ifdef\x20FOG\x0avarying\x20vec3\x20viewPosition;\x0a#endif\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec3\x20localPos\x20=\x20position;\x0a\x20\x20\x20\x20vec4\x20viewPos\x20=\x20modelViewMatrix\x20*\x20vec4(localPos,\x201.0);\x0a\x20\x20\x20\x20gl_Position\x20=\x20projectionMatrix\x20*\x20viewPos;\x0a\x20\x20\x20\x20#ifdef\x20FOG\x0a\x20\x20\x20\x20viewPosition\x20=\x20viewPos.xyz;\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#ifdef\x20ALBEDO_MAP\x0a\x20\x20\x20\x20texCoords\x20=\x20uv;\x0a\x20\x20\x20\x20#endif\x0a}','bucketPixelSize','domElement','//\x20Iñigo\x20Quilez\x27s\x20distance\x20functions:\x20http://iquilezles.org/www/articles/distfunctions/distfunctions.htm\x0a\x0afloat\x20signedDistanceBox(vec3\x20pos,\x20vec3\x20halfExtent)\x0a{\x0a\x20\x20\x20\x20vec3\x20d\x20=\x20abs(pos)\x20-\x20halfExtent;\x0a\x20\x20\x20\x20return\x20min(max(d.x,max(d.y,d.z)),0.0)\x20+\x20length(max(d,\x200.0));\x0a}\x0a\x0a//\x20same\x20as\x20box,\x20but\x20inverted\x0afloat\x20signedDistanceWalls(vec3\x20pos,\x20vec3\x20halfExtent)\x0a{\x0a\x20\x20\x20\x20return\x20-signedDistanceBox(pos,\x20halfExtent);\x0a}\x0a\x0afloat\x20signedDistanceSphere(vec3\x20p,\x20vec3\x20c,\x20float\x20r)\x0a{\x0a\x20\x20return\x20distance(p,\x20c)\x20-\x20r;\x0a}','volumetric_normals_fragment.glsl','setAzimuthImpulse','_listeners','particleRadius','fogProbe','sph_particle_point_fragment','textures/skybox/specular/','AddEquation','_getCandidate','_render','#define\x20SPECULAR_PROBE\x0a','sph_wall_collider_fragment.glsl','_storedFBO','render_volume_fragment.glsl','maxParticleIndex','debug_vec3_fragment.glsl','status','geometry','SrcAlphaFactor','TEXTURE_2D','preventDefault','moveAcceleration','_bucketBuffer','sph_distance_fragment.glsl','_initialized','BOX','gaussian_blur_enc_float_fragment.glsl','phi','halfExtent','pow','_initTerrain','innerWidth','wrapT','sph_particle_point_vertex','ENGINE','stencil','_renderRect','debug_alpha_vertex','_requestAnimationFrame','_velocityMaterial','cascademap','surfaceTension','irradianceProbeBoost','gravity','blendSrc','clientY','_cellSize','depthTest','direction','_debugMode','_particleDepthRenderer','writeBuffer','NOTEQUAL','#define\x20INVERT_NORMAL\x0a','#define\x20ROUGHNESS_MAP\x0a','transparent','playContainer','timeScale','debug_alpha_vertex.glsl','dispatch','mousedown','attribute\x20vec2\x20positionUV;\x0a\x0auniform\x20sampler2D\x20positionBuffer;\x0auniform\x20float\x20particleSize;\x0a\x0a#ifdef\x20MAP\x0avarying\x20vec2\x20texCoords;\x0a#endif\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec4\x20localPos\x20=\x20vec4(texture2D(positionBuffer,\x20positionUV).xyz,\x201.0);\x0a\x20\x20\x20\x20vec4\x20viewPos\x20=\x20modelViewMatrix\x20*\x20localPos;\x0a\x20\x20\x20\x20gl_Position\x20=\x20projectionMatrix\x20*\x20viewPos;\x0a\x20\x20\x20\x20gl_PointSize\x20=\x20particleSize;\x0a\x0a\x20\x20\x20\x20#ifdef\x20MAP\x0a\x20\x20\x20\x20texCoords\x20=\x20positionUV;\x0a\x20\x20\x20\x20#endif\x0a\x0a}','setClearColor','_textureType','debug_vec3_vertex.glsl','celSpecularCutOff','_moveWithKeys','_sourceFBO','OES_texture_half_float_linear','particleSize','accelBuffer','onProgress','_numVolumeSamples','_createPointGeometry','#ifdef\x20MAP\x0auniform\x20sampler2D\x20colorBuffer;\x0a\x0avarying\x20vec2\x20texCoords;\x0a#endif\x0a\x0avoid\x20main()\x20{\x0a#ifdef\x20MAP\x0a\x20\x20\x20\x20gl_FragColor.xyz\x20=\x20(.5\x20+\x20length(texture2D(colorBuffer,\x20texCoords).xyz))\x20*\x20vec3(.5,\x20.8,\x201.0)\x20*\x20.5;\x0a\x20\x20\x20\x20gl_FragColor.w\x20=\x201.0;\x0a#else\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(1.0);\x0a#endif\x0a}\x0a','setClear','RendererStats','viscosity','_initScene','roughnessMap','addComponent','RGBAFormat','objects/G.obj','render','updatable','sph_ball_collider_fragment','_accelBuffer','mass','convert','setOp','appendChild','zSliceOffset','_startZoom','varying\x20vec2\x20vUv;','setTest'];var _0x1a08=function(_0xf2118b,_0x8e61a9){_0xf2118b=_0xf2118b-0xda;var _0x175f14=_0x175f[_0xf2118b];return _0x175f14;};var _0x7112e=_0x1a08;(function(_0x531099,_0x141a48){var _0x2954fd=_0x1a08;while(!![]){try{var _0x302cbb=parseInt(_0x2954fd(0x24f))*parseInt(_0x2954fd(0x324))+-parseInt(_0x2954fd(0x23a))+parseInt(_0x2954fd(0x263))*-parseInt(_0x2954fd(0x270))+parseInt(_0x2954fd(0x340))+parseInt(_0x2954fd(0x329))+parseInt(_0x2954fd(0xdf))*-parseInt(_0x2954fd(0x3a3))+parseInt(_0x2954fd(0x13a));if(_0x302cbb===_0x141a48)break;else _0x531099['push'](_0x531099['shift']());}catch(_0x4905e2){_0x531099['push'](_0x531099['shift']());}}}(_0x175f,0xf2a2e));function AsyncTaskQueue(){var _0x2c14ad=_0x1a08;this[_0x2c14ad(0x18b)]=new Signal(),this[_0x2c14ad(0x1f2)]=new Signal(),this[_0x2c14ad(0x169)]=[],this[_0x2c14ad(0x31b)]=[],this['_currentIndex']=0x0,this['_isRunning']=!0x1;}function DoubleBufferTexture(_0x382df8,_0x5f2e7a,_0x52ae8a){var _0x32044c=_0x1a08;this['_width']=_0x382df8,this[_0x32044c(0x276)]=_0x5f2e7a,this[_0x32044c(0x1ee)]=new THREE['WebGLRenderTarget'](_0x382df8,_0x5f2e7a,_0x52ae8a),this[_0x32044c(0x115)]=new THREE[(_0x32044c(0x2e8))](_0x382df8,_0x5f2e7a,_0x52ae8a),this['_sourceFBO']['texture'][_0x32044c(0x32c)]=_0x52ae8a[_0x32044c(0x32c)]||!0x1,this[_0x32044c(0x115)][_0x32044c(0x126)][_0x32044c(0x32c)]=_0x52ae8a['generateMipmaps']||!0x1;}function isPlatformMobile(){var _0x5510bc=_0x1a08,_0x59ae1a=/AppleWebKit/['test'](navigator[_0x5510bc(0x39b)])&&/Mobile\/\w+/[_0x5510bc(0x11b)](navigator[_0x5510bc(0x39b)]);return _0x59ae1a||/Android|webOS|BlackBerry|Opera Mini|Opera Mobi|IEMobile/i['test'](navigator[_0x5510bc(0x39b)]);}function RectRenderer(_0x199f8f,_0x43aa18){var _0xe2ee64=_0x1a08;this['_renderer']=_0x199f8f,this['_scene']=new THREE['Scene'](),this['_camera']=new THREE[(_0xe2ee64(0xf7))](-0x1,0x1,0x1,-0x1,0x0,0x1),this[_0xe2ee64(0x179)]=_0x43aa18||new THREE[(_0xe2ee64(0x117))](new THREE[(_0xe2ee64(0x272))](0x2,0x2),null),this[_0xe2ee64(0x16b)]['add'](this[_0xe2ee64(0x179)]);}function TripleBufferTexture(_0x323294,_0x1fd63d,_0x215b9a){var _0x119dc9=_0x1a08;this[_0x119dc9(0x30b)]=_0x323294,this[_0x119dc9(0x276)]=_0x1fd63d,this[_0x119dc9(0x1b7)]=new THREE[(_0x119dc9(0x2e8))](_0x323294,_0x1fd63d,_0x215b9a),this[_0x119dc9(0x1ee)]=new THREE[(_0x119dc9(0x2e8))](_0x323294,_0x1fd63d,_0x215b9a),this['_targetFBO']=new THREE[(_0x119dc9(0x2e8))](_0x323294,_0x1fd63d,_0x215b9a),this[_0x119dc9(0x1b7)]['texture'][_0x119dc9(0x32c)]=_0x215b9a[_0x119dc9(0x32c)]||!0x1,this[_0x119dc9(0x1ee)][_0x119dc9(0x126)]['generateMipmaps']=_0x215b9a['generateMipmaps']||!0x1,this[_0x119dc9(0x115)][_0x119dc9(0x126)][_0x119dc9(0x32c)]=_0x215b9a[_0x119dc9(0x32c)]||!0x1;}function SPHCollider(_0x273df3){this['_target']=null,this['_invalid']=!0x0,this['_material']=_0x273df3;}function startUp(){var _0x286ef3=_0x1a08;highPerformance=!isPlatformMobile()&&!QueryString['lowPerformance'],assetLibrary=new AssetLibrary(_0x286ef3(0x24c)),assetLibrary[_0x286ef3(0x2fe)](_0x286ef3(0x387),_0x286ef3(0x1b1),AssetLibrary[_0x286ef3(0x11c)][_0x286ef3(0x34f)]),assetLibrary[_0x286ef3(0x2fe)](_0x286ef3(0x226),_0x286ef3(0x293),AssetLibrary[_0x286ef3(0x11c)][_0x286ef3(0x34f)]),assetLibrary[_0x286ef3(0x2fe)](_0x286ef3(0x1d3),_0x286ef3(0x38a),AssetLibrary[_0x286ef3(0x11c)][_0x286ef3(0x1be)]),assetLibrary[_0x286ef3(0x2fe)]('G',_0x286ef3(0x1fd),AssetLibrary[_0x286ef3(0x11c)][_0x286ef3(0x2ea)]),assetLibrary['onComplete'][_0x286ef3(0xff)](onAssetsLoaded),(assetLibrary[_0x286ef3(0x1f2)][_0x286ef3(0xff)](onAssetsProgress),assetLibrary['load']());}function onAssetsProgress(_0x395a51){var _0x372177=_0x1a08,_0x9cea63=document[_0x372177(0x106)](_0x372177(0x38d));_0x9cea63[_0x372177(0x254)][_0x372177(0x121)]=Math[_0x372177(0x2c4)](0x64*_0x395a51)+'%';}function onAssetsLoaded(_0xe00e21){var _0xe94644=_0x1a08;start();var _0x334b08=document['getElementById']('preloader');_0x334b08['style'][_0xe94644(0x188)]=_0xe94644(0x3bb);var _0x265331=document['getElementById'](_0xe94644(0x1e3));_0x265331[_0xe94644(0x254)][_0xe94644(0x188)]=_0xe94644(0x2f3);}function start(_0x4324ed,_0x362dee){var _0x2f9109=_0x1a08;_0x4324ed=SPH[_0x2f9109(0x2ad)][_0x2f9109(0x264)],_0x362dee=SPHContent[_0x2f9109(0x285)];var _0x1fc2a=document[_0x2f9109(0x106)](_0x2f9109(0x1e3));if(_0x1fc2a['style'][_0x2f9109(0x188)]=_0x2f9109(0x3bb),mainProject=new SimpleThreeProject(),mainProject[_0x2f9109(0x192)](debugMode,assetLibrary),verifyExtension(_0x2f9109(0x303))&&verifyExtension(_0x2f9109(0x25f))&&verifyExtension(_0x2f9109(0x19b))){var _0x3396c1=document['getElementById']('debugBox');_0x3396c1&&(_0x3396c1['style'][_0x2f9109(0x188)]=debugMode?_0x2f9109(0x2f3):'none'),mainProject[_0x2f9109(0x37d)]=new SPHContent(_0x362dee,_0x4324ed),mainProject['start']();}}function verifyExtension(_0x5cdb46){var _0x510f8b=_0x1a08,_0x49cc5d=mainProject[_0x510f8b(0x28b)]['extensions'][_0x510f8b(0x183)](_0x5cdb46);if(!_0x49cc5d){var _0x2172de=document['getElementById'](_0x510f8b(0x15c));_0x2172de['style']['display']=_0x510f8b(0x2f3),_0x2172de=document[_0x510f8b(0x106)](_0x510f8b(0x34b)),_0x2172de[_0x510f8b(0x1a4)]=_0x510f8b(0x27d)+_0x5cdb46+'\x20extension!';}return _0x49cc5d;}function SceneDepthRenderer(_0x56a99b,_0x507fcd,_0x4bf03e){var _0xbb90db=_0x1a08;this[_0xbb90db(0x137)]=_0x507fcd,this[_0xbb90db(0x16b)]=_0x56a99b,this['_scale']=_0x4bf03e||0x1,this[_0xbb90db(0x220)]=new LinearDepthMaterial();}function SimpleThreeProject(){var _0x1efbb8=_0x1a08;this[_0x1efbb8(0x30a)]=null,this[_0x1efbb8(0x3b0)]=null,this[_0x1efbb8(0x28b)]=null,this[_0x1efbb8(0x158)]=null,this['container']=null,this[_0x1efbb8(0x1e4)]=0x1,this['_content']=null,this[_0x1efbb8(0x2d1)]=null,this[_0x1efbb8(0x3ae)]=null,this[_0x1efbb8(0x323)]=null,this[_0x1efbb8(0x2f4)]=!0x1,this[_0x1efbb8(0x1c3)]=!0x1;}function SPHContent(_0x55c92a,_0x11e04e){var _0x1ec683=_0x1a08;this[_0x1ec683(0x26e)]=_0x11e04e,this['_mode']=void 0x0===_0x55c92a?SPHContent[_0x1ec683(0x2f1)]:_0x55c92a;}function Skybox(_0x3a2602,_0x56d1eb){var _0x9ae8ea=_0x1a08;_0x56d1eb=_0x56d1eb||0x3e8;var _0x16e8be=new THREE[(_0x9ae8ea(0x23c))](_0x56d1eb,_0x56d1eb,_0x56d1eb);_0x16e8be[_0x9ae8ea(0x356)](-0x1,0x1,0x1);var _0x263b25=new SkyMaterial({'envMap':_0x3a2602});THREE[_0x9ae8ea(0x117)][_0x9ae8ea(0x281)](this,_0x16e8be,_0x263b25);}function SPHDistanceFieldRenderer(_0x3ae60a,_0x30eaaf){var _0x21c20c=_0x1a08;this[_0x21c20c(0x137)]=_0x3ae60a,this[_0x21c20c(0x247)]=_0x30eaaf,this[_0x21c20c(0x229)]=_0x30eaaf['_numCells'],this[_0x21c20c(0x1d9)]=_0x30eaaf['cellSize'],this[_0x21c20c(0x358)]=Math['ceil'](_0x30eaaf[_0x21c20c(0x1ae)]/this[_0x21c20c(0x1d9)]);var _0x4a4a0e=FloatTex[_0x21c20c(0x232)](_0x3ae60a);this[_0x21c20c(0x22e)]=new THREE[(_0x21c20c(0x2e8))](this[_0x21c20c(0x229)]['x']*this['_numCells']['z'],this[_0x21c20c(0x229)]['y'],{'type':_0x4a4a0e,'minFilter':THREE[_0x21c20c(0x31c)],'magFilter':THREE['LinearFilter'],'generateMipmaps':!0x1,'depthBuffer':!0x1,'stencilBuffer':!0x1,'format':THREE[_0x21c20c(0x1fc)]}),this[_0x21c20c(0x399)]=new SPHDistanceMaterial(_0x30eaaf),this['_pointRenderer']=new RectRenderer(_0x3ae60a,new THREE['Points'](_0x30eaaf['pointGeometry']));}function ParticleBlurredRenderer(_0x33de82,_0x4f39ca,_0x113a35,_0xc9f8fc,_0x5d7fe2){var _0x500e86=_0x1a08;this['_textureType']=_0x5d7fe2,this[_0x500e86(0x137)]=_0x33de82,this[_0x500e86(0x299)]=_0x4f39ca||0x1,_0x113a35['defines'][_0x500e86(0x2e4)]=_0xc9f8fc,_0x113a35[_0x500e86(0x215)][_0x500e86(0xe3)]=_0xc9f8fc+0x1,this[_0x500e86(0xfd)]=new THREE[(_0x500e86(0x389))](_0x113a35),this[_0x500e86(0xfd)][_0x500e86(0x2c8)][_0x500e86(0x210)]['value']=this[_0x500e86(0x2b0)](_0xc9f8fc),this[_0x500e86(0xfd)][_0x500e86(0x1da)]=!0x1,this[_0x500e86(0xfd)][_0x500e86(0x2bd)]=!0x1,this[_0x500e86(0x176)]=new RectRenderer(_0x33de82),this[_0x500e86(0x26b)](window[_0x500e86(0x1ca)],window[_0x500e86(0x253)]);}function ParticleDepthRenderer(_0x533d12,_0x53527a,_0x14666a,_0x2738be,_0x4de4b4){var _0x3f20c2=_0x1a08;this[_0x3f20c2(0x16b)]=_0x533d12,this['_particleSim']=_0x14666a,this[_0x3f20c2(0x359)]=new RectRenderer(_0x53527a,new THREE['Points'](_0x14666a[_0x3f20c2(0x2d9)])),this[_0x3f20c2(0x220)]=new ParticleDepthMaterial(),this[_0x3f20c2(0x220)][_0x3f20c2(0x1f0)]=_0x14666a[_0x3f20c2(0x1ae)],_0x4de4b4=void 0x0===_0x4de4b4?0x6:_0x4de4b4,ParticleBlurredRenderer[_0x3f20c2(0x281)](this,_0x53527a,_0x2738be,BilateralGaussianBlurShader,_0x4de4b4);}function SPH(_0x322fe6,_0x220717,_0x4add4d,_0xac56da,_0x461f89,_0x1fa07c,_0x8f0c4f,_0x160bfa){var _0x1c1728=_0x1a08;this[_0x1c1728(0x3d1)]=_0x1fa07c,this['_quality']=_0x160bfa||SPH['Quality'][_0x1c1728(0x3d9)],this[_0x1c1728(0x33b)]=_0x461f89,this[_0x1c1728(0xe5)]=_0xac56da,this[_0x1c1728(0x393)]=new THREE['Vector3'](_0x322fe6,_0x220717,_0x4add4d),this[_0x1c1728(0x109)]=998.29,this['_particleMass']=this[_0x1c1728(0x109)]*_0x461f89/this[_0x1c1728(0xe5)],this['_smoothingRadius']=Math[_0x1c1728(0x1c8)](0x3*_0x461f89*0x14/(0x4*Math['PI']*this[_0x1c1728(0xe5)]),0x1/0x3),this['_cellSize']=this[_0x1c1728(0x177)]/0x2,this[_0x1c1728(0x225)]=0.5*Math[_0x1c1728(0x1c8)](0x3*this[_0x1c1728(0x2d7)]/(0x4*Math['PI']*this['_restDensity']),0x1/0x3),this[_0x1c1728(0x103)]=0.1*this[_0x1c1728(0x177)],this[_0x1c1728(0x229)]=new THREE[(_0x1c1728(0x397))](Math['ceil'](_0x322fe6/this[_0x1c1728(0x1d9)]),Math[_0x1c1728(0x374)](_0x220717/this[_0x1c1728(0x1d9)]),Math['ceil'](_0x4add4d/this[_0x1c1728(0x1d9)])),this['_halfExtent']=this[_0x1c1728(0x393)][_0x1c1728(0x12a)](),this[_0x1c1728(0x364)][_0x1c1728(0xf9)](0.5),this[_0x1c1728(0x364)]['x']-=this[_0x1c1728(0x1d9)],this[_0x1c1728(0x364)]['y']-=this['_cellSize'],this[_0x1c1728(0x364)]['z']-=this[_0x1c1728(0x1d9)],this[_0x1c1728(0x1f8)]=3.5,this['stiffness']=0x3,this['surfaceTension']=0.0728,this['curvatureThreshold']=7.065,this[_0x1c1728(0x1d6)]=-9.81,this['_numParticles']=this['_setup'][_0x1c1728(0x32d)](_0xac56da),this[_0x1c1728(0x137)]=_0x8f0c4f,this[_0x1c1728(0x3d1)][_0x1c1728(0x2c1)][_0x1c1728(0x192)](this,this[_0x1c1728(0x137)]),this[_0x1c1728(0x3a9)]=new THREE[(_0x1c1728(0x193))](0x400,Math[_0x1c1728(0x374)](_0xac56da/0x400)),this[_0x1c1728(0x314)]=new THREE[(_0x1c1728(0x193))](0x1/(this['_numCells']['x']*this[_0x1c1728(0x229)]['z']),0x1/this[_0x1c1728(0x229)]['y']),this[_0x1c1728(0x383)]=new DoubleBufferTexture(this[_0x1c1728(0x3a9)]['x'],this[_0x1c1728(0x3a9)]['y'],this['_rtOptions']()),this[_0x1c1728(0x1c1)]=new THREE[(_0x1c1728(0x2e8))](this[_0x1c1728(0x229)]['x']*this[_0x1c1728(0x229)]['z'],this[_0x1c1728(0x229)]['y'],this['_rtOptions'](!0x0)),this[_0x1c1728(0x2ff)]=new THREE[(_0x1c1728(0x2e8))](this['_particleBufferSize']['x'],this[_0x1c1728(0x3a9)]['y'],this[_0x1c1728(0x2b7)]()),this[_0x1c1728(0x201)]=new DoubleBufferTexture(this['_particleBufferSize']['x'],this[_0x1c1728(0x3a9)]['y'],this[_0x1c1728(0x2b7)]()),this[_0x1c1728(0x108)]=new DoubleBufferTexture(this[_0x1c1728(0x3a9)]['x'],this[_0x1c1728(0x3a9)]['y'],this[_0x1c1728(0x2b7)]()),this['_bucketMaterial']=new SPHBucketMaterial(this),this[_0x1c1728(0x20f)]=new SPHDensityMaterial(this),this['_accelMaterial']=new SPHAccelMaterial(this),this['_velocityMaterial']=new SPHVelocityMaterial(this),this[_0x1c1728(0x116)]=new SPHPositionMaterial(this),this['_pointGeometry']=this[_0x1c1728(0x1f4)](),this['_renderPoints']=new RectRenderer(_0x8f0c4f,new THREE[(_0x1c1728(0x113))](this['_pointGeometry'])),this['_renderRect']=new RectRenderer(_0x8f0c4f),this[_0x1c1728(0x1cf)][_0x1c1728(0x252)](this[_0x1c1728(0x2ff)]),this['reset']();}function SPHBallCollider(){var _0x56d7a8=_0x1a08,_0x32f3e9=new SPHBallColliderMaterial();SPHCollider[_0x56d7a8(0x281)](this,_0x32f3e9);}function SPHBallSetup(){this['collider']=new SPHBallCollider();}function SPHCascadeSetup(_0x5c38de){this['collider']=new SPHHeightMapCollider(_0x5c38de);}function SPHHeightMapCollider(_0x13ab0c){var _0x8add88=_0x1a08,_0x249412=new SPHHeightMapColliderMaterial(_0x13ab0c);SPHCollider[_0x8add88(0x281)](this,_0x249412);}function SPHWallCollider(){var _0x33b4e7=new SPHWallColliderMaterial();SPHCollider['call'](this,_0x33b4e7);}function VolumetricLighting(_0xf11bff,_0x9d844a,_0x53c4e5,_0x1c406f){var _0x2015b9=_0x1a08,_0x1bbf56={'NUM_SAMPLES':_0x53c4e5};_0x1c406f&&(_0x1bbf56['WATER']='');var _0x5de253=_0xf11bff['y']*_0x9d844a*0.25,_0x40888b=THREE['UniformsUtils'][_0x2015b9(0x2bc)]([{'densityField':{'value':null},'cameraPos':{'value':new THREE['Vector3']()},'mieG':{'value':new THREE[(_0x2015b9(0x26f))](-0.1,-0.12,0.05)},'cellSize':{'value':_0x9d844a},'absorption':{'value':new THREE[(_0x2015b9(0x26f))](0.01,0.01,0.01)},'numCells':{'value':_0xf11bff},'sampleStep':{'value':_0x5de253/(_0x53c4e5-0x1)}},THREE[_0x2015b9(0x373)][_0x2015b9(0x128)]]);THREE[_0x2015b9(0x389)]['call'](this,{'defines':_0x1bbf56,'uniforms':_0x40888b,'lights':!0x0,'vertexShader':ShaderLibrary['get'](_0x2015b9(0x3ad)),'fragmentShader':ShaderLibrary[_0x2015b9(0x183)](_0x2015b9(0x267))});}function VolumetricLightRenderer(_0xf492cd,_0x2dafa9,_0x48881a,_0x6879eb,_0x2a8440,_0x306cc8){var _0x3d3d65=_0x1a08;this[_0x3d3d65(0xda)]=new THREE['WebGLRenderTarget'](_0x2dafa9['x']*_0x2dafa9['z']*_0x306cc8,_0x2dafa9['y']*_0x306cc8,{'minFilter':THREE[_0x3d3d65(0x31c)],'magFilter':THREE[_0x3d3d65(0x31c)],'generateMipmaps':!0x1,'depthBuffer':!0x1,'stencilBuffer':!0x1,'format':THREE['RGBAFormat']}),this[_0x3d3d65(0x137)]=_0xf492cd,this[_0x3d3d65(0x16b)]=new THREE[(_0x3d3d65(0x396))](),this['_rectRenderer']=new RectRenderer(_0xf492cd),this[_0x3d3d65(0x399)]=new VolumetricLighting(_0x2dafa9,_0x48881a,_0x6879eb,_0x2a8440);}function VolumetricNormals(_0x3ea669,_0x50ac02,_0x1fee74){var _0x14f662=_0x1a08,_0x8181f3=THREE[_0x14f662(0x129)][_0x14f662(0x2bc)]([{'densityField':{'value':null},'numCells':{'value':new THREE[(_0x14f662(0x397))](_0x3ea669,_0x50ac02,_0x1fee74)},'rcpTexSize':{'value':new THREE['Vector3'](0x1/(_0x3ea669*_0x1fee74),0x1/_0x50ac02)}}]);THREE[_0x14f662(0x389)][_0x14f662(0x281)](this,{'uniforms':_0x8181f3,'vertexShader':ShaderLibrary[_0x14f662(0x183)](_0x14f662(0x3ad)),'fragmentShader':ShaderLibrary['get'](_0x14f662(0x185))});}function VolumetricNormalsRenderer(_0x26cd0d,_0x1f775d,_0x3363f0,_0x2a9659){var _0x31656f=_0x1a08;this[_0x31656f(0x137)]=_0x26cd0d,this[_0x31656f(0x16b)]=new THREE[(_0x31656f(0x396))](),this[_0x31656f(0x38f)]=new THREE[(_0x31656f(0xf7))](-0x1,0x1,0x1,-0x1,0x0,0x1),this['_material']=new VolumetricNormals(_0x1f775d,_0x3363f0,_0x2a9659),this[_0x31656f(0xdd)]=new THREE[(_0x31656f(0x117))](new THREE[(_0x31656f(0x272))](0x2,0x2),this[_0x31656f(0x399)]),this[_0x31656f(0x16b)][_0x31656f(0x284)](this[_0x31656f(0xdd)]);}THREE['EffectComposer']=function(_0x56350c,_0x4357bc){var _0x37b27b=_0x1a08;if(this[_0x37b27b(0x28b)]=_0x56350c,void 0x0===_0x4357bc){var _0x1ae301={'minFilter':THREE['LinearFilter'],'magFilter':THREE['LinearFilter'],'format':THREE[_0x37b27b(0x1fc)],'stencilBuffer':!0x1},_0x57dd60=_0x56350c['getSize']();_0x4357bc=new THREE['WebGLRenderTarget'](_0x57dd60[_0x37b27b(0x121)],_0x57dd60['height'],_0x1ae301);}this['renderTarget1']=_0x4357bc,this[_0x37b27b(0x233)]=_0x4357bc[_0x37b27b(0x12a)](),this[_0x37b27b(0x1de)]=this['renderTarget1'],this[_0x37b27b(0x31f)]=this[_0x37b27b(0x233)],this['passes']=[],void 0x0===THREE[_0x37b27b(0x259)]&&console[_0x37b27b(0x337)](_0x37b27b(0x30f)),this['copyPass']=new THREE[(_0x37b27b(0x2ba))](THREE[_0x37b27b(0x259)]);},Object[_0x7112e(0x343)](THREE[_0x7112e(0x39e)]['prototype'],{'swapBuffers':function(){var _0x524483=_0x7112e,_0x2d7c47=this['readBuffer'];this[_0x524483(0x31f)]=this[_0x524483(0x1de)],this[_0x524483(0x1de)]=_0x2d7c47;},'addPass':function(_0x33b4d8){var _0x2566ab=_0x7112e;this['passes'][_0x2566ab(0x2c9)](_0x33b4d8);var _0x567986=this[_0x2566ab(0x28b)]['getSize']();_0x33b4d8[_0x2566ab(0x321)](_0x567986[_0x2566ab(0x121)],_0x567986['height']);},'insertPass':function(_0x56bc96,_0x367f8c){var _0x2e122f=_0x7112e;this[_0x2e122f(0x2dd)][_0x2e122f(0x10d)](_0x367f8c,0x0,_0x56bc96);},'render':function(_0xba9fd8){var _0x51b6d7=_0x7112e,_0x483c77,_0x5aca9f,_0xc7e737=!0x1,_0x592522=this['passes'][_0x51b6d7(0x2a4)];for(_0x5aca9f=0x0;_0x5aca9f<_0x592522;_0x5aca9f++)if(_0x483c77=this[_0x51b6d7(0x2dd)][_0x5aca9f],_0x483c77[_0x51b6d7(0x3cf)]!==!0x1){if(_0x483c77[_0x51b6d7(0x1fe)](this[_0x51b6d7(0x28b)],this[_0x51b6d7(0x1de)],this[_0x51b6d7(0x31f)],_0xba9fd8,_0xc7e737),_0x483c77[_0x51b6d7(0x3bd)]){if(_0xc7e737){var _0x541791=this[_0x51b6d7(0x28b)][_0x51b6d7(0x277)];_0x541791[_0x51b6d7(0x28e)](_0x541791[_0x51b6d7(0x1df)],0x1,0xffffffff),this[_0x51b6d7(0x327)]['render'](this[_0x51b6d7(0x28b)],this[_0x51b6d7(0x1de)],this['readBuffer'],_0xba9fd8),_0x541791[_0x51b6d7(0x28e)](_0x541791['EQUAL'],0x1,0xffffffff);}this[_0x51b6d7(0x3c4)]();}void 0x0!==THREE['MaskPass']&&(_0x483c77 instanceof THREE['MaskPass']?_0xc7e737=!0x0:_0x483c77 instanceof THREE['ClearMaskPass']&&(_0xc7e737=!0x1));}},'reset':function(_0x1fb783){var _0x598137=_0x7112e;if(void 0x0===_0x1fb783){var _0x1fb126=this['renderer'][_0x598137(0x18c)]();_0x1fb783=this[_0x598137(0x10c)][_0x598137(0x12a)](),_0x1fb783[_0x598137(0x321)](_0x1fb126[_0x598137(0x121)],_0x1fb126[_0x598137(0x390)]);}this[_0x598137(0x10c)][_0x598137(0x36f)](),this[_0x598137(0x233)][_0x598137(0x36f)](),this[_0x598137(0x10c)]=_0x1fb783,this[_0x598137(0x233)]=_0x1fb783[_0x598137(0x12a)](),this['writeBuffer']=this['renderTarget1'],this['readBuffer']=this[_0x598137(0x233)];},'setSize':function(_0x363e38,_0x50edd1){var _0x37a30a=_0x7112e;this[_0x37a30a(0x10c)]['setSize'](_0x363e38,_0x50edd1),this[_0x37a30a(0x233)][_0x37a30a(0x321)](_0x363e38,_0x50edd1);for(var _0x479384=0x0;_0x479384<this[_0x37a30a(0x2dd)][_0x37a30a(0x2a4)];_0x479384++)this[_0x37a30a(0x2dd)][_0x479384][_0x37a30a(0x321)](_0x363e38,_0x50edd1);}}),THREE[_0x7112e(0x138)]=function(){var _0x37b259=_0x7112e;this[_0x37b259(0x3cf)]=!0x0,this[_0x37b259(0x3bd)]=!0x0,this['clear']=!0x1,this[_0x37b259(0x29e)]=!0x1;},Object[_0x7112e(0x343)](THREE['Pass'][_0x7112e(0x218)],{'setSize':function(_0x22a697,_0x22d46f){},'render':function(_0x15977e,_0x388dad,_0x4538b5,_0x37e189,_0x4f07d5){var _0x1db0af=_0x7112e;console[_0x1db0af(0x337)](_0x1db0af(0x2cb));}});var THREEx=THREEx||{};THREEx[_0x7112e(0x1f7)]=function(){var _0x26bb59=_0x7112e,_0x4aae00=document[_0x26bb59(0x156)](_0x26bb59(0x2ef));_0x4aae00[_0x26bb59(0x254)][_0x26bb59(0x15d)]=_0x26bb59(0x338);var _0x53dd45=document[_0x26bb59(0x156)](_0x26bb59(0x2ef));_0x53dd45['style']['cssText']=_0x26bb59(0x10f),_0x4aae00[_0x26bb59(0x205)](_0x53dd45);var _0x64f50e=document[_0x26bb59(0x156)](_0x26bb59(0x2ef));_0x64f50e[_0x26bb59(0x254)][_0x26bb59(0x15d)]=_0x26bb59(0x332),_0x64f50e[_0x26bb59(0x1a4)]=_0x26bb59(0x3cd),_0x53dd45[_0x26bb59(0x205)](_0x64f50e);for(var _0x13dd6c=[],_0x1afe7b=0x9,_0x22d7e8=0x0;_0x22d7e8<_0x1afe7b;_0x22d7e8++)_0x13dd6c[_0x22d7e8]=document[_0x26bb59(0x156)]('div'),_0x13dd6c[_0x22d7e8][_0x26bb59(0x254)][_0x26bb59(0x15d)]=_0x26bb59(0x392),_0x53dd45['appendChild'](_0x13dd6c[_0x22d7e8]),_0x13dd6c[_0x22d7e8][_0x26bb59(0x1a4)]='-';var _0x2db450=Date[_0x26bb59(0x2f7)]();return{'domElement':_0x4aae00,'update':function(_0x36e3a1){var _0x1cb647=_0x26bb59;if(console['assert'](_0x36e3a1 instanceof THREE[_0x1cb647(0x3cd)]),!(Date[_0x1cb647(0x2f7)]()-_0x2db450<0x3e8/0x1e)){_0x2db450=Date[_0x1cb647(0x2f7)]();var _0x10a8df=0x0;_0x13dd6c[_0x10a8df++][_0x1cb647(0x3a5)]=_0x1cb647(0x350),_0x13dd6c[_0x10a8df++][_0x1cb647(0x3a5)]=_0x1cb647(0x3cc)+_0x36e3a1[_0x1cb647(0x234)][_0x1cb647(0x1a3)][_0x1cb647(0x21f)],_0x13dd6c[_0x10a8df++][_0x1cb647(0x3a5)]=_0x1cb647(0x336)+_0x36e3a1[_0x1cb647(0x234)][_0x1cb647(0x1a3)][_0x1cb647(0x114)],_0x13dd6c[_0x10a8df++][_0x1cb647(0x3a5)]=_0x1cb647(0x353)+_0x36e3a1[_0x1cb647(0x234)]['memory'][_0x1cb647(0x101)],_0x13dd6c[_0x10a8df++]['textContent']=_0x1cb647(0x3b5),_0x13dd6c[_0x10a8df++]['textContent']=_0x1cb647(0xf2)+_0x36e3a1[_0x1cb647(0x234)][_0x1cb647(0x1fe)][_0x1cb647(0x19c)],_0x13dd6c[_0x10a8df++][_0x1cb647(0x3a5)]=_0x1cb647(0x3ab)+_0x36e3a1[_0x1cb647(0x234)][_0x1cb647(0x1fe)][_0x1cb647(0x3d3)],_0x13dd6c[_0x10a8df++]['textContent']='Faces:\x20'+_0x36e3a1[_0x1cb647(0x234)]['render'][_0x1cb647(0x2cd)],_0x13dd6c[_0x10a8df++]['textContent']=_0x1cb647(0x289)+_0x36e3a1[_0x1cb647(0x234)][_0x1cb647(0x1fe)][_0x1cb647(0x190)];}}};},THREE[_0x7112e(0x35c)]=function(_0x4afbee,_0x55e758,_0x3f2a4b,_0x534263,_0xfb7e){var _0x362ea1=_0x7112e;THREE[_0x362ea1(0x138)]['call'](this),this[_0x362ea1(0x30a)]=_0x4afbee,this[_0x362ea1(0x3b0)]=_0x55e758,this[_0x362ea1(0x171)]=_0x3f2a4b,this[_0x362ea1(0x13e)]=_0x534263,this[_0x362ea1(0x265)]=void 0x0!==_0xfb7e?_0xfb7e:0x0,this[_0x362ea1(0x252)]=!0x0,this['needsSwap']=!0x1;},THREE[_0x7112e(0x35c)][_0x7112e(0x218)]=Object[_0x7112e(0x343)](Object[_0x7112e(0xe9)](THREE[_0x7112e(0x138)][_0x7112e(0x218)]),{'constructor':THREE[_0x7112e(0x35c)],'render':function(_0x20143f,_0x5a3686,_0x20ab5a,_0x2a6ec3,_0x12ad69){var _0x557667=_0x7112e,_0x227391=_0x20143f['autoClear'];_0x20143f['autoClear']=!0x1,this[_0x557667(0x30a)][_0x557667(0x171)]=this[_0x557667(0x171)];var _0x2ee92d,_0x17c2ec;this['clearColor']&&(_0x2ee92d=_0x20143f['getClearColor']()[_0x557667(0x311)](),_0x17c2ec=_0x20143f[_0x557667(0x194)](),_0x20143f[_0x557667(0x1e9)](this[_0x557667(0x13e)],this[_0x557667(0x265)])),_0x20143f[_0x557667(0x1fe)](this[_0x557667(0x30a)],this[_0x557667(0x3b0)],this[_0x557667(0x29e)]?null:_0x20ab5a,this[_0x557667(0x252)]),this['clearColor']&&_0x20143f[_0x557667(0x1e9)](_0x2ee92d,_0x17c2ec),this[_0x557667(0x30a)][_0x557667(0x171)]=null,_0x20143f[_0x557667(0x35e)]=_0x227391;}}),THREE['ShaderPass']=function(_0x2a64ee,_0x152b55){var _0x3fc982=_0x7112e;THREE['Pass'][_0x3fc982(0x281)](this),this['textureID']=void 0x0!==_0x152b55?_0x152b55:_0x3fc982(0x2a1),_0x2a64ee instanceof THREE['ShaderMaterial']?(this[_0x3fc982(0x2c8)]=_0x2a64ee[_0x3fc982(0x2c8)],this['material']=_0x2a64ee):_0x2a64ee&&(this[_0x3fc982(0x2c8)]=THREE[_0x3fc982(0x129)][_0x3fc982(0x12a)](_0x2a64ee[_0x3fc982(0x2c8)]),this[_0x3fc982(0x395)]=new THREE[(_0x3fc982(0x389))]({'defines':_0x2a64ee[_0x3fc982(0x215)]||{},'uniforms':this[_0x3fc982(0x2c8)],'vertexShader':_0x2a64ee[_0x3fc982(0x3bc)],'fragmentShader':_0x2a64ee[_0x3fc982(0x230)]})),this[_0x3fc982(0x3b0)]=new THREE['OrthographicCamera'](-0x1,0x1,0x1,-0x1,0x0,0x1),this[_0x3fc982(0x30a)]=new THREE[(_0x3fc982(0x396))](),this[_0x3fc982(0x13d)]=new THREE[(_0x3fc982(0x117))](new THREE[(_0x3fc982(0x272))](0x2,0x2),null),this[_0x3fc982(0x30a)][_0x3fc982(0x284)](this[_0x3fc982(0x13d)]);},THREE[_0x7112e(0x2ba)]['prototype']=Object[_0x7112e(0x343)](Object[_0x7112e(0xe9)](THREE[_0x7112e(0x138)][_0x7112e(0x218)]),{'constructor':THREE[_0x7112e(0x2ba)],'render':function(_0x46f036,_0x1083a1,_0x16b349,_0x420ad7,_0x2d3594){var _0x395044=_0x7112e;this[_0x395044(0x2c8)][this['textureID']]&&(this[_0x395044(0x2c8)][this['textureID']][_0x395044(0xeb)]=_0x16b349[_0x395044(0x126)]),this[_0x395044(0x13d)][_0x395044(0x395)]=this[_0x395044(0x395)],this[_0x395044(0x29e)]?_0x46f036[_0x395044(0x1fe)](this[_0x395044(0x30a)],this['camera']):_0x46f036['render'](this['scene'],this['camera'],_0x1083a1,this['clear']);}}),THREE[_0x7112e(0x259)]={'uniforms':{'tDiffuse':{'value':null},'opacity':{'value':0x1}},'vertexShader':[_0x7112e(0x208),'void\x20main()\x20{',_0x7112e(0x273),_0x7112e(0x318),'}'][_0x7112e(0x32b)]('\x0a'),'fragmentShader':[_0x7112e(0x11e),_0x7112e(0xe8),_0x7112e(0x208),_0x7112e(0x19e),_0x7112e(0x134),'gl_FragColor\x20=\x20opacity\x20*\x20texel;','}']['join']('\x0a')},AsyncTaskQueue[_0x7112e(0x218)]={'queue':function(_0x2547d6,_0x5ba8d0){var _0xac1405=_0x7112e,_0xe8b264=0x1===arguments[_0xac1405(0x2a4)]?[arguments[0x0]]:Array[_0xac1405(0x2e2)](null,arguments);this['_queue'][_0xac1405(0x2c9)]({'func':_0x2547d6,'args':_0xe8b264[_0xac1405(0x261)](0x1)});},'addChildQueue':function(_0x4429de){var _0x1336c3=_0x7112e;this[_0x1336c3(0x31b)]['push'](_0x4429de);},'execute':function(){var _0x567057=_0x7112e;if(this[_0x567057(0x2f4)])throw new Error(_0x567057(0x301));this[_0x567057(0x2f4)]=!0x0,this[_0x567057(0x33c)]=0x0,this[_0x567057(0x294)]();},'_executeTask':function(){var _0x18219f=_0x7112e;setTimeout(this[_0x18219f(0x2d3)]['bind'](this));},'_executeImpl':function(){var _0x14e97d=_0x7112e;if(this[_0x14e97d(0x1f2)]['dispatch'](this[_0x14e97d(0x33c)]/this['_queue']['length']),this[_0x14e97d(0x31b)][_0x14e97d(0x2a4)]>0x0){var _0xffeced=this['_childQueues'][_0x14e97d(0x268)]();_0xffeced['onComplete'][_0x14e97d(0xff)](this['_executeImpl'],this),_0xffeced[_0x14e97d(0x2b5)]();}else{if(this[_0x14e97d(0x169)]['length']===this[_0x14e97d(0x33c)])this[_0x14e97d(0x18b)][_0x14e97d(0x1e6)]();else{var _0x5ca187=this[_0x14e97d(0x169)][this['_currentIndex']];_0x5ca187['func'][_0x14e97d(0x2e2)](this,_0x5ca187[_0x14e97d(0x163)]),++this[_0x14e97d(0x33c)],this['_executeTask']();}}}},Axes=function(){var _0x345a4c=_0x7112e;THREE[_0x345a4c(0x266)][_0x345a4c(0x281)](this),this[_0x345a4c(0x305)]();},Axes[_0x7112e(0x218)]=Object[_0x7112e(0xe9)](THREE[_0x7112e(0x266)][_0x7112e(0x218)]),Axes[_0x7112e(0x218)][_0x7112e(0x305)]=function(){var _0x1e6dc0=_0x7112e,_0x443f3b=new THREE[(_0x1e6dc0(0xe1))](0.01,0.01,0x1);_0x443f3b['translate'](0x0,0.5,0x0);var _0x543028=new THREE[(_0x1e6dc0(0x117))](_0x443f3b,new UnlitMaterial({'color':0xff0000})),_0x17243b=new THREE[(_0x1e6dc0(0x117))](_0x443f3b,new UnlitMaterial({'color':0xff00})),_0x5b9b79=new THREE[(_0x1e6dc0(0x117))](_0x443f3b,new UnlitMaterial({'color':0xff}));_0x543028[_0x1e6dc0(0x344)]['z']=0.5*-Math['PI'],_0x5b9b79[_0x1e6dc0(0x344)]['x']=0.5*Math['PI'],this[_0x1e6dc0(0x284)](_0x543028),this[_0x1e6dc0(0x284)](_0x17243b),this[_0x1e6dc0(0x284)](_0x5b9b79);},CalculateNormals={'doAll':function(_0x2eea6b){var _0x54f55d=_0x7112e;for(var _0x17a043=0x0;_0x17a043<_0x2eea6b[_0x54f55d(0x3d6)][_0x54f55d(0x2a4)];++_0x17a043){var _0x565a75=_0x2eea6b['children'][_0x17a043];_0x565a75[_0x54f55d(0x1bc)]&&(_0x565a75[_0x54f55d(0x1bc)][_0x54f55d(0x223)](!0x1),_0x565a75[_0x54f55d(0x1bc)][_0x54f55d(0x237)]=!0x0),CalculateNormals[_0x54f55d(0x182)](_0x565a75);}}};var CopyDataToRenderTarget={'execute':function(_0x2d35ff,_0x4c40f9,_0x47a2f5,_0x10a9fe){var _0x81a70d=_0x7112e,_0x1f52f5=new RectRenderer(_0x47a2f5),_0x847bf4=_0x4c40f9[_0x81a70d(0x126)];_0x10a9fe=_0x10a9fe||_0x847bf4[_0x81a70d(0x3d0)];var _0x12869f=new THREE[(_0x81a70d(0xec))](_0x2d35ff,_0x4c40f9[_0x81a70d(0x121)],_0x4c40f9[_0x81a70d(0x390)],_0x847bf4[_0x81a70d(0x2eb)],_0x10a9fe,null,THREE[_0x81a70d(0x28d)],THREE[_0x81a70d(0x28d)],THREE[_0x81a70d(0x1a6)],THREE[_0x81a70d(0x1a6)],0x0);_0x12869f[_0x81a70d(0xdb)]=!0x0;var _0x56c1d7=new THREE['ShaderMaterial'](THREE[_0x81a70d(0x259)]);_0x56c1d7['uniforms'][_0x81a70d(0x2a1)]['value']=_0x12869f,_0x1f52f5[_0x81a70d(0x2b5)](_0x56c1d7,_0x4c40f9);}};DoubleBufferTexture[_0x7112e(0x218)]={get 'width'(){var _0xc1801e=_0x7112e;return this[_0xc1801e(0x30b)];},get 'height'(){return this['_height'];},get 'source'(){var _0x2e9ec6=_0x7112e;return this[_0x2e9ec6(0x1ee)][_0x2e9ec6(0x126)];},get 'target'(){var _0x42d828=_0x7112e;return this[_0x42d828(0x115)];},'swap':function(){var _0x2efab4=_0x7112e,_0x526fc6=this['_sourceFBO'];this[_0x2efab4(0x1ee)]=this[_0x2efab4(0x115)],this[_0x2efab4(0x115)]=_0x526fc6;}},FindObject3D={'findByNamePartial':function(_0x14e44f,_0x356875,_0x106470){var _0x5c9734=_0x7112e;void 0x0===_0x106470&&(_0x106470=[]);for(var _0x15e532=0x0;_0x15e532<_0x14e44f['children']['length'];++_0x15e532){var _0x44e41a=_0x14e44f['children'][_0x15e532];_0x44e41a['name'][_0x5c9734(0x315)](_0x356875)>=0x0&&_0x106470[_0x5c9734(0x2c9)](_0x44e41a),FindObject3D[_0x5c9734(0x18a)](_0x44e41a,_0x356875,_0x106470);}return _0x106470;}};var FloatTex={'getHalfOrFloat':function(_0x232178){var _0x4e343c=_0x7112e,_0x1bc57a=_0x232178[_0x4e343c(0x384)];if(_0x1bc57a['get'](_0x4e343c(0x1ef)))return THREE[_0x4e343c(0x16f)];if(_0x1bc57a[_0x4e343c(0x183)](_0x4e343c(0x25f)))return THREE[_0x4e343c(0x3c2)];throw new Error('Float\x20render\x20targets\x20are\x20unsupported!');}},QueryString=function(){var _0x3f4059=_0x7112e;for(var _0xce4bff={},_0x117ce5=window['location']['search']['substring'](0x1),_0x59794c=_0x117ce5['split']('&'),_0x4abd78=0x0;_0x4abd78<_0x59794c[_0x3f4059(0x2a4)];_0x4abd78++){var _0x17e00b=_0x59794c[_0x4abd78]['split']('=');if('undefined'==typeof _0xce4bff[_0x17e00b[0x0]])_0xce4bff[_0x17e00b[0x0]]=decodeURIComponent(_0x17e00b[0x1]);else{if(_0x3f4059(0x2d4)==typeof _0xce4bff[_0x17e00b[0x0]]){var _0x154ca9=[_0xce4bff[_0x17e00b[0x0]],decodeURIComponent(_0x17e00b[0x1])];_0xce4bff[_0x17e00b[0x0]]=_0x154ca9;}else _0xce4bff[_0x17e00b[0x0]][_0x3f4059(0x2c9)](decodeURIComponent(_0x17e00b[0x1]));}}return _0xce4bff;}(),Random={'inRange':function(_0x2ab523,_0x1bb988){var _0x403edc=_0x7112e;return _0x2ab523+Math[_0x403edc(0x2c4)](Math['random']()*(_0x1bb988-_0x2ab523));},'element':function(_0x400183){var _0x4e8987=_0x7112e;return _0x400183[Random['inRange'](0x0,_0x400183[_0x4e8987(0x2a4)])];}};RectRenderer['prototype']={'execute':function(_0x3d17bd,_0x5e1de2,_0x2c72fc,_0x5afd86){var _0x54c110=_0x7112e,_0x2cb7e3=this[_0x54c110(0x137)][_0x54c110(0x35e)];this[_0x54c110(0x137)][_0x54c110(0x35e)]=void 0x0===_0x2c72fc||_0x2c72fc,this[_0x54c110(0x179)][_0x54c110(0x395)]=_0x3d17bd,this['_renderer'][_0x54c110(0x1fe)](this[_0x54c110(0x16b)],_0x5afd86||this[_0x54c110(0x38f)],_0x5e1de2),this['_renderer']['autoClear']=_0x2cb7e3;},'clear':function(_0x1e2d43){var _0x126c6a=_0x7112e;this['_renderer'][_0x126c6a(0x251)](_0x1e2d43),this['_renderer'][_0x126c6a(0x252)]();}},Signal=function(){var _0x40759a=_0x7112e;this[_0x40759a(0x1ad)]=[],this[_0x40759a(0x1a0)]={};},Signal[_0x7112e(0x218)]={'bind':function(_0x281260,_0x2f925b){var _0x398025=_0x7112e;this['_lookUp'][_0x281260]=this[_0x398025(0x1ad)][_0x398025(0x2a4)];var _0x55971f=_0x2f925b?_0x281260['bind'](_0x2f925b):_0x281260;this[_0x398025(0x1ad)][_0x398025(0x2c9)](_0x55971f);},'unbind':function(_0x2f3337){var _0x4ded8d=_0x7112e,_0xe98d68=this[_0x4ded8d(0x1a0)][_0x2f3337];this[_0x4ded8d(0x1ad)][_0x4ded8d(0x10d)](_0xe98d68,0x1),delete this['_lookUp'][_0x2f3337];},'dispatch':function(_0x14a003){var _0x2846f4=_0x7112e;for(var _0x2ce2a6=this['_listeners'][_0x2846f4(0x2a4)],_0x1f26b8=0x0;_0x1f26b8<_0x2ce2a6;++_0x1f26b8)this[_0x2846f4(0x1ad)][_0x1f26b8](_0x14a003);},get 'hasListeners'(){return this['_listeners']['length']>0x0;}},SwapMaterials={'setAll':function(_0x11e2bd,_0x2f5baf){var _0x1f76e1=_0x7112e;for(var _0x14797b=0x0;_0x14797b<_0x11e2bd[_0x1f76e1(0x3d6)][_0x1f76e1(0x2a4)];++_0x14797b){var _0x456f8e=_0x11e2bd[_0x1f76e1(0x3d6)][_0x14797b];_0x456f8e[_0x1f76e1(0x395)]=_0x2f5baf,SwapMaterials[_0x1f76e1(0x100)](_0x456f8e,_0x2f5baf);}},'swapSelect':function(_0xc1ad80,_0x4b688e){var _0x3e55a2=_0x7112e;for(var _0x168aab=0x0;_0x168aab<_0xc1ad80['children']['length'];++_0x168aab){var _0x332c16=_0xc1ad80[_0x3e55a2(0x3d6)][_0x168aab];_0x4b688e[_0x3e55a2(0x257)](_0x332c16['name'])&&(_0x332c16['material']=_0x4b688e[_0x332c16[_0x3e55a2(0x283)]]),SwapMaterials[_0x3e55a2(0x3a7)](_0x332c16,_0x4b688e);}},'swapSelectPartialMatch':function(_0x1fa9e3,_0x4d6e42){var _0x208c34=_0x7112e;for(var _0x283848=0x0;_0x283848<_0x1fa9e3['children'][_0x208c34(0x2a4)];++_0x283848){var _0x421669=_0x1fa9e3[_0x208c34(0x3d6)][_0x283848];for(var _0x1b15e2 in _0x4d6e42)_0x4d6e42[_0x208c34(0x257)](_0x1b15e2)&&_0x421669[_0x208c34(0x283)][_0x208c34(0x315)](_0x1b15e2)>=0x0&&(_0x421669[_0x208c34(0x395)]=_0x4d6e42[_0x1b15e2]);SwapMaterials[_0x208c34(0x3a7)](_0x421669,_0x4d6e42);}}},TripleBufferTexture[_0x7112e(0x218)]={get 'width'(){var _0x17ac9c=_0x7112e;return this[_0x17ac9c(0x30b)];},get 'height'(){var _0x17e84f=_0x7112e;return this[_0x17e84f(0x276)];},get 'stored'(){var _0x476ed7=_0x7112e;return this['_storedFBO'][_0x476ed7(0x126)];},get 'source'(){var _0x10cd2e=_0x7112e;return this[_0x10cd2e(0x1ee)]['texture'];},get 'target'(){return this['_targetFBO'];},'store':function(){var _0x350fc8=_0x7112e,_0x2a3593=this[_0x350fc8(0x1b7)];this[_0x350fc8(0x1b7)]=this['_targetFBO'],this[_0x350fc8(0x115)]=_0x2a3593;},'swap':function(){var _0x197782=_0x7112e,_0x2d281a=this[_0x197782(0x1ee)];this[_0x197782(0x1ee)]=this[_0x197782(0x115)],this[_0x197782(0x115)]=_0x2d281a;}},ShaderLibrary={'get':function(_0x524f22){var _0x491725=_0x7112e;return ShaderLibrary[_0x491725(0x249)](_0x491725(0x2cf))+ShaderLibrary['getInclude'](_0x491725(0x27c))+ShaderLibrary[_0x524f22+_0x491725(0x3c6)];},'getInclude':function(_0x1a2fbb){var _0x53ccb6=_0x7112e;return ShaderLibrary[_0x1a2fbb+_0x53ccb6(0x3c6)]+'\x0a';}},EntityEngine=function(){var _0x35e1fd=_0x7112e;this[_0x35e1fd(0xf5)]=[],this[_0x35e1fd(0x2f0)]=[],this[_0x35e1fd(0x17b)]=[];},EntityEngine[_0x7112e(0x218)]={'registerEntity':function(_0x2d8284){var _0x3b07ae=_0x7112e;_0x2d8284[_0x3b07ae(0x191)][_0x3b07ae(0xff)](this[_0x3b07ae(0x1a2)],this),_0x2d8284[_0x3b07ae(0x391)]&&this[_0x3b07ae(0x3ce)](_0x2d8284);},'unregisterEntity':function(_0x240a35){var _0x2df3b1=_0x7112e;_0x240a35[_0x2df3b1(0x191)][_0x2df3b1(0x1a5)](this),_0x240a35[_0x2df3b1(0x391)]&&this['_removeUpdatableEntity'](_0x240a35);},'destroyEntity':function(_0x5edffa){var _0x5b50af=_0x7112e;_0x5edffa[_0x5b50af(0x191)][_0x5b50af(0x1a5)](this),_0x5edffa[_0x5b50af(0x391)]&&this[_0x5b50af(0x120)](_0x5edffa),this[_0x5b50af(0x17b)][_0x5b50af(0x2c9)](_0x5edffa);},'_onEntityUpdateChange':function(_0x1f9792){var _0x98d993=_0x7112e;_0x1f9792[_0x98d993(0x391)]?this[_0x98d993(0x3ce)](_0x1f9792):this[_0x98d993(0x120)](_0x1f9792);},'_addUpdatableEntity':function(_0x832b21){var _0x458b0d=_0x7112e;this[_0x458b0d(0x2f0)]['push']({'entity':_0x832b21,'updatable':!0x0});},'_removeUpdatableEntity':function(_0x53cf21){var _0x272da1=_0x7112e;this[_0x272da1(0x2f0)][_0x272da1(0x2c9)]({'entity':_0x53cf21,'updatable':!0x1});},'_processUpdateQueue':function(){var _0x20e5e6=_0x7112e,_0x554401=this[_0x20e5e6(0x2f0)][_0x20e5e6(0x2a4)];if(0x0!==_0x554401){for(var _0x3a378c=0x0;_0x3a378c<_0x554401;++_0x3a378c){var _0x25b841=this[_0x20e5e6(0x2f0)][_0x3a378c],_0x58f042=_0x25b841[_0x20e5e6(0x242)];if(_0x25b841[_0x20e5e6(0x1ff)])this[_0x20e5e6(0xf5)][_0x20e5e6(0x2c9)](_0x58f042);else{var _0x55c336=this[_0x20e5e6(0xf5)]['indexOf'](_0x58f042);this[_0x20e5e6(0xf5)][_0x20e5e6(0x10d)](_0x55c336,0x1);}}this[_0x20e5e6(0x2f0)]=[];}},'_processDestroyQueue':function(){var _0x18d692=_0x7112e,_0x25194b=this[_0x18d692(0x17b)][_0x18d692(0x2a4)];if(0x0!==_0x25194b){for(var _0x10a233=0x0;_0x10a233<_0x25194b;++_0x10a233){var _0xd4b81e=this[_0x18d692(0x17b)][_0x10a233];delete _0xd4b81e[_0x18d692(0xf8)],delete _0xd4b81e[_0x18d692(0x391)],delete _0xd4b81e[_0x18d692(0x191)],delete _0xd4b81e[_0x18d692(0x231)],delete _0xd4b81e[_0x18d692(0x380)];}this[_0x18d692(0x17b)]=[];}},'update':function(_0x313789){var _0x459576=_0x7112e;this['_processUpdateQueue'](),this['_processDestroyQueue']();for(var _0x556dee=this[_0x459576(0xf5)],_0x1d0a76=_0x556dee[_0x459576(0x2a4)],_0x396b29=0x0;_0x396b29<_0x1d0a76;++_0x396b29)_0x556dee[_0x396b29]['_update'](_0x313789);}},Component=function(){this['_entity']=null;},Component['prototype']={'onAdded':function(){},'onRemoved':function(){},'onUpdate':null,get 'entity'(){var _0x4a00c1=_0x7112e;return this[_0x4a00c1(0x133)];}},Entity={'ENGINE':new EntityEngine(),'isEntity':function(_0x2fb105){var _0x2f98c9=_0x7112e;return!!_0x2fb105[_0x2f98c9(0xf8)];},'convert':function(_0x1688ac){var _0x5ae00d=_0x7112e;Entity[_0x5ae00d(0x2f2)](_0x1688ac)||(EntityPrototype['_init'](_0x1688ac),Entity[_0x5ae00d(0x1cd)]['registerEntity'](_0x1688ac));},'destroy':function(_0x160cae){var _0x47651d=_0x7112e;Entity[_0x47651d(0x1cd)][_0x47651d(0x2c5)](_0x160cae);},'addComponents':function(_0x1c5d98,_0x37c574){var _0x2653f1=_0x7112e;for(var _0x26a2dc=0x0;_0x26a2dc<_0x37c574[_0x2653f1(0x2a4)];++_0x26a2dc)Entity[_0x2653f1(0x1fb)](_0x1c5d98,_0x37c574[_0x26a2dc]);},'removeComponents':function(_0x107dd9,_0x532914){for(var _0x5fdd73=0x0;_0x5fdd73<_0x532914['length'];++_0x5fdd73)Entity['removeComponent'](_0x107dd9,_0x532914[_0x5fdd73]);},'addComponent':function(_0x2d349b,_0xb8032c){var _0x5cd284=_0x7112e;if(_0xb8032c[_0x5cd284(0x133)])throw new Error(_0x5cd284(0x2e0));Entity[_0x5cd284(0x203)](_0x2d349b),_0x2d349b[_0x5cd284(0xf8)][_0x5cd284(0x2c9)](_0xb8032c),_0x2d349b[_0x5cd284(0x380)](this[_0x5cd284(0x391)]||!!_0xb8032c[_0x5cd284(0x275)]),_0xb8032c['_entity']=_0x2d349b,_0xb8032c['onAdded']();},'hasComponent':function(_0x4a6ebd,_0x4cd8b8){var _0x24f59a=_0x7112e;return _0x4a6ebd[_0x24f59a(0xf8)]&&_0x4a6ebd[_0x24f59a(0xf8)][_0x24f59a(0x315)](_0x4cd8b8)>=0x0;},'removeComponent':function(_0x239f1b,_0x4d8b7b){var _0x450d38=_0x7112e;if(!Entity[_0x450d38(0x125)](_0x239f1b,_0x4d8b7b))throw new Error(_0x450d38(0x346));_0x4d8b7b[_0x450d38(0x25e)]();for(var _0x953f3d=!0x1,_0x74d1e1=_0x239f1b[_0x450d38(0xf8)]['length'],_0x200fce=0x0,_0x2e8848=[],_0xbdaf93=0x0;_0xbdaf93<_0x74d1e1;++_0xbdaf93){var _0x3cf0c6=_0x239f1b['_components'][_0xbdaf93];_0x3cf0c6!==_0x4d8b7b&&(_0x2e8848[_0x200fce++]=_0x3cf0c6,_0x953f3d=_0x953f3d||!!_0x4d8b7b[_0x450d38(0x275)]);}_0x239f1b[_0x450d38(0xf8)]=0x0===_0x200fce?null:_0x2e8848,_0x4d8b7b[_0x450d38(0x133)]=null,_0x239f1b[_0x450d38(0x380)](_0x953f3d);}},EntityPrototype={'_init':function(_0x29ec42){var _0x27b8f0=_0x7112e;_0x29ec42[_0x27b8f0(0xf8)]=[],_0x29ec42[_0x27b8f0(0x391)]=!0x1,_0x29ec42[_0x27b8f0(0x191)]=new Signal(),_0x29ec42[_0x27b8f0(0x231)]=function(_0x37b70b){var _0x78b1=_0x27b8f0,_0x5d43a6=this[_0x78b1(0xf8)];if(_0x5d43a6)for(var _0x4a6e38=_0x5d43a6[_0x78b1(0x2a4)],_0x15980b=0x0;_0x15980b<_0x4a6e38;++_0x15980b){var _0x43ea55=_0x5d43a6[_0x15980b];_0x43ea55[_0x78b1(0x275)]&&_0x43ea55['onUpdate'](_0x37b70b);}},_0x29ec42[_0x27b8f0(0x380)]=function(_0x52f1f1){var _0x1feb86=_0x27b8f0;_0x52f1f1!==this['_requiresUpdates']&&(this[_0x1feb86(0x391)]=_0x52f1f1,this[_0x1feb86(0x191)][_0x1feb86(0x1e6)](this));};}},ShaderLibrary['distance_functions.glsl']=_0x7112e(0x1aa),ShaderLibrary[_0x7112e(0x3bf)]=_0x7112e(0x28a),ShaderLibrary[_0x7112e(0x27b)]=_0x7112e(0x2e5),ShaderLibrary[_0x7112e(0x1c5)]=_0x7112e(0x2cc),ShaderLibrary['gaussian_blur_fragment.glsl']='uniform\x20sampler2D\x20tDiffuse;\x0a\x0avarying\x20vec2\x20vUv;\x0a\x0auniform\x20vec2\x20sampleStep;\x0auniform\x20float\x20weights[NUM_WEIGHTS];\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20vec4\x20val\x20=\x20texture2D(tDiffuse,\x20vUv)\x20*\x20weights[0];\x0a\x0a\x20\x20\x20\x20for\x20(int\x20i\x20=\x201;\x20i\x20<=\x20KERNEL_RADIUS;\x20++i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20offset\x20=\x20float(i)\x20*\x20sampleStep;\x0a\x20\x20\x20\x20\x20\x20\x20\x20val\x20+=\x20(texture2D(tDiffuse,\x20vUv\x20+\x20offset)\x20+\x20texture2D(tDiffuse,\x20vUv\x20-\x20offset))\x20*\x20weights[i];\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20val;\x0a}\x0a',ShaderLibrary[_0x7112e(0x173)]='varying\x20vec2\x20vUv;\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20gl_Position\x20=\x20vec4(position,\x201.0);\x0a\x20\x20\x20\x20vUv\x20=\x20uv;\x0a}\x0a',ShaderLibrary[_0x7112e(0x29b)]=_0x7112e(0x143),ShaderLibrary['debug_alpha_fragment.glsl']='varying\x20vec2\x20texCoords;\x0auniform\x20sampler2D\x20map;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec4\x20samp\x20=\x20texture2D(map,\x20texCoords);\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(samp.www,\x201.0);\x0a}\x0a',ShaderLibrary[_0x7112e(0x1e5)]='varying\x20vec2\x20texCoords;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec3\x20localPos\x20=\x20position;\x0a\x20\x20\x20\x20vec4\x20viewPos\x20=\x20modelViewMatrix\x20*\x20vec4(localPos,\x201.0);\x0a\x20\x20\x20\x20gl_Position\x20=\x20projectionMatrix\x20*\x20viewPos;\x0a\x20\x20\x20\x20texCoords\x20=\x20uv;\x0a}',ShaderLibrary[_0x7112e(0x1ba)]=_0x7112e(0x119),ShaderLibrary[_0x7112e(0x1eb)]=_0x7112e(0x168),ShaderLibrary['dielectric_fragment.glsl']=_0x7112e(0x236),ShaderLibrary['dielectric_vertex.glsl']=_0x7112e(0x221),ShaderLibrary['glass_fragment.glsl']=_0x7112e(0x2c7),ShaderLibrary[_0x7112e(0x187)]='varying\x20vec3\x20worldPosition;\x0avarying\x20vec3\x20viewPosition;\x0avarying\x20vec3\x20worldNormal;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20worldPosition\x20=\x20(modelMatrix\x20*\x20vec4(position,\x201.0)).xyz;\x0a\x20\x20\x20\x20//\x20normalMatrix\x20seems\x20to\x20be\x20view\x20space...\x20need\x20world\x20space,\x20but\x20it\x27s\x20okay\x20since\x20we\x27re\x20using\x20uniform\x20scaling\x20only\x0a\x20\x20\x20\x20vec4\x20viewPos\x20=\x20modelViewMatrix\x20*\x20vec4(position,1.0);\x0a\x20\x20\x20\x20worldNormal\x20=\x20mat3(modelMatrix)\x20*\x20normalize(normal);\x0a\x20\x20\x20\x20gl_Position\x20=\x20projectionMatrix\x20*\x20viewPos;\x0a\x20\x20\x20\x20viewPosition\x20=\x20viewPos.xyz;\x0a}',ShaderLibrary['linear_depth_fragment.glsl']='varying\x20float\x20linearDepth;\x0a\x0a//\x20Only\x20for\x200\x20-\x201\x0avec4\x20hx_floatToRGBA8(float\x20value)\x0a{\x0a\x20\x20\x20\x20vec4\x20enc\x20=\x20value\x20*\x20vec4(1.0,\x20255.0,\x2065025.0,\x2016581375.0);\x0a\x20\x20\x20\x20//\x20cannot\x20fract\x20first\x20value\x20or\x201\x20would\x20not\x20be\x20encodable\x0a\x20\x20\x20\x20enc.yzw\x20=\x20fract(enc.yzw);\x0a\x20\x20\x20\x20return\x20enc\x20-\x20enc.yzww\x20*\x20vec4(1.0/255.0,\x201.0/255.0,\x201.0/255.0,\x200.0);\x0a}\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20hx_floatToRGBA8(linearDepth);\x0a}\x0a',ShaderLibrary[_0x7112e(0x35f)]=_0x7112e(0x162),ShaderLibrary[_0x7112e(0x1b8)]=_0x7112e(0x2ae),ShaderLibrary[_0x7112e(0x19a)]=_0x7112e(0x181),ShaderLibrary['sky_fragment.glsl']='varying\x20vec3\x20worldViewDir;\x0a\x0auniform\x20samplerCube\x20envMap;\x0auniform\x20vec3\x20color;\x0auniform\x20float\x20invert;\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20vec3\x20elementDir\x20=\x20normalize(worldViewDir\x20*\x20invert);\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20textureCube(envMap,\x20elementDir)\x20*\x20vec4(color,\x201.0);\x0a}\x0a',ShaderLibrary['sky_vertex.glsl']='varying\x20vec3\x20worldViewDir;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec3\x20worldPosition\x20=\x20(modelMatrix\x20*\x20vec4(position,\x201.0)).xyz;\x0a\x20\x20\x20\x20worldViewDir\x20=\x20worldPosition\x20-\x20cameraPosition;\x0a\x20\x20\x20\x20gl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(position,\x201.0);\x0a}',ShaderLibrary['unlit_fragment.glsl']=_0x7112e(0x184),ShaderLibrary[_0x7112e(0x307)]=_0x7112e(0x1a7),ShaderLibrary[_0x7112e(0x24a)]=_0x7112e(0xe2),ShaderLibrary[_0x7112e(0x1ab)]=_0x7112e(0x288),ShaderLibrary[_0x7112e(0x17c)]=_0x7112e(0x312),ShaderLibrary[_0x7112e(0x345)]='#define\x20PI\x203.141592\x0a\x0astruct\x20Collision\x20{\x0a\x20\x20\x20\x20bool\x20collided;\x0a\x20\x20\x20\x20vec3\x20normal;\x0a\x20\x20\x20\x20vec3\x20point;\x0a//\x20\x20\x20\x20float\x20d;\x0a};\x0a\x0avec2\x20getBucketUV(vec3\x20position,\x20vec3\x20numCells,\x20float\x20cellSize)\x0a{\x0a\x20\x20\x20\x20//\x20map\x20position\x20to\x20actual\x20cell\x0a\x20\x20\x20\x20position\x20=\x20position\x20/\x20cellSize\x20+\x20numCells\x20*\x20.5;\x0a\x20\x20\x20\x20vec2\x20uv\x20=\x20(position.xy\x20+\x20vec2(.5))\x20/\x20vec2(numCells.x\x20*\x20numCells.z,\x20numCells.y);\x0a\x20\x20\x20\x20uv.x\x20+=\x20floor(position.z\x20+\x20.5)\x20/\x20numCells.z;\x0a\x20\x20\x20\x20return\x20uv;\x0a}\x0a\x0avec2\x20getParticleBufferUV(float\x20particleIndex,\x20vec2\x20texSize)\x0a{\x0a\x20\x20\x20\x20particleIndex\x20-=\x201.0;\x0a\x20\x20\x20\x20vec2\x20uv;\x0a\x20\x20\x20\x20uv.y\x20=\x20floor(particleIndex\x20/\x20texSize.x);\x0a\x20\x20\x20\x20uv.x\x20=\x20particleIndex\x20-\x20uv.y\x20*\x20texSize.x;\x0a\x20\x20\x20\x20return\x20(uv\x20+\x20vec2(.5))\x20/\x20texSize;\x0a}\x0a\x0a//\x20the\x20uv\x20coord\x20in\x20the\x20particle\x20rect\x20texture\x0avec4\x20sampleParticleData(sampler2D\x20tex,\x20float\x20particleIndex,\x20vec2\x20texSize)\x0a{\x0a\x20\x20\x20\x20vec2\x20uv\x20=\x20getParticleBufferUV(particleIndex,\x20texSize);\x0a\x20\x20\x20\x20return\x20texture2D(tex,\x20uv);\x0a}\x0a\x0avec4\x20sampleCellPoint(sampler2D\x20tex,\x20vec3\x20pos,\x20vec3\x20numCells,\x20float\x20cellSize)\x0a{\x0a\x20\x20\x20\x20pos\x20=\x20pos\x20/\x20cellSize\x20+\x20numCells\x20*\x20.5;\x0a\x20\x20\x20\x20vec2\x20uv;\x0a\x20\x20\x20\x20uv.xy\x20=\x20pos.xy\x20/\x20vec2(numCells.x\x20*\x20numCells.z,\x20numCells.y);\x0a\x20\x20\x20\x20uv.x\x20+=\x20pos.z\x20/\x20numCells.z;\x0a\x20\x20\x20\x20return\x20texture2D(tex,\x20uv);\x0a}\x0a\x0avec4\x20sampleCellLinear(sampler2D\x20tex,\x20vec3\x20pos,\x20vec3\x20numCells,\x20float\x20cellSize)\x0a{\x0a\x20\x20\x20\x20vec2\x20uv;\x0a\x20\x20\x20\x20pos\x20=\x20pos\x20/\x20cellSize\x20+\x20numCells\x20*\x20.5;\x0a\x20\x20\x20\x20uv.xy\x20=\x20pos.xy\x20/\x20vec2(numCells.x\x20*\x20numCells.z,\x20numCells.y);\x0a\x20\x20\x20\x20float\x20flZ\x20=\x20floor(pos.z);\x0a\x20\x20\x20\x20uv.x\x20+=\x20flZ\x20/\x20numCells.z;\x0a\x0a\x20\x20\x20\x20vec4\x20val1\x20=\x20texture2D(tex,\x20uv);\x0a\x20\x20\x20\x20uv.x\x20+=\x201.0\x20/\x20numCells.z;\x0a\x20\x20\x20\x20vec4\x20val2\x20=\x20texture2D(tex,\x20uv);\x0a\x0a\x20\x20\x20\x20return\x20mix(val1,\x20val2,\x20pos.z\x20-\x20flZ);\x0a}\x0a\x0abool\x20isInsideFluidDomain(vec3\x20pos,\x20vec3\x20numCells,\x20float\x20cellSize)\x0a{\x0a\x20\x20\x20\x20vec3\x20he\x20=\x20(numCells\x20*\x20.5)\x20*\x20cellSize;\x0a\x20\x20\x20\x20bvec3\x20g\x20=\x20greaterThanEqual(pos,\x20-he);\x0a\x20\x20\x20\x20bvec3\x20l\x20=\x20lessThanEqual(pos,\x20he);\x0a\x20\x20\x20\x20return\x20all(g)\x20&&\x20all(l);\x0a}\x0a\x0avec3\x20getCellPosition(vec2\x20uv,\x20vec3\x20numCells,\x20float\x20cellSize)\x0a{\x0a\x20\x20\x20\x20vec3\x20cell;\x0a\x20\x20\x20\x20//\x20coordinates\x20in\x20cell\x20coords\x20(cell\x20Y\x20matches\x20pixel\x20Y)\x0a\x20\x20\x20\x20cell.xy\x20=\x20uv\x20*\x20vec2(numCells.x\x20*\x20numCells.z,\x20numCells.y);\x0a\x20\x20\x20\x20cell.z\x20=\x20floor(cell.x\x20/\x20numCells.x);\x0a\x20\x20\x20\x20cell.x\x20-=\x20cell.z\x20*\x20numCells.x;\x0a\x20\x20\x20\x20cell\x20-=\x20numCells\x20*\x20.5;\x0a\x20\x20\x20\x20return\x20cell\x20*\x20cellSize;\x0a}\x0a\x0avec3\x20getCellPositionFromFragCoord(vec2\x20fragCoord,\x20vec3\x20numCells,\x20float\x20cellSize)\x0a{\x0a\x20\x20\x20\x20vec3\x20cell;\x0a\x20\x20\x20\x20//\x20coordinates\x20in\x20cell\x20coords\x20(cell\x20Y\x20matches\x20pixel\x20Y)\x0a\x20\x20\x20\x20cell.xy\x20=\x20fragCoord;\x0a\x20\x20\x20\x20cell.z\x20=\x20floor(cell.x\x20/\x20numCells.x);\x0a\x20\x20\x20\x20cell.x\x20-=\x20cell.z\x20*\x20numCells.x;\x0a\x20\x20\x20\x20cell\x20-=\x20numCells\x20*\x20.5;\x0a\x20\x20\x20\x20return\x20cell\x20*\x20cellSize;\x0a}',ShaderLibrary[_0x7112e(0x28f)]='uniform\x20sampler2D\x20bucketBuffer;\x0auniform\x20sampler2D\x20positionBuffer;\x0auniform\x20sampler2D\x20densityBuffer;\x0auniform\x20sampler2D\x20velocityBuffer;\x0a\x0avarying\x20vec2\x20texCoords;\x0a\x0auniform\x20vec3\x20numCells;\x0auniform\x20vec2\x20particleBufferSize;\x0auniform\x20vec2\x20bucketPixelSize;\x0auniform\x20float\x20cellSize;\x0auniform\x20float\x20gravity;\x0auniform\x20float\x20h;\x0auniform\x20float\x20h2;\x0auniform\x20float\x20pressNorm;\x0auniform\x20float\x20viscNorm;\x0auniform\x20float\x20surfaceNorm;\x0auniform\x20float\x20viscosity;\x0auniform\x20float\x20stiffness;\x0auniform\x20float\x20restDensity;\x0auniform\x20float\x20mass;\x0auniform\x20float\x20drag;\x0auniform\x20float\x20dt;\x0auniform\x20float\x20curvatureThreshold;\x0auniform\x20float\x20surfaceTension;\x0auniform\x20float\x20maxParticleIndex;\x0a\x0afloat\x20pressure(float\x20density)\x0a{\x0a\x20\x20\x20\x20//\x20rest\x20density\x20is\x20there\x20to\x20cause\x20attraction\x20when\x20density\x20is\x20too\x20low\x0a\x20\x20\x20\x20return\x20stiffness\x20*\x20(density\x20-\x20restDensity);\x0a}\x0a\x0a//\x20all\x20these\x20contributions\x20have\x20mass\x20removed\x20from\x20them,\x20as\x20it\x27s\x20constant\x20we\x20add\x20it\x20later\x0a\x0avec3\x20getPressContrib(vec3\x20R_ij,\x20float\x20dist,\x20float\x20p_i,\x20float\x20rho_j)\x0a{\x0a\x20\x20\x20\x20float\x20p_j\x20=\x20pressure(rho_j);\x0a\x20\x20\x20\x20float\x20d\x20=\x20max(h\x20-\x20dist,\x200.0);\x0a\x20\x20\x20\x20vec3\x20gradW\x20=\x20pressNorm\x20*\x20d\x20*\x20d\x20*\x20normalize(R_ij);\x0a\x20\x20\x20\x20return\x20-(p_i\x20+\x20p_j)\x20*\x20.5\x20/**\x20\x20mass\x20*//\x20rho_j\x20*\x20gradW;\x0a}\x0a\x0avec3\x20getViscContrib(vec3\x20R_ij,\x20float\x20dist,\x20vec3\x20v_i,\x20vec3\x20v_j,\x20float\x20rho_j)\x0a{\x0a\x20\x20\x20\x20float\x20diff\x20=\x20max(h\x20-\x20dist,\x200.0);\x0a\x20\x20\x20\x20float\x20laplW\x20=\x20viscNorm\x20*\x20diff;\x0a\x20\x20\x20\x20return\x20(v_j\x20-\x20v_i)\x20/**\x20mass\x20*//\x20rho_j\x20*\x20laplW;\x0a}\x0a\x0avec3\x20getGradColContrib(vec3\x20R_ij,\x20float\x20dist,\x20float\x20rho_j)\x0a{\x0a\x20\x20\x20\x20float\x20d\x20=\x20max(h2\x20-\x20dist\x20*\x20dist,\x200.0);\x0a\x20\x20\x20\x20vec3\x20gradW\x20=\x20surfaceNorm\x20*\x20R_ij\x20*\x20d\x20*\x20d;\x0a\x20\x20\x20\x20return\x20gradW\x20/**\x20mass*/\x20/\x20rho_j;\x0a}\x0a\x0afloat\x20getLaplaceColContrib(vec3\x20R_ij,\x20float\x20dist,\x20float\x20rho_j)\x0a{\x0a\x20\x20\x20\x20float\x20d1\x20=\x20max(h2\x20-\x20dist\x20*\x20dist,\x200.0);\x0a\x20\x20\x20\x20float\x20d2\x20=\x203.0\x20*\x20h2\x20-\x207.0\x20*\x20dist\x20*\x20dist;\x0a\x20\x20\x20\x20float\x20laplW\x20=\x20surfaceNorm\x20*\x20d1\x20*\x20d2;\x0a\x20\x20\x20\x20return\x20laplW\x20/**\x20mass\x20*//\x20rho_j;\x0a}\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec4\x20posSample\x20=\x20texture2D(positionBuffer,\x20texCoords);\x0a\x20\x20\x20\x20vec3\x20v_i\x20=\x20texture2D(velocityBuffer,\x20texCoords).xyz;\x0a\x20\x20\x20\x20vec3\x20x_i\x20=\x20posSample.xyz;\x0a\x20\x20\x20\x20float\x20rho_i\x20=\x20texture2D(densityBuffer,\x20texCoords).x;\x0a\x20\x20\x20\x20float\x20p_i\x20=\x20pressure(rho_i);\x0a\x20\x20\x20\x20float\x20thisIndex\x20=\x20posSample.w;\x0a\x0a\x20\x20\x20\x20vec3\x20Fpress\x20=\x20vec3(0.0);\x0a\x20\x20\x20\x20vec3\x20Fvisc\x20=\x20vec3(0.0);\x0a\x0a\x20\x20\x20\x20vec2\x20bucketUV\x20=\x20getBucketUV(x_i,\x20numCells,\x20cellSize);\x0a\x0a\x20\x20\x20\x20vec3\x20normal\x20=\x20vec3(0.0);\x0a\x20\x20\x20\x20float\x20laplCol\x20=\x200.0;\x0a\x0a\x20\x20\x20\x20for\x20(int\x20z\x20=\x20-SAMPLE_RADIUS;\x20z\x20<=\x20SAMPLE_RADIUS;\x20++z)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20y\x20=\x20-SAMPLE_RADIUS;\x20y\x20<=\x20SAMPLE_RADIUS;\x20++y)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20x\x20=\x20-SAMPLE_RADIUS;\x20x\x20<=\x20SAMPLE_RADIUS;\x20++x)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20uvNeigh\x20=\x20bucketUV\x20+\x20vec2(x,\x20y)\x20*\x20bucketPixelSize;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20uvNeigh.x\x20+=\x20float(z)\x20/\x20numCells.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20partIndices\x20=\x20texture2D(bucketBuffer,\x20uvNeigh);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20p\x20=\x200;\x20p\x20<\x204;\x20++p)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20index\x20=\x20partIndices[p];\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(index\x20>\x200.0\x20&&\x20thisIndex\x20!=\x20index)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20uv\x20=\x20getParticleBufferUV(index,\x20particleBufferSize);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20x_j\x20=\x20texture2D(positionBuffer,\x20uv).xyz;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20v_j\x20=\x20texture2D(velocityBuffer,\x20uv).xyz;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20rho_j\x20=\x20texture2D(densityBuffer,\x20uv).x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20R_ij\x20=\x20x_i\x20-\x20x_j;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20dist\x20=\x20length(R_ij);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Fpress\x20+=\x20getPressContrib(R_ij,\x20dist,\x20p_i,\x20rho_j);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Fvisc\x20+=\x20getViscContrib(R_ij,\x20dist,\x20v_i,\x20v_j,\x20rho_j);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20normal\x20+=\x20getGradColContrib(R_ij,\x20dist,\x20rho_j);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20laplCol\x20+=\x20getLaplaceColContrib(R_ij,\x20dist,\x20rho_j);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20laplCol\x20*=\x20mass;\x0a\x20\x20\x20\x20normal\x20*=\x20mass;\x0a\x20\x20\x20\x20Fpress\x20*=\x20mass;\x0a\x20\x20\x20\x20Fvisc\x20*=\x20mass;\x0a\x0a\x20\x20\x20\x20vec3\x20Fsurface\x20=\x20vec3(0.0);\x0a\x20\x20\x20\x20float\x20normalLen\x20=\x20length(normal);\x0a\x20\x20\x20\x20if\x20(normalLen\x20>\x20curvatureThreshold)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20curvature\x20=\x20-laplCol\x20/\x20normalLen;\x0a\x20\x20\x20\x20\x20\x20\x20\x20Fsurface\x20=\x20surfaceTension\x20*\x20curvature\x20*\x20normal\x20/\x20normalLen;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20vec3\x20dragAccell\x20=\x20-v_i\x20*\x20drag;\x0a\x20\x20\x20\x20vec3\x20F\x20=\x20viscosity\x20*\x20Fvisc\x20+\x20Fpress\x20+\x20Fsurface;\x0a\x20\x20\x20\x20vec3\x20a_i\x20=\x20F\x20/\x20rho_i;\x0a\x20\x20\x20\x20a_i.y\x20+=\x20gravity;\x0a\x20\x20\x20\x20a_i\x20+=\x20dragAccell;\x0a\x0a\x20\x20\x20\x20if\x20(thisIndex\x20>\x20maxParticleIndex)\x0a\x20\x20\x20\x20\x20\x20\x20\x20a_i\x20=\x20vec3(0.0);\x0a\x0a\x20\x20\x20\x20gl_FragColor.xyz\x20=\x20a_i;\x0a\x20\x20\x20\x20gl_FragColor.w\x20=\x201.0;\x0a}\x0a\x0a',ShaderLibrary[_0x7112e(0x147)]=_0x7112e(0x217),ShaderLibrary[_0x7112e(0x2fa)]=_0x7112e(0xe6),ShaderLibrary[_0x7112e(0x22a)]=_0x7112e(0x2c2),ShaderLibrary[_0x7112e(0x37b)]='uniform\x20sampler2D\x20positionBuffer;\x0auniform\x20sampler2D\x20collisionBuffer;\x0auniform\x20sampler2D\x20bucketBuffer;\x0a\x0avarying\x20vec2\x20texCoords;\x0a\x0auniform\x20vec3\x20numCells;\x0auniform\x20float\x20cellSize;\x0auniform\x20vec2\x20particleBufferSize;\x0auniform\x20vec2\x20bucketPixelSize;\x0auniform\x20float\x20mass;\x0auniform\x20float\x20h2;\x0auniform\x20float\x20kernelNorm;\x0a\x0afloat\x20kernel(float\x20dist2)\x0a{\x0a\x20\x20\x20\x20//\x206th\x20degree\x20polynomial\x20kernel\x0a\x20\x20\x20\x20float\x20diff\x20=\x20max(h2\x20-\x20dist2,\x200.0);\x0a\x20\x20\x20\x20return\x20kernelNorm\x20*\x20pow(diff,\x203.0);\x0a}\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec3\x20x_i\x20=\x20texture2D(positionBuffer,\x20texCoords).xyz;\x0a\x0a\x20\x20\x20\x20//\x20when\x20using\x20half\x20float\x20texture,\x20this\x20messes\x20up\x0a\x20\x20\x20\x20float\x20sum\x20=\x200.0;\x0a\x0a\x20\x20\x20\x20vec2\x20bucketUV\x20=\x20getBucketUV(x_i,\x20numCells,\x20cellSize);\x0a\x20\x20\x20\x20for\x20(int\x20z\x20=\x20-SAMPLE_RADIUS;\x20z\x20<=\x20SAMPLE_RADIUS;\x20++z)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20y\x20=\x20-SAMPLE_RADIUS;\x20y\x20<=\x20SAMPLE_RADIUS;\x20++y)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20x\x20=\x20-SAMPLE_RADIUS;\x20x\x20<=\x20SAMPLE_RADIUS;\x20++x)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20uvNeigh\x20=\x20bucketUV\x20+\x20vec2(x,\x20y)\x20*\x20bucketPixelSize;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20uvNeigh.x\x20+=\x20float(z)\x20/\x20numCells.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20partIndices\x20=\x20texture2D(bucketBuffer,\x20uvNeigh);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20p\x20=\x200;\x20p\x20<\x204;\x20++p)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20index\x20=\x20partIndices[p];\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(index\x20>\x200.0)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20x_j\x20=\x20sampleParticleData(positionBuffer,\x20index,\x20particleBufferSize).xyz;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20r\x20=\x20x_i\x20-\x20x_j;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20dist2\x20=\x20dot(r,\x20r);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20sum\x20+=\x20kernel(dist2);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a\x0a//\x20\x20\x20\x20float\x20wallDist\x20=\x20texture2D(collisionBuffer,\x20bucketUV).w;\x0a//\x20\x20\x20\x20sum\x20+=\x20kernel(wallDist\x20*\x20wallDist)\x20*\x203.0;\x0a\x20\x20\x20\x20sum\x20*=\x20mass;\x0a\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(sum,\x20sum,\x20sum,\x201.0);\x0a}\x0a',ShaderLibrary[_0x7112e(0x1c2)]=_0x7112e(0x16c),ShaderLibrary['sph_distance_vertex.glsl']=_0x7112e(0x31d),ShaderLibrary[_0x7112e(0x2da)]='uniform\x20vec3\x20wallExtent;\x0auniform\x20vec3\x20numCells;\x0auniform\x20float\x20cellSize;\x0auniform\x20vec3\x20spherePosition;\x0auniform\x20float\x20sphereRadius;\x0a\x0auniform\x20sampler2D\x20heightMap;\x0a\x0afloat\x20getDistance(vec3\x20pos)\x0a{\x0a\x20\x20\x20\x20float\x20wallDist\x20=\x20signedDistanceWalls(pos,\x20wallExtent);\x0a\x0a\x20\x20\x20\x20//\x20this\x20is\x20not\x20entirely\x20correct,\x20but\x20let\x27s\x20hope\x20it\x27s\x20good\x20enough\x0a\x20\x20\x20\x20vec3\x20size\x20=\x20numCells\x20*\x20cellSize;\x0a\x20\x20\x20\x20vec2\x20uv\x20=\x20pos.xz\x20/\x20size.xz\x20+\x20.5;\x0a\x20\x20\x20\x20uv.y\x20=\x201.0\x20-\x20uv.y;\x0a\x20\x20\x20\x20float\x20y\x20=(texture2D(heightMap,\x20uv).x\x20-\x20.5)\x20*\x20size.y;\x0a\x20\x20\x20\x20float\x20heightMapDist\x20=\x20pos.y\x20-\x20y;\x0a\x0a\x20\x20\x20\x20return\x20min(wallDist,\x20heightMapDist);\x0a}\x0a\x0avec3\x20getNormal(vec3\x20pos)\x0a{\x0a\x20\x20\x20\x20float\x20r\x20=\x20getDistance(pos\x20+\x20vec3(cellSize,\x200.0,\x200.0));\x0a\x20\x20\x20\x20float\x20l\x20=\x20getDistance(pos\x20-\x20vec3(cellSize,\x200.0,\x200.0));\x0a\x20\x20\x20\x20float\x20t\x20=\x20getDistance(pos\x20+\x20vec3(0.0,\x20cellSize,\x200.0));\x0a\x20\x20\x20\x20float\x20b\x20=\x20getDistance(pos\x20-\x20vec3(0.0,\x20cellSize,\x200.0));\x0a\x20\x20\x20\x20float\x20n\x20=\x20getDistance(pos\x20+\x20vec3(0.0,\x200.0,\x20cellSize));\x0a\x20\x20\x20\x20float\x20f\x20=\x20getDistance(pos\x20-\x20vec3(0.0,\x200.0,\x20cellSize));\x0a\x0a\x20\x20\x20\x20//\x20normalization\x20happens\x20in\x20collision\x20test\x20anyway,\x20so\x20no\x20need\x20for\x20it\x20here\x0a\x20\x20\x20\x20return\x20normalize(vec3(r\x20-\x20l,\x20t\x20-\x20b,\x20n\x20-\x20f));\x0a}\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec3\x20pos\x20=\x20getCellPositionFromFragCoord(gl_FragCoord.xy,\x20numCells,\x20cellSize);\x0a\x20\x20\x20\x20float\x20dist\x20=\x20getDistance(pos);\x0a\x20\x20\x20\x20vec3\x20normal\x20=\x20getNormal(pos);\x0a\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(normal,\x20dist);\x0a}\x0a',ShaderLibrary[_0x7112e(0x140)]=_0x7112e(0x186),ShaderLibrary['sph_init_velocity_stream.glsl']=_0x7112e(0x16d),ShaderLibrary['sph_particle_depth_fragment.glsl']=_0x7112e(0x13c),ShaderLibrary[_0x7112e(0x2af)]='attribute\x20vec2\x20positionUV;\x0a\x0auniform\x20sampler2D\x20positionBuffer;\x0auniform\x20float\x20particleSize;\x0auniform\x20vec2\x20viewportSize;\x0a\x0avarying\x20float\x20radius;\x0avarying\x20vec2\x20centerFrag;\x0avarying\x20vec3\x20viewPosition;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec4\x20localPos\x20=\x20vec4(texture2D(positionBuffer,\x20positionUV).xyz,\x201.0);\x0a\x20\x20\x20\x20vec4\x20viewPos\x20=\x20modelViewMatrix\x20*\x20localPos;\x0a\x20\x20\x20\x20gl_Position\x20=\x20projectionMatrix\x20*\x20viewPos;\x0a\x20\x20\x20\x20radius\x20=\x20-projectionMatrix[1][1]\x20*\x20particleSize\x20/\x20viewPos.z\x20*\x20viewportSize.y;\x0a\x20\x20\x20\x20gl_PointSize\x20=\x20radius\x20*\x202.0;\x0a\x0a\x20\x20\x20\x20centerFrag\x20=\x20(gl_Position.xy\x20/\x20gl_Position.w\x20+\x201.0)\x20*\x20viewportSize\x20*\x20.5;\x0a\x0a\x20\x20\x20\x20viewPosition\x20=\x20viewPos.xyz;\x0a}',ShaderLibrary[_0x7112e(0x292)]=_0x7112e(0x1f5),ShaderLibrary[_0x7112e(0x3be)]=_0x7112e(0x1e8),ShaderLibrary[_0x7112e(0x21c)]=_0x7112e(0x2c0),ShaderLibrary[_0x7112e(0x23f)]='varying\x20vec2\x20texCoords;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20texCoords\x20=\x20uv;\x0a\x20\x20\x20\x20gl_Position\x20=\x20vec4(position,\x201.0);\x0a}',ShaderLibrary['sph_velocity_fragment.glsl']=_0x7112e(0xf4),ShaderLibrary[_0x7112e(0x1b6)]=_0x7112e(0x2d2),SPHCollider[_0x7112e(0x218)]={get 'texture'(){var _0x2c2c94=_0x7112e;return this['_target'][_0x2c2c94(0x126)];},'init':function(_0x1aaa01,_0x552765){var _0x144baa=_0x7112e;this[_0x144baa(0x137)]=_0x552765,this['_halfFloatType']=FloatTex[_0x144baa(0x232)](_0x552765),this[_0x144baa(0x176)]=new RectRenderer(_0x552765),this[_0x144baa(0x229)]=_0x1aaa01[_0x144baa(0x32f)],this[_0x144baa(0x1d9)]=_0x1aaa01['cellSize'],this[_0x144baa(0xda)]=new THREE['WebGLRenderTarget'](this[_0x144baa(0x229)]['x']*this[_0x144baa(0x229)]['z'],this[_0x144baa(0x229)]['y'],{'type':this[_0x144baa(0x316)],'minFilter':THREE['LinearFilter'],'magFilter':THREE[_0x144baa(0x31c)],'generateMipmaps':!0x1,'depthBuffer':!0x1,'stencilBuffer':!0x1,'format':THREE[_0x144baa(0x1fc)]});var _0x2deb5f=this['_material'][_0x144baa(0x2c8)];_0x2deb5f['numCells'][_0x144baa(0xeb)]=this['_numCells'],_0x2deb5f['wallExtent'][_0x144baa(0xeb)]=_0x1aaa01[_0x144baa(0x1c7)],_0x2deb5f[_0x144baa(0x2df)][_0x144baa(0xeb)]=this[_0x144baa(0x1d9)];},'invalidate':function(){var _0x2e710c=_0x7112e;this[_0x2e710c(0x2e9)]=!0x0;},'update':function(){var _0x4fd877=_0x7112e;this[_0x4fd877(0x2e9)]&&(this['_updateMaterial'](),this[_0x4fd877(0x176)][_0x4fd877(0x2b5)](this[_0x4fd877(0x399)],this[_0x4fd877(0xda)],!0x0),this[_0x4fd877(0x2e9)]=!0x1);},'_updateMaterial':function(){}};var highPerformance,mainProject,assetLibrary,debugMode=QueryString[_0x7112e(0x357)]&&'0'!==QueryString[_0x7112e(0x357)]&&_0x7112e(0x365)!==QueryString['debug'];window[_0x7112e(0x2a6)]=startUp,AssetLibrary=function(_0xc0f1bb){var _0x108825=_0x7112e;this['_numLoaded']=0x0,this['_queue']=[],this['_assets']={},_0xc0f1bb&&'/'!=_0xc0f1bb[_0x108825(0x282)](_0xc0f1bb['length']-0x1)&&(_0xc0f1bb+='/'),this['_basePath']=_0xc0f1bb||'',this[_0x108825(0x152)]=new Signal(),this[_0x108825(0x26c)]=new Signal();},AssetLibrary[_0x7112e(0x11c)]={'JSON':0x0,'MODEL':0x1,'TEXTURE_2D':0x2,'TEXTURE_CUBE':0x3,'PLAIN_TEXT':0x4},AssetLibrary[_0x7112e(0x218)]={get 'onComplete'(){var _0x584aba=_0x7112e;return this[_0x584aba(0x152)];},get 'onProgress'(){var _0x79b8f1=_0x7112e;return this[_0x79b8f1(0x26c)];},get 'basePath'(){return this['_basePath'];},'queueAsset':function(_0x38f5fb,_0x3523bf,_0x5c2f5f,_0x17e114){var _0x389e02=_0x7112e;this[_0x389e02(0x169)][_0x389e02(0x2c9)]({'id':_0x38f5fb,'filename':this[_0x389e02(0x313)]+_0x3523bf,'type':_0x5c2f5f,'parser':_0x17e114});},'load':function(){var _0x2b9c4d=_0x7112e;if(0x0===this['_queue'][_0x2b9c4d(0x2a4)])return void this['onComplete'][_0x2b9c4d(0x1e6)]();var _0x1f668f=this['_queue'][this[_0x2b9c4d(0x14e)]];switch(_0x1f668f[_0x2b9c4d(0x3d0)]){case AssetLibrary[_0x2b9c4d(0x11c)]['JSON']:this[_0x2b9c4d(0x33f)](_0x1f668f[_0x2b9c4d(0x174)],_0x1f668f['id']);break;case AssetLibrary[_0x2b9c4d(0x11c)]['MODEL']:this[_0x2b9c4d(0x19d)](_0x1f668f[_0x2b9c4d(0x174)],_0x1f668f['id'],_0x1f668f[_0x2b9c4d(0x2be)]);break;case AssetLibrary[_0x2b9c4d(0x11c)][_0x2b9c4d(0x1be)]:this[_0x2b9c4d(0x37e)](_0x1f668f[_0x2b9c4d(0x174)],_0x1f668f['id']);break;case AssetLibrary[_0x2b9c4d(0x11c)][_0x2b9c4d(0x34f)]:this['_textureCube'](_0x1f668f['filename'],_0x1f668f['id']);break;case AssetLibrary[_0x2b9c4d(0x11c)]['PLAIN_TEXT']:this[_0x2b9c4d(0x309)](_0x1f668f[_0x2b9c4d(0x174)],_0x1f668f['id']);}},'get':function(_0x1b165d){return this['_assets'][_0x1b165d];},'_json':function(_0x2d6651,_0x595572){var _0x778688=_0x7112e,_0x3dee81=this,_0x25091a=new XMLHttpRequest();_0x25091a[_0x778688(0x25a)](_0x778688(0x22b)),_0x25091a[_0x778688(0x3c8)]('GET',_0x2d6651,!0x0),_0x25091a[_0x778688(0x355)]=function(){var _0xe5213d=_0x778688;0x4===_0x25091a[_0xe5213d(0x16a)]&&_0xe5213d(0x361)==_0x25091a['status']&&(_0x3dee81['_assets'][_0x595572]=JSON[_0xe5213d(0x235)](_0x25091a['responseText']),_0x3dee81[_0xe5213d(0x35b)]());},_0x25091a[_0x778688(0x228)](null);},'_plainText':function(_0x23f408,_0x129dcc){var _0x3847a1=_0x7112e,_0x21c9af=this,_0x5375c3=new XMLHttpRequest();_0x5375c3[_0x3847a1(0x25a)]('application/json'),_0x5375c3['open'](_0x3847a1(0x306),_0x23f408,!0x0),_0x5375c3['onreadystatechange']=function(){var _0x55eb9d=_0x3847a1;0x4===_0x5375c3['readyState']&&_0x55eb9d(0x361)==_0x5375c3[_0x55eb9d(0x1bb)]&&(_0x21c9af['_assets'][_0x129dcc]=_0x5375c3[_0x55eb9d(0x34c)],_0x21c9af[_0x55eb9d(0x35b)]());},_0x5375c3['send'](null);},'_textureCube':function(_0x51c9be,_0x45f5f8){var _0x75b36e=_0x7112e,_0x1b8505=this,_0x1d37fd=new THREE[(_0x75b36e(0x295))]();this[_0x75b36e(0x2b3)][_0x45f5f8]=_0x1d37fd[_0x75b36e(0xfe)]([_0x51c9be+_0x75b36e(0x291),_0x51c9be+_0x75b36e(0x13b),_0x51c9be+_0x75b36e(0x341),_0x51c9be+_0x75b36e(0x334),_0x51c9be+_0x75b36e(0x370),_0x51c9be+_0x75b36e(0x10a)],function(){_0x1b8505['_onAssetLoaded']();}),this['_assets'][_0x45f5f8]['mapping']=THREE['CubeReflectionMapping'];},'_texture2D':function(_0x952d90,_0x67e591){var _0x1b068c=_0x7112e,_0x76f02a=this,_0x2b5726=new THREE[(_0x1b068c(0x15f))](),_0x5eccf5=this[_0x1b068c(0x2b3)][_0x67e591]=_0x2b5726[_0x1b068c(0xfe)](_0x952d90,function(){var _0x59a85b=_0x1b068c;_0x76f02a[_0x59a85b(0x35b)]();});_0x5eccf5['wrapS']=THREE[_0x1b068c(0x21b)],_0x5eccf5['wrapT']=THREE[_0x1b068c(0x21b)],_0x5eccf5[_0x1b068c(0x348)]=THREE[_0x1b068c(0x111)],_0x5eccf5[_0x1b068c(0x3b8)]=THREE['LinearFilter'],highPerformance&&(_0x5eccf5['anisotropy']=0x10);},'_model':function(_0x2a0c1a,_0x549d16,_0x26592e){var _0x26592e=this,_0x10fce7=new THREE['OBJLoader']();_0x10fce7['load'](_0x2a0c1a,_0x4ed0d5=>{var _0x495102=_0x1a08;this[_0x495102(0x2b3)][_0x549d16]=_0x4ed0d5[_0x495102(0x3d6)][0x0],_0x26592e[_0x495102(0x35b)]();});},'_onAssetLoaded':function(){var _0x5152cc=_0x7112e;this[_0x5152cc(0x26c)][_0x5152cc(0x1e6)](this['_numLoaded']/this[_0x5152cc(0x169)][_0x5152cc(0x2a4)]),++this[_0x5152cc(0x14e)]===this['_queue'][_0x5152cc(0x2a4)]?this[_0x5152cc(0x152)][_0x5152cc(0x1e6)](this):this[_0x5152cc(0xfe)]();}},BillboardComponent=function(_0x1dbd9d,_0x295032){var _0x82b776=_0x7112e;this[_0x82b776(0x38f)]=_0x1dbd9d,this[_0x82b776(0x27a)]=_0x295032,this['_v']=new THREE['Vector3']();},BillboardComponent[_0x7112e(0x218)]=Object[_0x7112e(0xe9)](Component[_0x7112e(0x218)],{'constantSize':{'get':function(){var _0x81ce93=_0x7112e;return this[_0x81ce93(0x27a)];},'set':function(_0x5cca27){this['_constantSize']=_0x5cca27;}},'camera':{'get':function(){var _0x9f058e=_0x7112e;return this[_0x9f058e(0x38f)];},'set':function(_0x1064ba){var _0x317196=_0x7112e;this[_0x317196(0x38f)]=_0x1064ba;}}}),BillboardComponent[_0x7112e(0x218)]['onAdded']=function(){},BillboardComponent[_0x7112e(0x218)][_0x7112e(0x25e)]=function(){},BillboardComponent['prototype'][_0x7112e(0x275)]=function(_0x47c495){var _0x2a3c8f=_0x7112e;this['_v'][_0x2a3c8f(0x243)](this[_0x2a3c8f(0x38f)][_0x2a3c8f(0x368)]),this['entity'][_0x2a3c8f(0x271)](this['_v']),this[_0x2a3c8f(0x27a)]&&(this['_v'][_0x2a3c8f(0x372)](this[_0x2a3c8f(0x242)][_0x2a3c8f(0x22c)]),this['_v'][_0x2a3c8f(0x198)](this[_0x2a3c8f(0x38f)]['matrixWorldInverse']),this[_0x2a3c8f(0x242)][_0x2a3c8f(0x356)]['set'](-this['_v']['z'],-this['_v']['z'],-this['_v']['z']));},OrbitController=function(_0x3674b6,_0x4a81e3,_0x1987df){var _0x38cd11=_0x7112e;Component['call'](this),this[_0x38cd11(0x3cf)]=!0x0,this['_container']=_0x3674b6,this['_coords']=new THREE[(_0x38cd11(0x397))](0x0,0.4*Math['PI'],0x2),this[_0x38cd11(0x308)]=new THREE['Vector3'](0x0,0x0,0x0),this[_0x38cd11(0x339)]=new THREE[(_0x38cd11(0x397))](0x0,0x0,0x0),this['lookAtTarget']=_0x4a81e3||new THREE[(_0x38cd11(0x397))](0x0,0x0,0x0),this[_0x38cd11(0x124)]=0x2,this[_0x38cd11(0x24b)]=0x14,this[_0x38cd11(0x241)]=0.1,this[_0x38cd11(0x10e)]=0.9,this[_0x38cd11(0x269)]=void 0x0,this[_0x38cd11(0x172)]=void 0x0,this[_0x38cd11(0xed)]=0.1,this['maxPolar']=Math['PI']-0.1,this['moveAcceleration']=0.02,this['_m']=new THREE[(_0x38cd11(0x2ec))](),this['_oldMouseX']=0x0,this[_0x38cd11(0x148)]=0x0,this[_0x38cd11(0x1ed)]=_0x1987df,this[_0x38cd11(0x2aa)]=new THREE['Vector3'](),this['_moveVelocity']=new THREE[(_0x38cd11(0x397))](),this[_0x38cd11(0x21d)]=!0x1,this[_0x38cd11(0x322)]();},OrbitController[_0x7112e(0x218)]=Object['create'](Component['prototype'],{'radius':{'get':function(){var _0x1fd175=_0x7112e;return this[_0x1fd175(0x3ca)]['z'];},'set':function(_0x43bfd8){var _0x40607f=_0x7112e;this[_0x40607f(0x3ca)]['z']=_0x43bfd8;}},'azimuth':{'get':function(){var _0x44c22c=_0x7112e;return this[_0x44c22c(0x3ca)]['x'];},'set':function(_0x2190e7){this['_coords']['x']=_0x2190e7;}},'polar':{'get':function(){var _0x3b0ab9=_0x7112e;return this[_0x3b0ab9(0x3ca)]['y'];},'set':function(_0x8efae1){var _0x13421c=_0x7112e;this[_0x13421c(0x3ca)]['y']=_0x8efae1;}}}),OrbitController[_0x7112e(0x218)]['onAdded']=function(){var _0x2dff6e=_0x7112e;this['_isDown']=!0x1;var _0x213e05=/Firefox/i[_0x2dff6e(0x11b)](navigator[_0x2dff6e(0x39b)])?'DOMMouseScroll':_0x2dff6e(0x2b4);this['_container'][_0x2dff6e(0x37c)](_0x213e05,this[_0x2dff6e(0xe4)]),this[_0x2dff6e(0x160)][_0x2dff6e(0x37c)](_0x2dff6e(0x342),this['_onMouseMove']),this[_0x2dff6e(0x160)][_0x2dff6e(0x37c)](_0x2dff6e(0xe7),this[_0x2dff6e(0x360)]),this[_0x2dff6e(0x160)][_0x2dff6e(0x37c)](_0x2dff6e(0x1e7),this[_0x2dff6e(0x333)]),this[_0x2dff6e(0x160)][_0x2dff6e(0x37c)]('touchstart',this['_onTouchDown']),this[_0x2dff6e(0x160)]['addEventListener'](_0x2dff6e(0x330),this[_0x2dff6e(0x39c)]),this[_0x2dff6e(0x160)][_0x2dff6e(0x37c)](_0x2dff6e(0x32a),this['_onUp']),this['_moveWithKeys']&&(document[_0x2dff6e(0x37c)](_0x2dff6e(0x11d),this[_0x2dff6e(0x23b)]),document[_0x2dff6e(0x37c)](_0x2dff6e(0x31a),this[_0x2dff6e(0x394)]));},OrbitController[_0x7112e(0x218)][_0x7112e(0x25e)]=function(){var _0x2c5419=_0x7112e,_0x2009fc=/Firefox/i[_0x2c5419(0x11b)](navigator[_0x2c5419(0x39b)])?_0x2c5419(0x2c3):_0x2c5419(0x2b4);this[_0x2c5419(0x160)][_0x2c5419(0x385)](_0x2009fc,this[_0x2c5419(0xe4)]),this[_0x2c5419(0x160)][_0x2c5419(0x385)]('mousemove',this[_0x2c5419(0x15b)]),this[_0x2c5419(0x160)]['removeEventListener'](_0x2c5419(0xe7),this[_0x2c5419(0x360)]),this['_container']['removeEventListener'](_0x2c5419(0x1e7),this[_0x2c5419(0x333)]),this[_0x2c5419(0x160)][_0x2c5419(0x385)](_0x2c5419(0x222),this[_0x2c5419(0x37f)]),this[_0x2c5419(0x160)][_0x2c5419(0x385)]('mouseup',this['_onUp']),this[_0x2c5419(0x160)][_0x2c5419(0x385)](_0x2c5419(0x32a),this[_0x2c5419(0x39c)]),this['_moveWithKeys']&&(document['removeEventListener'](_0x2c5419(0x11d),this['_onKeyUp']),document['removeEventListener'](_0x2c5419(0x31a),this['_onKeyDown']));},OrbitController[_0x7112e(0x218)][_0x7112e(0x275)]=function(_0x4dc000){var _0x1d9bb0=_0x7112e;if(this[_0x1d9bb0(0x3cf)]){if(this[_0x1d9bb0(0x1ed)]){this[_0x1d9bb0(0x3da)]['x']*=this[_0x1d9bb0(0x10e)],this[_0x1d9bb0(0x3da)]['y']*=this[_0x1d9bb0(0x10e)],this[_0x1d9bb0(0x3da)]['z']*=this[_0x1d9bb0(0x10e)],this[_0x1d9bb0(0x3da)]['x']+=this[_0x1d9bb0(0x2aa)]['x'],this[_0x1d9bb0(0x3da)]['y']+=this[_0x1d9bb0(0x2aa)]['y'],this[_0x1d9bb0(0x3da)]['z']+=this['_moveAcceleration']['z'];var _0x1d72c6=new THREE[(_0x1d9bb0(0x397))]();_0x1d72c6[_0x1d9bb0(0x372)](this[_0x1d9bb0(0x3da)]),_0x1d72c6['applyQuaternion'](this[_0x1d9bb0(0x242)]['quaternion'][_0x1d9bb0(0x298)](this[_0x1d9bb0(0x242)][_0x1d9bb0(0x368)])),this[_0x1d9bb0(0x105)]['x']+=_0x1d72c6['x'],this[_0x1d9bb0(0x105)]['y']+=this[_0x1d9bb0(0x3da)]['y'],this[_0x1d9bb0(0x105)]['z']+=_0x1d72c6['z'];}this[_0x1d9bb0(0x339)]['x']*=this[_0x1d9bb0(0x10e)],this[_0x1d9bb0(0x339)]['y']*=this[_0x1d9bb0(0x10e)],this[_0x1d9bb0(0x339)]['z']*=this[_0x1d9bb0(0x10e)],this[_0x1d9bb0(0x339)]['x']+=this['_localAcceleration']['x'],this['_localVelocity']['y']+=this[_0x1d9bb0(0x308)]['y'],this[_0x1d9bb0(0x339)]['z']+=this[_0x1d9bb0(0x308)]['z'],this[_0x1d9bb0(0x308)]['x']=0x0,this[_0x1d9bb0(0x308)]['y']=0x0,this[_0x1d9bb0(0x308)]['z']=0x0,this[_0x1d9bb0(0x3ca)][_0x1d9bb0(0x284)](this['_localVelocity']),this[_0x1d9bb0(0x3ca)]['y']=THREE[_0x1d9bb0(0x14d)][_0x1d9bb0(0x248)](this[_0x1d9bb0(0x3ca)]['y'],this['minPolar'],this[_0x1d9bb0(0x118)]),this[_0x1d9bb0(0x3ca)]['z']=THREE[_0x1d9bb0(0x14d)][_0x1d9bb0(0x248)](this[_0x1d9bb0(0x3ca)]['z'],this['minRadius'],this[_0x1d9bb0(0x24b)]),void 0x0!==this[_0x1d9bb0(0x269)]&&void 0x0!==this['minAzimuth']&&(this[_0x1d9bb0(0x3ca)]['x']=THREE[_0x1d9bb0(0x14d)][_0x1d9bb0(0x248)](this['_coords']['x'],this['minAzimuth'],this[_0x1d9bb0(0x269)]));var _0xd8ef5e=this[_0x1d9bb0(0x242)],_0x16cfa8=this['_m'],_0xb65c67=this[_0x1d9bb0(0x127)](this[_0x1d9bb0(0x3ca)]['z'],this[_0x1d9bb0(0x3ca)]['x'],this['_coords']['y']);_0xb65c67[_0x1d9bb0(0x284)](this[_0x1d9bb0(0x105)]),_0x16cfa8['lookAt'](_0xb65c67,this[_0x1d9bb0(0x105)],new THREE[(_0x1d9bb0(0x397))](0x0,0x1,0x0)),_0x16cfa8['setPosition'](_0xb65c67),_0x16cfa8[_0x1d9bb0(0xf0)](_0xd8ef5e[_0x1d9bb0(0x22c)],_0xd8ef5e[_0x1d9bb0(0x3b3)],_0xd8ef5e[_0x1d9bb0(0x356)]);}},OrbitController[_0x7112e(0x218)][_0x7112e(0x127)]=function(_0x2d61b8,_0x1e248a,_0x120936){var _0x2a2e6d=_0x7112e,_0x53b398=new THREE[(_0x2a2e6d(0x397))]();return _0x53b398['x']=_0x2d61b8*Math[_0x2a2e6d(0x2a3)](_0x120936)*Math[_0x2a2e6d(0x25b)](_0x1e248a),_0x53b398['y']=_0x2d61b8*Math[_0x2a2e6d(0x25b)](_0x120936),_0x53b398['z']=_0x2d61b8*Math[_0x2a2e6d(0x2a3)](_0x120936)*Math[_0x2a2e6d(0x2a3)](_0x1e248a),_0x53b398;},OrbitController[_0x7112e(0x218)][_0x7112e(0x1ac)]=function(_0x286f23){var _0x1aee3a=_0x7112e;this[_0x1aee3a(0x308)]['x']=_0x286f23;},OrbitController[_0x7112e(0x218)][_0x7112e(0xf1)]=function(_0xd45617){var _0x2f02d3=_0x7112e;this[_0x2f02d3(0x308)]['y']=_0xd45617;},OrbitController[_0x7112e(0x218)]['setZoomImpulse']=function(_0x1de977){this['_localAcceleration']['z']=_0x1de977;},OrbitController['prototype'][_0x7112e(0x325)]=function(_0x28ae41,_0x183b83){var _0x442dd9=_0x7112e;if(void 0x0!==this['_oldMouseX']){var _0x495157=_0x28ae41-this[_0x442dd9(0x349)],_0x3260e2=_0x183b83-this[_0x442dd9(0x148)];this['setAzimuthImpulse'](0.0015*_0x495157),this[_0x442dd9(0xf1)](0.0015*-_0x3260e2);}this[_0x442dd9(0x349)]=_0x28ae41,this[_0x442dd9(0x148)]=_0x183b83;},OrbitController[_0x7112e(0x218)][_0x7112e(0x322)]=function(){var _0x19bb7e=_0x7112e,_0x4478d0=this;this[_0x19bb7e(0xe4)]=function(_0x1ac3c8){var _0x4b518f=_0x19bb7e,_0x584994=_0x1ac3c8[_0x4b518f(0x2c6)]?-0x78*_0x1ac3c8['detail']:_0x1ac3c8['wheelDelta'];_0x4478d0['setZoomImpulse'](-_0x584994*_0x4478d0[_0x4b518f(0x124)]*0.0001);},this[_0x19bb7e(0x333)]=function(_0x2e7ffe){_0x4478d0['_oldMouseX']=void 0x0,_0x4478d0['_oldMouseY']=void 0x0,_0x4478d0['_isDown']=!0x0;},this[_0x19bb7e(0x15b)]=function(_0x5c8c3e){var _0x311595=_0x19bb7e;_0x4478d0[_0x311595(0x21d)]&&_0x4478d0[_0x311595(0x325)](_0x5c8c3e[_0x311595(0x151)],_0x5c8c3e[_0x311595(0x144)]);},this[_0x19bb7e(0x37f)]=function(_0xab5391){var _0x1a731a=_0x19bb7e;if(_0x4478d0[_0x1a731a(0x349)]=void 0x0,_0x4478d0[_0x1a731a(0x148)]=void 0x0,0x2===_0xab5391[_0x1a731a(0x30d)][_0x1a731a(0x2a4)]){var _0xa793b7=_0xab5391['touches'][0x0],_0x22f5c4=_0xab5391[_0x1a731a(0x30d)][0x1],_0x1b5568=_0xa793b7[_0x1a731a(0x151)]-_0x22f5c4[_0x1a731a(0x151)],_0xa09aeb=_0xa793b7['screenY']-_0x22f5c4[_0x1a731a(0x144)];_0x4478d0[_0x1a731a(0x122)]=Math['sqrt'](_0x1b5568*_0x1b5568+_0xa09aeb*_0xa09aeb),_0x4478d0[_0x1a731a(0x207)]=_0x4478d0['radius'];}_0x4478d0[_0x1a731a(0x21d)]=!0x0;},this['_onTouchMove']=function(_0x2da6b8){var _0x2d4f5d=_0x19bb7e;if(_0x2da6b8[_0x2d4f5d(0x1bf)](),_0x4478d0[_0x2d4f5d(0x21d)]){var _0x53c894=_0x2da6b8[_0x2d4f5d(0x30d)][_0x2d4f5d(0x2a4)];if(0x1===_0x53c894){var _0x2cca7b=_0x2da6b8['touches'][0x0];_0x4478d0[_0x2d4f5d(0x325)](_0x2cca7b[_0x2d4f5d(0x151)],_0x2cca7b[_0x2d4f5d(0x144)]);}else{if(0x2===_0x53c894){var _0x4113fe=_0x2da6b8[_0x2d4f5d(0x30d)][0x0],_0x31da34=_0x2da6b8[_0x2d4f5d(0x30d)][0x1],_0x34d300=_0x4113fe[_0x2d4f5d(0x151)]-_0x31da34['screenX'],_0x15223f=_0x4113fe[_0x2d4f5d(0x144)]-_0x31da34[_0x2d4f5d(0x144)],_0x5d2d90=Math[_0x2d4f5d(0x255)](_0x34d300*_0x34d300+_0x15223f*_0x15223f),_0x3c8a8e=_0x4478d0[_0x2d4f5d(0x122)]-_0x5d2d90;_0x4478d0[_0x2d4f5d(0x26a)]=_0x4478d0[_0x2d4f5d(0x207)]+0.2*_0x3c8a8e;}}}},this[_0x19bb7e(0x39c)]=function(_0x566279){_0x4478d0['_isDown']=!0x1;},this[_0x19bb7e(0x23b)]=function(_0x35a737){var _0x53379d=_0x19bb7e;switch(_0x35a737[_0x53379d(0x10b)]){case 0x45:case 0x51:_0x4478d0[_0x53379d(0x2aa)]['y']=0x0;break;case 0x25:case 0x41:case 0x27:case 0x44:_0x4478d0[_0x53379d(0x2aa)]['x']=0x0;break;case 0x26:case 0x57:case 0x28:case 0x53:_0x4478d0[_0x53379d(0x2aa)]['z']=0x0;}},this[_0x19bb7e(0x394)]=function(_0x17839b){var _0x1e6ef3=_0x19bb7e;switch(_0x17839b['keyCode']){case 0x51:_0x4478d0[_0x1e6ef3(0x2aa)]['y']=-_0x4478d0[_0x1e6ef3(0x1c0)];break;case 0x45:_0x4478d0['_moveAcceleration']['y']=_0x4478d0['moveAcceleration'];break;case 0x25:case 0x41:_0x4478d0[_0x1e6ef3(0x2aa)]['x']=-_0x4478d0[_0x1e6ef3(0x1c0)];break;case 0x26:case 0x57:_0x4478d0[_0x1e6ef3(0x2aa)]['z']=-_0x4478d0[_0x1e6ef3(0x1c0)];break;case 0x27:case 0x44:_0x4478d0['_moveAcceleration']['x']=_0x4478d0['moveAcceleration'];break;case 0x28:case 0x53:_0x4478d0[_0x1e6ef3(0x2aa)]['z']=_0x4478d0[_0x1e6ef3(0x1c0)];}};},DebugAlphaMaterial=function(_0x124a6e){var _0x261501=_0x7112e,_0x2dab49={'map':{'value':_0x124a6e}};THREE[_0x261501(0x389)][_0x261501(0x281)](this,{'uniforms':_0x2dab49,'vertexShader':ShaderLibrary[_0x261501(0x183)](_0x261501(0x1d0)),'fragmentShader':ShaderLibrary[_0x261501(0x183)]('debug_alpha_fragment')});},DebugAlphaMaterial[_0x7112e(0x218)]=Object['create'](THREE[_0x7112e(0x389)][_0x7112e(0x218)],{'map':{'get':function(){var _0x32f81f=_0x7112e;return this[_0x32f81f(0x2c8)][_0x32f81f(0x366)]['value'];},'set':function(_0x1a8f2e){var _0x424b18=_0x7112e;this['uniforms'][_0x424b18(0x366)][_0x424b18(0xeb)]=_0x1a8f2e;}}}),DebugVec3Material=function(_0x321960){var _0x2a5d9e=_0x7112e,_0xd3f86c={'map':{'value':_0x321960}};THREE['ShaderMaterial'][_0x2a5d9e(0x281)](this,{'uniforms':_0xd3f86c,'vertexShader':ShaderLibrary[_0x2a5d9e(0x183)](_0x2a5d9e(0x280)),'fragmentShader':ShaderLibrary[_0x2a5d9e(0x183)]('debug_vec3_fragment')});},DebugVec3Material[_0x7112e(0x218)]=Object[_0x7112e(0xe9)](THREE[_0x7112e(0x389)][_0x7112e(0x218)],{'map':{'get':function(){var _0x3cf700=_0x7112e;return this[_0x3cf700(0x2c8)][_0x3cf700(0x366)][_0x3cf700(0xeb)];},'set':function(_0x410f3c){var _0x4c1482=_0x7112e;this['uniforms'][_0x4c1482(0x366)]['value']=_0x410f3c;}}}),DielectricMaterial=function(_0x266aee){var _0x3d8f49=_0x7112e,_0x19bba6='';_0x266aee['displacementMap']&&(_0x19bba6+=_0x3d8f49(0x290)),_0x266aee[_0x3d8f49(0x366)]&&(_0x19bba6+='#define\x20ALBEDO_MAP\x0a'),(_0x266aee['skyboxPosition']||_0x266aee[_0x3d8f49(0x310)])&&(_0x19bba6+=_0x3d8f49(0x2a9)),_0x266aee['specularProbe']&&(_0x19bba6+='#define\x20SPECULAR_PROBE\x0a'),_0x266aee[_0x3d8f49(0x1af)]&&(_0x19bba6+=_0x3d8f49(0x2e7)),_0x266aee[_0x3d8f49(0x2a5)]&&(_0x19bba6+='#define\x20IRRADIANCE_PROBE\x0a'),_0x266aee[_0x3d8f49(0x219)]&&(_0x19bba6+=_0x3d8f49(0x131)),_0x266aee['roughnessMap']&&(_0x19bba6+=_0x3d8f49(0x1e1)),_0x266aee['emissionMap']&&(_0x19bba6+=_0x3d8f49(0x320)),_0x266aee['invertNormal']&&(_0x19bba6+=_0x3d8f49(0x1e0)),_0x266aee[_0x3d8f49(0x123)]&&(_0x19bba6+=_0x3d8f49(0x3a8)),_0x266aee[_0x3d8f49(0x3a0)]&&(_0x19bba6+=_0x3d8f49(0x328)),_0x266aee[_0x3d8f49(0x104)]||(_0x19bba6+='#define\x20PERFORMANCE_PROFILE_HIGH\x0a'),_0x266aee[_0x3d8f49(0x398)]&&(_0x19bba6+=_0x3d8f49(0x250)),_0x266aee[_0x3d8f49(0x157)]&&(_0x19bba6+=_0x3d8f49(0x25c)),void 0x0!==_0x266aee['color']?(_0x266aee['color']=new THREE[(_0x3d8f49(0x26f))](_0x266aee[_0x3d8f49(0x378)]),_0x266aee['color'][_0x3d8f49(0x14c)]()):_0x266aee[_0x3d8f49(0x378)]=new THREE[(_0x3d8f49(0x26f))](0xffffff),_0x266aee[_0x3d8f49(0x3b9)]?(_0x266aee[_0x3d8f49(0x3b9)]=new THREE[(_0x3d8f49(0x26f))](_0x266aee[_0x3d8f49(0x3b9)]),_0x266aee['emissionColor'][_0x3d8f49(0x14c)]()):_0x266aee[_0x3d8f49(0x3b9)]=new THREE[(_0x3d8f49(0x26f))](0x0,0x0,0x0),_0x266aee[_0x3d8f49(0x375)]?(_0x266aee[_0x3d8f49(0x375)]=new THREE[(_0x3d8f49(0x26f))](_0x266aee['specularProbeColor']),_0x266aee[_0x3d8f49(0x375)][_0x3d8f49(0x14c)]()):_0x266aee[_0x3d8f49(0x375)]=new THREE['Color'](0x1,0x1,0x1),this[_0x3d8f49(0x319)]=_0x266aee[_0x3d8f49(0x12f)]?Math[_0x3d8f49(0x1c8)](0x2,_0x266aee[_0x3d8f49(0x12f)]):0x1,_0x266aee[_0x3d8f49(0x375)][_0x3d8f49(0xf9)](this[_0x3d8f49(0x319)]),_0x266aee[_0x3d8f49(0x354)]=void 0x0===_0x266aee[_0x3d8f49(0x354)]?0.05:_0x266aee['roughness'],0x1===_0x266aee[_0x3d8f49(0x354)]&&(_0x19bba6+='#define\x20IGNORESPECULAR\x0a'),(_0x266aee[_0x3d8f49(0x2bb)]||_0x266aee[_0x3d8f49(0x3c1)])&&(_0x19bba6+='#define\x20FOG\x0a'),_0x266aee['fogColor']=new THREE[(_0x3d8f49(0x26f))](_0x266aee[_0x3d8f49(0x3c1)]||0xffffff),_0x266aee[_0x3d8f49(0x3c1)][_0x3d8f49(0x3d8)](_0x266aee[_0x3d8f49(0x3c1)]);var _0x28b795={'alpha':{'value':0x1},'fogProbe':{'value':_0x266aee[_0x3d8f49(0x1af)]},'fogProbeBoost':{'value':_0x266aee[_0x3d8f49(0xf6)]?Math[_0x3d8f49(0x1c8)](0x2,_0x266aee[_0x3d8f49(0xf6)]):0x1},'fogDensity':{'value':_0x266aee[_0x3d8f49(0x2bb)]||0.1},'fogColor':{'value':_0x266aee[_0x3d8f49(0x3c1)]},'displacementMap':{'value':_0x266aee[_0x3d8f49(0x153)]},'displacementMapRange':{'value':_0x266aee['displacementMapRange']},'albedoMap':{'value':_0x266aee[_0x3d8f49(0x366)]},'color':{'value':_0x266aee[_0x3d8f49(0x378)]},'celSpecularCutOff':{'value':_0x266aee[_0x3d8f49(0x1ec)]||0x1},'roughness':{'value':_0x266aee[_0x3d8f49(0x354)]},'normalSpecularReflection':{'value':0.027},'normalMap':{'value':_0x266aee[_0x3d8f49(0x219)]},'emissionMap':{'value':_0x266aee['emissionMap']},'emissionColor':{'value':_0x266aee['emissionColor']},'roughnessMap':{'value':_0x266aee[_0x3d8f49(0x1fa)]},'roughnessMapRange':{'value':_0x266aee[_0x3d8f49(0x352)]||0.3},'aoMap':{'value':_0x266aee[_0x3d8f49(0x123)]},'skyboxPosition':{'value':_0x266aee[_0x3d8f49(0x39f)]?_0x266aee['skyboxPosition']:new THREE[(_0x3d8f49(0x397))]()},'skyboxSize':{'value':_0x266aee['skyboxSize']?_0x266aee[_0x3d8f49(0x310)]:0xa},'specularProbe':{'value':_0x266aee[_0x3d8f49(0x377)]},'specularProbeColor':{'value':_0x266aee['specularProbeColor']},'irradianceProbe':{'value':_0x266aee[_0x3d8f49(0x2a5)]},'irradianceProbeBoost':{'value':_0x266aee[_0x3d8f49(0x1d5)]?Math[_0x3d8f49(0x1c8)](0x2,_0x266aee[_0x3d8f49(0x1d5)]):0x1}},_0x32a180=_0x266aee[_0x3d8f49(0x256)]?_0x28b795:THREE[_0x3d8f49(0x129)]['merge']([_0x28b795,THREE['UniformsLib'][_0x3d8f49(0x128)]]);THREE[_0x3d8f49(0x389)]['call'](this,{'uniforms':_0x32a180,'lights':!_0x266aee[_0x3d8f49(0x256)],'vertexShader':_0x19bba6+ShaderLibrary[_0x3d8f49(0x183)](_0x3d8f49(0x347)),'fragmentShader':_0x19bba6+ShaderLibrary['get'](_0x3d8f49(0x2d0))}),_0x266aee[_0x3d8f49(0x366)]&&(this[_0x3d8f49(0x2c8)][_0x3d8f49(0x130)][_0x3d8f49(0xeb)]=_0x266aee[_0x3d8f49(0x366)]),_0x266aee[_0x3d8f49(0x219)]&&(this[_0x3d8f49(0x384)]['derivatives']=!0x0,this[_0x3d8f49(0x2c8)][_0x3d8f49(0x219)][_0x3d8f49(0xeb)]=_0x266aee[_0x3d8f49(0x219)]),_0x266aee[_0x3d8f49(0x398)]&&(this[_0x3d8f49(0x384)][_0x3d8f49(0x135)]=!0x0),_0x266aee[_0x3d8f49(0x377)]&&(this[_0x3d8f49(0x2c8)]['specularProbe'][_0x3d8f49(0xeb)]=_0x266aee[_0x3d8f49(0x377)]),_0x266aee['fogProbe']&&(this[_0x3d8f49(0x2c8)]['fogProbe'][_0x3d8f49(0xeb)]=_0x266aee[_0x3d8f49(0x1af)]),_0x266aee[_0x3d8f49(0x2a5)]&&(this[_0x3d8f49(0x2c8)][_0x3d8f49(0x2a5)][_0x3d8f49(0xeb)]=_0x266aee['irradianceProbe']),_0x266aee[_0x3d8f49(0x123)]&&(this['uniforms'][_0x3d8f49(0x123)][_0x3d8f49(0xeb)]=_0x266aee[_0x3d8f49(0x123)]),_0x266aee[_0x3d8f49(0x153)]&&(this[_0x3d8f49(0x2c8)][_0x3d8f49(0x153)][_0x3d8f49(0xeb)]=_0x266aee[_0x3d8f49(0x153)]),_0x266aee['roughnessMap']&&(this[_0x3d8f49(0x2c8)][_0x3d8f49(0x1fa)][_0x3d8f49(0xeb)]=_0x266aee[_0x3d8f49(0x1fa)]),_0x266aee[_0x3d8f49(0x175)]&&(this[_0x3d8f49(0x2c8)][_0x3d8f49(0x175)][_0x3d8f49(0xeb)]=_0x266aee[_0x3d8f49(0x175)]),_0x266aee['blending']&&(this[_0x3d8f49(0x1e2)]=!0x0,this[_0x3d8f49(0x2f5)]=_0x266aee[_0x3d8f49(0x2f5)]);},DielectricMaterial[_0x7112e(0x218)]=Object[_0x7112e(0xe9)](THREE['ShaderMaterial'][_0x7112e(0x218)]),GlassMaterial=function(_0xe3bc21){var _0x5d92f1=_0x7112e,_0x2a8afa='';_0xe3bc21[_0x5d92f1(0x377)]&&(_0x2a8afa+=_0x5d92f1(0x1b5)),_0xe3bc21[_0x5d92f1(0x354)]=void 0x0===_0xe3bc21[_0x5d92f1(0x354)]?0.05:_0xe3bc21['roughness'];var _0x28ab45={'roughness':{'value':_0xe3bc21[_0x5d92f1(0x354)]},'normalSpecularReflection':{'value':0.027},'specularProbe':{'value':_0xe3bc21[_0x5d92f1(0x377)]}},_0x251ff4=THREE['UniformsUtils'][_0x5d92f1(0x2bc)]([_0x28ab45,THREE[_0x5d92f1(0x373)][_0x5d92f1(0x128)]]);THREE['ShaderMaterial'][_0x5d92f1(0x281)](this,{'uniforms':_0x251ff4,'lights':!0x0,'vertexShader':_0x2a8afa+ShaderLibrary['get'](_0x5d92f1(0x30c)),'fragmentShader':_0x2a8afa+ShaderLibrary['get'](_0x5d92f1(0x3a2))}),_0xe3bc21[_0x5d92f1(0x377)]&&(this[_0x5d92f1(0x2c8)][_0x5d92f1(0x377)][_0x5d92f1(0xeb)]=_0xe3bc21[_0x5d92f1(0x377)]),this[_0x5d92f1(0x1e2)]=!0x0,this[_0x5d92f1(0x2f5)]=THREE[_0x5d92f1(0x34e)];},GlassMaterial[_0x7112e(0x218)]=Object[_0x7112e(0xe9)](THREE[_0x7112e(0x389)][_0x7112e(0x218)]),LinearDepthMaterial=function(){var _0x2e4eeb=_0x7112e;THREE[_0x2e4eeb(0x389)][_0x2e4eeb(0x281)](this,{'uniforms':{'cameraNear':{'value':0x0},'rcpCameraRange':{'value':0x0}},'vertexShader':ShaderLibrary[_0x2e4eeb(0x183)](_0x2e4eeb(0x36e)),'fragmentShader':ShaderLibrary[_0x2e4eeb(0x183)](_0x2e4eeb(0x2ee))});},LinearDepthMaterial[_0x7112e(0x218)]=Object['create'](THREE[_0x7112e(0x389)][_0x7112e(0x218)],{'cameraNear':{'get':function(){var _0x553a05=_0x7112e;return this[_0x553a05(0x2c8)][_0x553a05(0x2ca)][_0x553a05(0xeb)];},'set':function(_0x4fbcc1){var _0x2c1758=_0x7112e;this['uniforms'][_0x2c1758(0x2ca)][_0x2c1758(0xeb)]=_0x4fbcc1;}},'rcpCameraRange':{'get':function(){var _0x1e01ba=_0x7112e;return this[_0x1e01ba(0x2c8)][_0x1e01ba(0x3c0)][_0x1e01ba(0xeb)];},'set':function(_0x1fc401){var _0x152fa6=_0x7112e;this[_0x152fa6(0x2c8)][_0x152fa6(0x3c0)][_0x152fa6(0xeb)]=_0x1fc401;}}}),SkyMaterial=function(_0x5ce807){var _0x2bf59a=_0x7112e;this['_color']=_0x5ce807[_0x2bf59a(0x378)]||new THREE[(_0x2bf59a(0x26f))](0xffffff),this[_0x2bf59a(0x21e)]=_0x5ce807[_0x2bf59a(0x296)];var _0x5a0ba2={'envMap':{'value':this[_0x2bf59a(0x21e)]},'color':{'value':this[_0x2bf59a(0x139)]},'invert':{'value':0x1}};THREE[_0x2bf59a(0x389)][_0x2bf59a(0x281)](this,{'uniforms':_0x5a0ba2,'vertexShader':ShaderLibrary[_0x2bf59a(0x183)](_0x2bf59a(0x23e)),'fragmentShader':ShaderLibrary['get'](_0x2bf59a(0x39a))});},SkyMaterial[_0x7112e(0x218)]=Object[_0x7112e(0xe9)](THREE[_0x7112e(0x389)][_0x7112e(0x218)],{'color':{'get':function(){var _0x3c5a02=_0x7112e;return this[_0x3c5a02(0x139)];},'set':function(_0x15a0bb){var _0x14ad5f=_0x7112e;this[_0x14ad5f(0x139)]=_0x15a0bb,this[_0x14ad5f(0x2c8)][_0x14ad5f(0x378)]['value']=_0x15a0bb;}},'envMap':{'get':function(){return this['_envMap'];},'set':function(_0x5523dc){var _0x66cd6e=_0x7112e;this[_0x66cd6e(0x21e)]=_0x5523dc,this[_0x66cd6e(0x2c8)]['envMap'][_0x66cd6e(0xeb)]=_0x5523dc;}}}),RenderVolumeMaterial=function(_0x5af608,_0xb3625b,_0x5348a1){var _0x1eaaf5=_0x7112e;this[_0x1eaaf5(0x3c9)]=new THREE[(_0x1eaaf5(0x26f))]();var _0x5b1072={'NUM_SAMPLES':_0x5348a1};_0xb3625b&&(_0x5b1072[_0x1eaaf5(0x110)]='');var _0x22a8e8={'lightAccum':{'value':null},'waterDepthMap':{'value':null},'sceneDepthMap':{'value':null},'pixelSize':{'value':new THREE[(_0x1eaaf5(0x193))]()},'numCells':{'value':_0x5af608[_0x1eaaf5(0x32f)]},'cellSize':{'value':_0x5af608['cellSize']},'modelViewMatrixInverse':{'value':new THREE[(_0x1eaaf5(0x2ec))]()},'viewMatrixInverse':{'value':new THREE[(_0x1eaaf5(0x2ec))]()},'unprojectionMatrix':{'value':new THREE[(_0x1eaaf5(0x2ec))]()},'roughness':{'value':0.001},'normalSpecularReflection':{'value':0.04},'cameraNear':{'value':0x0},'cameraRange':{'value':0x1},'transparencyFactor':{'value':0xa},'absorption':{'value':new THREE[(_0x1eaaf5(0x26f))](0.01,0.01,0.01)},'mie':{'value':new THREE[(_0x1eaaf5(0x26f))](-0.1,-0.12,0.05)},'skybox':{'value':_0xb3625b}},_0x1f9bb5=THREE[_0x1eaaf5(0x129)][_0x1eaaf5(0x2bc)]([_0x22a8e8,THREE[_0x1eaaf5(0x373)][_0x1eaaf5(0x128)]]);THREE[_0x1eaaf5(0x389)][_0x1eaaf5(0x281)](this,{'defines':_0x5b1072,'uniforms':_0x1f9bb5,'lights':!0x0,'vertexShader':ShaderLibrary['get'](_0x1eaaf5(0x150)),'fragmentShader':ShaderLibrary['get']('render_volume_fragment')}),this[_0x1eaaf5(0x2c8)][_0x1eaaf5(0x387)]['value']=_0xb3625b,this[_0x1eaaf5(0x384)][_0x1eaaf5(0x24d)]=!0x0,this['side']=THREE[_0x1eaaf5(0x12d)],this['transparent']=!0x0;},RenderVolumeMaterial[_0x7112e(0x218)]=Object[_0x7112e(0xe9)](THREE[_0x7112e(0x389)][_0x7112e(0x218)],{'absorption':{'get':function(){var _0x3eaacd=_0x7112e;return this[_0x3eaacd(0x2c8)]['absorption'][_0x3eaacd(0xeb)];},'set':function(_0x591eb5){var _0x3a4d8e=_0x7112e;this[_0x3a4d8e(0x2c8)][_0x3a4d8e(0x279)]['value']=_0x591eb5;}},'mie':{'get':function(){var _0x3dc161=_0x7112e;return this[_0x3dc161(0x3c9)];},'set':function(_0x1776e3){var _0x4ac6fd=_0x7112e;this[_0x4ac6fd(0x3c9)]=_0x1776e3;var _0xb63bbd=this[_0x4ac6fd(0x2c8)][_0x4ac6fd(0x12e)]['value'];_0xb63bbd['r']=this[_0x4ac6fd(0x1a1)](_0x1776e3['r']),_0xb63bbd['g']=this[_0x4ac6fd(0x1a1)](_0x1776e3['g']),_0xb63bbd['b']=this[_0x4ac6fd(0x1a1)](_0x1776e3['b']);}},'roughness':{'get':function(){var _0x439e3f=_0x7112e;return this[_0x439e3f(0x2c8)][_0x439e3f(0x354)][_0x439e3f(0xeb)];},'set':function(_0x2f2cfc){var _0x252e65=_0x7112e;this[_0x252e65(0x2c8)]['roughness'][_0x252e65(0xeb)]=_0x2f2cfc;}},'pixelSize':{'get':function(){var _0x283f4b=_0x7112e;return this[_0x283f4b(0x2c8)]['pixelSize'][_0x283f4b(0xeb)];},'set':function(_0x94b648){var _0x13e213=_0x7112e;this[_0x13e213(0x2c8)][_0x13e213(0x2ab)]['value']=_0x94b648;}},'transparencyFactor':{'get':function(){var _0x47ef17=_0x7112e;return this[_0x47ef17(0x2c8)][_0x47ef17(0x20b)][_0x47ef17(0xeb)];},'set':function(_0x540677){var _0x332e1f=_0x7112e;this['uniforms'][_0x332e1f(0x20b)][_0x332e1f(0xeb)]=_0x540677;}}}),RenderVolumeMaterial[_0x7112e(0x218)]['update']=function(_0x4b5eb4,_0x558d0e,_0x2dea52,_0x252460,_0x34826a){var _0xb4687d=_0x7112e;this['uniforms'][_0xb4687d(0x34d)]['value']=_0x2dea52,this[_0xb4687d(0x2c8)][_0xb4687d(0x39d)][_0xb4687d(0xeb)]=_0x252460,this[_0xb4687d(0x2c8)][_0xb4687d(0x35a)][_0xb4687d(0xeb)]=_0x34826a,this[_0xb4687d(0x2c8)][_0xb4687d(0x260)]['value']=_0x558d0e['matrixWorld'],this[_0xb4687d(0x2c8)]['unprojectionMatrix'][_0xb4687d(0xeb)]['getInverse'](_0x558d0e['projectionMatrix']),this[_0xb4687d(0x2c8)][_0xb4687d(0x2ca)][_0xb4687d(0xeb)]=_0x558d0e[_0xb4687d(0x161)],this[_0xb4687d(0x2c8)][_0xb4687d(0x17e)][_0xb4687d(0xeb)]=_0x558d0e[_0xb4687d(0x2b1)]-_0x558d0e[_0xb4687d(0x161)];var _0x56bce9=this[_0xb4687d(0x2c8)][_0xb4687d(0x214)][_0xb4687d(0xeb)];_0x56bce9[_0xb4687d(0x3c5)](_0x558d0e['matrixWorldInverse'],_0x4b5eb4[_0xb4687d(0x368)]),_0x56bce9[_0xb4687d(0x2e6)](_0x56bce9);},RenderVolumeMaterial[_0x7112e(0x218)][_0x7112e(0x1a1)]=function(_0x43f817){var _0x93cd21=0x1-_0x43f817,_0x2366d1=0x1+_0x43f817*_0x43f817+0x2*_0x43f817;return _0x93cd21*_0x93cd21/Math['pow'](_0x2366d1,1.5);},SkyMaterial=function(_0x512592){var _0x35882c=_0x7112e;this[_0x35882c(0x139)]=_0x512592[_0x35882c(0x378)]||new THREE[(_0x35882c(0x26f))](0xffffff),this[_0x35882c(0x21e)]=_0x512592['envMap'];var _0xedea9c={'envMap':{'value':this[_0x35882c(0x21e)]},'color':{'value':this['_color']},'invert':{'value':0x1}};THREE['ShaderMaterial'][_0x35882c(0x281)](this,{'uniforms':_0xedea9c,'vertexShader':ShaderLibrary[_0x35882c(0x183)](_0x35882c(0x23e)),'fragmentShader':ShaderLibrary[_0x35882c(0x183)]('sky_fragment')});},SkyMaterial['prototype']=Object['create'](THREE['ShaderMaterial'][_0x7112e(0x218)],{'color':{'get':function(){var _0x5de4e5=_0x7112e;return this[_0x5de4e5(0x139)];},'set':function(_0x123c4e){var _0x4d98fa=_0x7112e;this[_0x4d98fa(0x139)]=_0x123c4e,this[_0x4d98fa(0x2c8)][_0x4d98fa(0x378)]['value']=_0x123c4e;}},'envMap':{'get':function(){var _0x4048ef=_0x7112e;return this[_0x4048ef(0x21e)];},'set':function(_0x573248){var _0x49a109=_0x7112e;this[_0x49a109(0x21e)]=_0x573248,this[_0x49a109(0x2c8)]['envMap'][_0x49a109(0xeb)]=_0x573248;}}}),SPHParticlePointMaterial=function(_0x1e63c0){var _0x446095=_0x7112e,_0x4b51f1={};_0x1e63c0&&(_0x4b51f1[_0x446095(0x178)]=''),THREE[_0x446095(0x389)][_0x446095(0x281)](this,{'defines':_0x4b51f1,'uniforms':{'colorBuffer':{'value':_0x1e63c0},'positionBuffer':{'value':null},'particleSize':{'value':0xa}},'vertexShader':ShaderLibrary['get'](_0x446095(0x1cc)),'fragmentShader':ShaderLibrary[_0x446095(0x183)](_0x446095(0x1b0))});},SPHParticlePointMaterial[_0x7112e(0x218)]=Object['create'](THREE[_0x7112e(0x389)][_0x7112e(0x218)],{'colorBuffer':{'get':function(){var _0x3bbf79=_0x7112e;return this[_0x3bbf79(0x2c8)][_0x3bbf79(0x246)][_0x3bbf79(0xeb)];},'set':function(_0x1398e0){var _0x43604f=_0x7112e;this[_0x43604f(0x2c8)]['colorBuffer'][_0x43604f(0xeb)]=_0x1398e0;}},'positionBuffer':{'get':function(){var _0xed25b6=_0x7112e;return this[_0xed25b6(0x2c8)][_0xed25b6(0x2a8)][_0xed25b6(0xeb)];},'set':function(_0x33b3e4){var _0x21dd25=_0x7112e;this[_0x21dd25(0x2c8)]['positionBuffer'][_0x21dd25(0xeb)]=_0x33b3e4;}},'particleSize':{'get':function(){var _0x209651=_0x7112e;return this[_0x209651(0x2c8)][_0x209651(0x1f0)][_0x209651(0xeb)];},'set':function(_0x51570c){var _0x39b9e5=_0x7112e;this[_0x39b9e5(0x2c8)][_0x39b9e5(0x1f0)][_0x39b9e5(0xeb)]=_0x51570c;}}}),UnlitMaterial=function(_0x21449c){var _0x454021=_0x7112e;_0x21449c=_0x21449c||{};var _0xc7dcc2='';_0x21449c[_0x454021(0x378)]&&(_0x21449c[_0x454021(0x378)]=new THREE[(_0x454021(0x26f))](_0x21449c[_0x454021(0x378)]),_0x21449c['color'][_0x454021(0x14c)]()),(_0x21449c[_0x454021(0x2bb)]||_0x21449c['fogColor'])&&(_0xc7dcc2+=_0x454021(0x2ce)),_0x21449c[_0x454021(0x149)]&&!_0x21449c['blending']&&(_0xc7dcc2+='#define\x20HDRE\x0a'),_0x21449c['map']&&(_0xc7dcc2+=_0x454021(0x146));var _0x2ee36d={'color':{'value':_0x21449c[_0x454021(0x378)]||new THREE[(_0x454021(0x26f))](0x1,0x1,0x1)},'albedoMap':{'value':_0x21449c[_0x454021(0x366)]},'opacity':{'value':void 0x0===_0x21449c['opacity']?0x1:_0x21449c['opacity']},'fogDensity':{'value':_0x21449c[_0x454021(0x2bb)]||0.1},'fogColor':{'value':_0x21449c['fogColor']}};THREE[_0x454021(0x389)][_0x454021(0x281)](this,{'uniforms':_0x2ee36d,'vertexShader':_0xc7dcc2+ShaderLibrary[_0x454021(0x183)]('unlit_vertex'),'fragmentShader':_0xc7dcc2+ShaderLibrary['get'](_0x454021(0x2bf))}),_0x21449c[_0x454021(0x2f5)]&&(this['blending']=_0x21449c['blending'],this[_0x454021(0x1e2)]=!0x0,_0x21449c[_0x454021(0x2f5)]===THREE[_0x454021(0x34e)]&&_0x21449c[_0x454021(0x149)]&&(this[_0x454021(0x2f5)]=THREE['CustomBlending'],this[_0x454021(0x1d7)]=THREE[_0x454021(0x213)],this[_0x454021(0x369)]=THREE[_0x454021(0x213)],this[_0x454021(0x362)]=THREE[_0x454021(0x2f6)],this[_0x454021(0x18d)]=THREE['ZeroFactor']),_0x21449c['blending']===THREE['NormalBlending']&&_0x21449c[_0x454021(0x149)]&&(this[_0x454021(0x2f5)]=THREE[_0x454021(0x2ac)],this[_0x454021(0x107)]=THREE['AddEquation'],this[_0x454021(0x1d7)]=THREE[_0x454021(0x1bd)],this['blendDst']=THREE[_0x454021(0x239)],this[_0x454021(0x362)]=THREE[_0x454021(0x2f6)],this[_0x454021(0x18d)]=THREE[_0x454021(0x239)],this['blendEquationAlpha']=THREE[_0x454021(0x1b2)]));},UnlitMaterial[_0x7112e(0x218)]=Object[_0x7112e(0xe9)](THREE[_0x7112e(0x389)][_0x7112e(0x218)]),Gaussian={'estimateGaussianRadius':function(_0x259c50,_0x20e47f){var _0x5662b5=_0x7112e;return Math[_0x5662b5(0x255)](-0x2*_0x259c50*Math[_0x5662b5(0x2a7)](_0x20e47f));}},CenteredGaussianCurve=function(_0x43ac93){var _0x1c88c8=_0x7112e;this[_0x1c88c8(0x21a)]=0x1/Math['sqrt'](0x2*_0x43ac93*Math['PI']),this[_0x1c88c8(0x25d)]=-0x1/(0x2*_0x43ac93);},CenteredGaussianCurve[_0x7112e(0x218)]={'getValueAt':function(_0x59f509){var _0x5aa3c0=_0x7112e;return this[_0x5aa3c0(0x21a)]*Math[_0x5aa3c0(0x1c8)](Math['E'],_0x59f509*_0x59f509*this['_expScale']);}},CenteredGaussianCurve[_0x7112e(0x3a6)]=function(_0x11f1b1,_0x3cbade){var _0x2e897c=_0x7112e;_0x3cbade=_0x3cbade||0.01;var _0x8af8f5=_0x11f1b1/Math[_0x2e897c(0x255)](-0x2*Math[_0x2e897c(0x2a7)](_0x3cbade));return new CenteredGaussianCurve(_0x8af8f5*_0x8af8f5);},PoissonDisk=function(_0x49877e,_0x360b14,_0x91a925,_0xce996){var _0x27759c=_0x7112e;this[_0x27759c(0x2f8)]=void 0x0===_0x49877e?PoissonDisk[_0x27759c(0x2d8)]:_0x49877e,this[_0x27759c(0x2fd)]=_0x360b14||0x1,this[_0x27759c(0x287)]=_0x91a925||0.99,this[_0x27759c(0x154)]=_0xce996||0x4e20,this[_0x27759c(0x3d5)]=0x0,this[_0x27759c(0x20c)]=null,this['reset']();},PoissonDisk[_0x7112e(0x216)]=0x0,PoissonDisk['CIRCULAR']=0x1,PoissonDisk[_0x7112e(0x218)]={'getPoints':function(){var _0x17c451=_0x7112e;return this[_0x17c451(0x20c)];},'reset':function(){var _0x100496=_0x7112e;this[_0x100496(0x3d5)]=this[_0x100496(0x2fd)],this[_0x100496(0x20c)]=[];},'generatePoints':function(_0x529b55){for(var _0x2fc17a=0x0;_0x2fc17a<_0x529b55;++_0x2fc17a)this['generatePoint']();},'generatePoint':function(){var _0x10d378=_0x7112e;for(;;){for(var _0x58b489=0x0,_0x4a1951=this['_currentDistance']*this[_0x10d378(0x3d5)];_0x58b489++<this[_0x10d378(0x154)];){var _0x3d715a=this[_0x10d378(0x1b3)]();if(this[_0x10d378(0x317)](_0x3d715a,_0x4a1951))return void this[_0x10d378(0x20c)][_0x10d378(0x2c9)](_0x3d715a);}this[_0x10d378(0x3d5)]*=this[_0x10d378(0x287)];}},'_getCandidate':function(){var _0x25b4c4=_0x7112e;for(;;){var _0x1a1146=0x2*Math[_0x25b4c4(0x3b4)]()-0x1,_0x18c321=0x2*Math[_0x25b4c4(0x3b4)]()-0x1;if(this[_0x25b4c4(0x2f8)]==PoissonDisk[_0x25b4c4(0x216)]||_0x1a1146*_0x1a1146+_0x18c321*_0x18c321<=0x1)return new THREE[(_0x25b4c4(0x193))](_0x1a1146,_0x18c321);}},'_isValid':function(_0x11c123,_0x4b8b4d){var _0xe87633=_0x7112e;for(var _0x2ce707=this[_0xe87633(0x20c)]['length'],_0x160a4b=0x0;_0x160a4b<_0x2ce707;++_0x160a4b){var _0x625a3=this[_0xe87633(0x20c)][_0x160a4b],_0x1ed428=_0x11c123['x']-_0x625a3['x'],_0x3920d7=_0x11c123['y']-_0x625a3['y'];if(_0x1ed428*_0x1ed428+_0x3920d7*_0x3920d7<_0x4b8b4d)return!0x1;}return!0x0;}},PoissonSphere=function(_0x2f4f3d,_0xb507bc,_0x3d1c3d,_0x5ec24f){var _0x327590=_0x7112e;this[_0x327590(0x2f8)]=void 0x0===_0x2f4f3d?PoissonSphere['SPHERICAL']:_0x2f4f3d,this[_0x327590(0x2fd)]=_0xb507bc||0x1,this[_0x327590(0x287)]=_0x3d1c3d||0.99,this['_maxTests']=_0x5ec24f||0x4e20,this[_0x327590(0x3d5)]=0x0,this['_points']=null,this[_0x327590(0x27f)]();},PoissonSphere[_0x7112e(0x1c4)]=0x0,PoissonSphere['SPHERICAL']=0x1,PoissonSphere[_0x7112e(0x218)]={'getPoints':function(){var _0x194e42=_0x7112e;return this[_0x194e42(0x20c)];},'reset':function(){var _0x35c3a1=_0x7112e;this[_0x35c3a1(0x3d5)]=this[_0x35c3a1(0x2fd)],this[_0x35c3a1(0x20c)]=[];},'generatePoints':function(_0x50fc50){for(var _0x52df63=0x0;_0x52df63<_0x50fc50;++_0x52df63)this['generatePoint']();},'generatePoint':function(){var _0x329fda=_0x7112e;for(;;){for(var _0x410abd=0x0,_0x39a2f8=this[_0x329fda(0x3d5)]*this[_0x329fda(0x3d5)];_0x410abd++<this[_0x329fda(0x154)];){var _0x2bc66c=this[_0x329fda(0x1b3)]();if(this['_isValid'](_0x2bc66c,_0x39a2f8))return this[_0x329fda(0x20c)]['push'](_0x2bc66c),_0x2bc66c;}this[_0x329fda(0x3d5)]*=this[_0x329fda(0x287)];}},'_getCandidate':function(){var _0x508174=_0x7112e;for(;;){var _0x567bb0=0x2*Math['random']()-0x1,_0x393123=0x2*Math[_0x508174(0x3b4)]()-0x1,_0x378b10=0x2*Math[_0x508174(0x3b4)]()-0x1;if(this[_0x508174(0x2f8)]===PoissonSphere[_0x508174(0x1c4)]||_0x567bb0*_0x567bb0+_0x393123*_0x393123+_0x378b10*_0x378b10<=0x1)return new THREE[(_0x508174(0x335))](_0x567bb0,_0x393123,_0x378b10,0x0);}},'_isValid':function(_0x37337e,_0x2acadf){var _0x24b1ed=_0x7112e;for(var _0x1251ec=this[_0x24b1ed(0x20c)][_0x24b1ed(0x2a4)],_0xa12df9=0x0;_0xa12df9<_0x1251ec;++_0xa12df9){var _0x10f3bb=this['_points'][_0xa12df9],_0x13c0f6=_0x37337e['x']-_0x10f3bb['x'],_0x462b0f=_0x37337e['y']-_0x10f3bb['y'],_0x30e5e8=_0x37337e['z']-_0x10f3bb['z'];if(_0x13c0f6*_0x13c0f6+_0x462b0f*_0x462b0f+_0x30e5e8*_0x30e5e8<_0x2acadf)return!0x1;}return!0x0;}},BilateralGaussianBlurShader={'defines':{'KERNEL_RADIUS':'5','NUM_WEIGHTS':'6'},'uniforms':{'tDiffuse':{'value':null},'sampleStep':{'value':new THREE[(_0x7112e(0x193))]()},'depthRange':{'value':0.002},'weights':{'value':[]}},'vertexShader':ShaderLibrary['get'](_0x7112e(0x14a)),'fragmentShader':ShaderLibrary[_0x7112e(0x183)](_0x7112e(0x36a))},GaussianBlurHDREShader={'defines':{'KERNEL_RADIUS':'5','NUM_WEIGHTS':'6'},'uniforms':{'tDiffuse':{'value':null},'sampleStep':{'value':new THREE['Vector2']()},'weights':{'value':[]}},'vertexShader':ShaderLibrary['get'](_0x7112e(0x14a)),'fragmentShader':ShaderLibrary[_0x7112e(0x183)](_0x7112e(0x2d5))},GaussianBlurShader={'defines':{'KERNEL_RADIUS':'5','NUM_WEIGHTS':'6'},'uniforms':{'tDiffuse':{'value':null},'sampleStep':{'value':new THREE[(_0x7112e(0x193))]()},'weights':{'value':[]}},'vertexShader':ShaderLibrary[_0x7112e(0x183)]('post_vertex'),'fragmentShader':ShaderLibrary[_0x7112e(0x183)](_0x7112e(0x20e))},SceneDepthRenderer[_0x7112e(0x218)]={get 'texture'(){var _0x408706=_0x7112e;return this[_0x408706(0x211)][_0x408706(0x126)];},'resize':function(_0x8e94c,_0x4d3663){var _0x1c9ba7=_0x7112e;_0x8e94c=Math[_0x1c9ba7(0x2c4)](_0x8e94c*this[_0x1c9ba7(0x299)]),_0x4d3663=Math[_0x1c9ba7(0x2c4)](_0x4d3663*this[_0x1c9ba7(0x299)]),this['_renderTarget']&&this[_0x1c9ba7(0x211)]['width']===_0x8e94c&&this[_0x1c9ba7(0x211)][_0x1c9ba7(0x390)]===_0x4d3663||(this[_0x1c9ba7(0x211)]=new THREE[(_0x1c9ba7(0x2e8))](_0x8e94c,_0x4d3663,{'type':this[_0x1c9ba7(0x1ea)],'minFilter':THREE[_0x1c9ba7(0x31c)],'magFilter':THREE[_0x1c9ba7(0x31c)],'generateMipmaps':!0x1,'depthBuffer':!0x0,'stencilBuffer':!0x1}));},'render':function(_0x3f60ad){var _0x5b9a66=_0x7112e;this[_0x5b9a66(0x220)][_0x5b9a66(0x2ca)]=_0x3f60ad[_0x5b9a66(0x161)],this[_0x5b9a66(0x220)][_0x5b9a66(0x3c0)]=0x1/(_0x3f60ad[_0x5b9a66(0x2b1)]-_0x3f60ad[_0x5b9a66(0x161)]),this[_0x5b9a66(0x137)][_0x5b9a66(0x1e9)](0xffffff,0x1),this[_0x5b9a66(0x16b)][_0x5b9a66(0x171)]=this['_depthMaterial'],this['_renderer'][_0x5b9a66(0x1fe)](this[_0x5b9a66(0x16b)],_0x3f60ad,this[_0x5b9a66(0x211)],!0x0),this[_0x5b9a66(0x16b)][_0x5b9a66(0x171)]=null,this[_0x5b9a66(0x137)][_0x5b9a66(0x1e9)](0x0,0x1);}},TinyBlurHDREShader={'uniforms':{'tDiffuse':{'value':null},'sampleStep':{'value':new THREE['Vector2']()},'weights':{'value':[]}},'vertexShader':ShaderLibrary['get'](_0x7112e(0x14a)),'fragmentShader':ShaderLibrary[_0x7112e(0x183)](_0x7112e(0x212))},SimpleThreeProject[_0x7112e(0x218)]={'init':function(_0x1dd67d,_0x49b5fc,_0x266810){var _0x5830b2=_0x7112e;this['_options']=_0x266810||{},this[_0x5830b2(0x11f)][_0x5830b2(0x18f)]=this[_0x5830b2(0x11f)][_0x5830b2(0x18f)]||!0x1,this['_options'][_0x5830b2(0x155)]=this['_options']['antialias']||!0x1,this[_0x5830b2(0x11f)]['preserveDrawingBuffer']=this[_0x5830b2(0x11f)]['preserveDrawingBuffer']||!0x1,this[_0x5830b2(0x158)]=_0x49b5fc,this[_0x5830b2(0x240)](),this[_0x5830b2(0x1dc)]=_0x1dd67d,_0x1dd67d&&this['_initStats']();var _0x14c786=this;window[_0x5830b2(0x37c)](_0x5830b2(0x26b),function(){var _0x4a2ba7=_0x5830b2;_0x14c786[_0x4a2ba7(0x381)]();},!0x1),this[_0x5830b2(0x302)]&&this[_0x5830b2(0x302)][_0x5830b2(0x192)](this),this['_initialized']=!0x0,this[_0x5830b2(0x381)]();},get 'debugMode'(){var _0x362630=_0x7112e;return this[_0x362630(0x1dc)];},get 'content'(){var _0x318653=_0x7112e;return this[_0x318653(0x302)];},set 'content'(_0x47f9ed){var _0x252340=_0x7112e;this[_0x252340(0x323)]=null,this['_content']&&this[_0x252340(0x302)]['destroy'](),this[_0x252340(0x302)]=_0x47f9ed,this[_0x252340(0x1c3)]&&this[_0x252340(0x302)][_0x252340(0x192)](this),this[_0x252340(0x2f4)]&&this[_0x252340(0x302)]['start'](),this[_0x252340(0x381)]();},'_initRenderer':function(){var _0x46e854=_0x7112e,_0x58b7a5=window[_0x46e854(0x2fb)];this[_0x46e854(0x28b)]=new THREE['WebGLRenderer']({'antialias':this[_0x46e854(0x11f)][_0x46e854(0x155)],'stencil':this[_0x46e854(0x11f)][_0x46e854(0x1ce)],'alpha':this[_0x46e854(0x11f)][_0x46e854(0x18f)],'preserveDrawingBuffer':this['_options'][_0x46e854(0x18e)]}),this[_0x46e854(0x28b)][_0x46e854(0x24e)](_0x58b7a5),this[_0x46e854(0x14b)]=document[_0x46e854(0x106)](_0x46e854(0x170)),this[_0x46e854(0x30a)]=new THREE[(_0x46e854(0x396))](),this[_0x46e854(0x3b0)]=new THREE['PerspectiveCamera'](),this[_0x46e854(0x3b0)][_0x46e854(0x161)]=0.1,this['camera'][_0x46e854(0x2b1)]=0x64,this['scene'][_0x46e854(0x284)](this[_0x46e854(0x3b0)]),this[_0x46e854(0x14b)][_0x46e854(0x205)](this[_0x46e854(0x28b)][_0x46e854(0x1a9)]);},'_initStats':function(){var _0x47478f=_0x7112e;this[_0x47478f(0x2d1)]=new Stats(),this[_0x47478f(0x2d1)][_0x47478f(0x1a9)][_0x47478f(0x254)][_0x47478f(0x22c)]='absolute',this[_0x47478f(0x2d1)][_0x47478f(0x1a9)]['style'][_0x47478f(0xe0)]='0px',this[_0x47478f(0x2d1)][_0x47478f(0x1a9)][_0x47478f(0x254)]['right']=_0x47478f(0x245),this[_0x47478f(0x2d1)][_0x47478f(0x1a9)]['style'][_0x47478f(0x31e)]=0x64,this[_0x47478f(0x14b)][_0x47478f(0x205)](this[_0x47478f(0x2d1)][_0x47478f(0x1a9)]),this[_0x47478f(0x3ae)]=new THREEx[(_0x47478f(0x1f7))](),this[_0x47478f(0x3ae)][_0x47478f(0x1a9)][_0x47478f(0x254)][_0x47478f(0x22c)]=_0x47478f(0x29d),this[_0x47478f(0x3ae)][_0x47478f(0x1a9)][_0x47478f(0x254)][_0x47478f(0xe0)]='0px',this[_0x47478f(0x3ae)][_0x47478f(0x1a9)][_0x47478f(0x254)]['zIndex']=0x64,this[_0x47478f(0x14b)][_0x47478f(0x205)](this['_renderStats'][_0x47478f(0x1a9)]);},'_resizeCanvas':function(){var _0x33fa80=_0x7112e;if(this[_0x33fa80(0x28b)]){var _0x597aa5=window[_0x33fa80(0x253)],_0x2cc1e0=window[_0x33fa80(0x253)];this[_0x33fa80(0x28b)][_0x33fa80(0x321)](_0x597aa5,_0x2cc1e0),this['renderer'][_0x33fa80(0x1a9)][_0x33fa80(0x254)][_0x33fa80(0x121)]=_0x597aa5+'px',this[_0x33fa80(0x28b)][_0x33fa80(0x1a9)]['style'][_0x33fa80(0x390)]=_0x2cc1e0+'px',this['camera'][_0x33fa80(0x2ed)]=_0x597aa5/_0x2cc1e0,this[_0x33fa80(0x3b0)][_0x33fa80(0x278)](),this['_content']&&this['_content']['resize'](this[_0x33fa80(0x28b)][_0x33fa80(0x1a9)]['width'],this['renderer'][_0x33fa80(0x1a9)][_0x33fa80(0x390)]);}},'stop':function(){var _0x44184f=_0x7112e;this[_0x44184f(0x2f4)]=!0x1;},'start':function(){var _0x799237=_0x7112e;this[_0x799237(0x2f4)]=!0x0,this[_0x799237(0x302)]&&this['_content'][_0x799237(0x195)](),this['_requestAnimationFrame']();},'_render':function(){var _0x90c4a=_0x7112e;if(this['_isRunning']){var _0x19fcd4=new Date()[_0x90c4a(0x2a0)](),_0x435b23=0x0;null!==this[_0x90c4a(0x323)]&&(_0x435b23=_0x19fcd4-this[_0x90c4a(0x323)]),_0x435b23*=this[_0x90c4a(0x1e4)],this[_0x90c4a(0x323)]=_0x19fcd4,this[_0x90c4a(0x1d1)](),Entity[_0x90c4a(0x1cd)]['update'](_0x435b23),this[_0x90c4a(0x302)]&&this[_0x90c4a(0x302)][_0x90c4a(0x3d2)](_0x435b23),this[_0x90c4a(0x302)]&&this[_0x90c4a(0x302)]['effectComposer']?this[_0x90c4a(0x302)][_0x90c4a(0x274)]['render'](_0x435b23/0x3e8):this['renderer'][_0x90c4a(0x1fe)](this[_0x90c4a(0x30a)],this['camera']),this[_0x90c4a(0x2d1)]&&(this['_renderStats'][_0x90c4a(0x3d2)](this[_0x90c4a(0x28b)]),this['_stats'][_0x90c4a(0x3d2)]());}},'_requestAnimationFrame':function(){var _0x2e3e6b=this;requestAnimationFrame(function(){var _0x1f2f68=_0x1a08;_0x2e3e6b[_0x1f2f68(0x1b4)]();});}},SPHContent['BALL_MODE']=0x0,SPHContent[_0x7112e(0x285)]=0x1,SPHContent[_0x7112e(0x218)]={'init':function(_0x2af4a0){var _0x1c9786=_0x7112e;this[_0x1c9786(0x35d)]=0xa,this['_numVolumeSamples']=this['_quality']===SPH['Quality'][_0x1c9786(0xde)]?0x2:0x2,this[_0x1c9786(0x33b)]=0x1,this[_0x1c9786(0x29f)]=this[_0x1c9786(0x26e)]===SPH['Quality'][_0x1c9786(0x264)]?0xc440:0xc440,this[_0x1c9786(0x16b)]=_0x2af4a0[_0x1c9786(0x30a)],window[_0x1c9786(0x15a)]=THREE,window['scene']=this[_0x1c9786(0x16b)],this[_0x1c9786(0x38f)]=_0x2af4a0[_0x1c9786(0x3b0)],window[_0x1c9786(0x3b0)]=this[_0x1c9786(0x38f)],this['_camera']['position']['y']=0x1,this['_camera']['rotation']['x']=-Math['PI']/0x2,this['_camera'][_0x1c9786(0x2b1)]=0x64,this[_0x1c9786(0x137)]=_0x2af4a0[_0x1c9786(0x28b)],this[_0x1c9786(0x3ba)]=_0x2af4a0[_0x1c9786(0x158)],this[_0x1c9786(0x160)]=document[_0x1c9786(0x106)](_0x1c9786(0x170));var _0x5ee676=this[_0x1c9786(0x137)][_0x1c9786(0x384)];if(!_0x5ee676['get'](_0x1c9786(0x25f)))throw new Error(_0x1c9786(0x19f));this['_spawnRatio']=0x1,this[_0x1c9786(0x2f8)]===SPHContent[_0x1c9786(0x285)]&&(this[_0x1c9786(0x3d1)]=new SPHCascadeSetup(this['_assetLibrary'][_0x1c9786(0x183)](_0x1c9786(0x1d3))),this[_0x1c9786(0x141)]=0x1),this[_0x1c9786(0x247)]=new SPH(1.9,1.9,1.9,this[_0x1c9786(0x29f)],this[_0x1c9786(0x33b)],this[_0x1c9786(0x3d1)],this['_renderer'],this[_0x1c9786(0x26e)]),this[_0x1c9786(0x3c9)]=new THREE['Color'](-0.01,-0.01,-0.011),this[_0x1c9786(0x3c9)][_0x1c9786(0xf9)](1.5),this[_0x1c9786(0x3c7)]=new THREE['Color'](0x1,0x3,0x2),this[_0x1c9786(0x2f8)]===SPHContent[_0x1c9786(0x285)]&&(this[_0x1c9786(0x3c7)]=new THREE[(_0x1c9786(0x26f))](0x32,0x3,0x2),this[_0x1c9786(0x247)][_0x1c9786(0x1f8)]=0xa,this[_0x1c9786(0x247)][_0x1c9786(0x164)]=0x1,this[_0x1c9786(0x247)][_0x1c9786(0x1d4)]=0.1),this[_0x1c9786(0x3c7)]['multiplyScalar'](0x3),this[_0x1c9786(0x1dd)]=new ParticleDepthRenderer(this[_0x1c9786(0x16b)],this[_0x1c9786(0x137)],this[_0x1c9786(0x247)],0.5),this['_sceneDepthRenderer']=new SceneDepthRenderer(this['_scene'],this[_0x1c9786(0x137)],0.5),this[_0x1c9786(0x167)]=new SPHDistanceFieldRenderer(this[_0x1c9786(0x137)],this[_0x1c9786(0x247)]),this[_0x1c9786(0x1f9)](),this['_dragging']=!0x1,this[_0x1c9786(0x1c9)]();},'_onMouseDown':function(_0x10d21f){var _0x525d6d=_0x7112e;this[_0x525d6d(0x36b)](_0x10d21f[_0x525d6d(0x33a)],_0x10d21f[_0x525d6d(0x1d8)]);var _0x3877da=this[_0x525d6d(0x3a4)][_0x525d6d(0x2d6)](this['_blocker']);_0x3877da[_0x525d6d(0x2a4)]>0x0&&(this[_0x525d6d(0xea)]=!0x0);},'_onMouseUp':function(_0x36cf13){},'_onMouseMove':function(_0x137c02){var _0xbbe9db=_0x7112e;if(this[_0xbbe9db(0xea)]){var _0x139990=this[_0xbbe9db(0x159)][_0xbbe9db(0x22c)]['y'];this[_0xbbe9db(0x36b)](_0x137c02['clientX'],_0x137c02[_0xbbe9db(0x1d8)]);var _0x18db78=this['_rayCaster'][_0xbbe9db(0xfb)][_0xbbe9db(0x363)],_0x5a08a3=this[_0xbbe9db(0x3a4)][_0xbbe9db(0xfb)][_0xbbe9db(0x1db)],_0x2b4f5b=(_0x139990-_0x18db78['y'])/_0x5a08a3['y'];this['_blocker'][_0xbbe9db(0x22c)]['x']=THREE[_0xbbe9db(0x14d)][_0xbbe9db(0x248)](_0x18db78['x']+_0x2b4f5b*_0x5a08a3['x'],-0x2,0x2),this['_blocker']['position']['z']=THREE[_0xbbe9db(0x14d)]['clamp'](_0x18db78['z']+_0x2b4f5b*_0x5a08a3['z'],-0x2,0x2);}},'_updateRaycaster':function(_0x486487,_0x300851){var _0x2d17db=_0x7112e;_0x486487=_0x486487/window[_0x2d17db(0x1ca)]*0x2-0x1,_0x300851=-(_0x300851/window[_0x2d17db(0x253)]*0x2-0x1),this[_0x2d17db(0x3a4)][_0x2d17db(0x3d7)](new THREE[(_0x2d17db(0x193))](_0x486487,_0x300851),this[_0x2d17db(0x38f)]);},'start':function(){},'destroy':function(){},'resize':function(_0xdae55f,_0x4467e5){var _0x31418c=_0x7112e;this['_particleDepthRenderer'][_0x31418c(0x26b)](window['innerHeight'],window[_0x31418c(0x253)]),this[_0x31418c(0x2a2)]['resize'](window[_0x31418c(0x253)],window['innerHeight']),this['_fluidMaterial'][_0x31418c(0x2ab)]['x']=0x1/_0xdae55f,this['_fluidMaterial'][_0x31418c(0x2ab)]['y']=0x1/_0x4467e5;},'update':function(_0x8354b0){var _0x2c7df1=_0x7112e;this[_0x2c7df1(0x38f)][_0x2c7df1(0x23d)](!0x0),this[_0x2c7df1(0x247)]['spawn'](this['_numParticles']*this['_spawnRatio']),this[_0x2c7df1(0x2f8)]===SPHContent['BALL_MODE']?(this[_0x2c7df1(0x3d1)][_0x2c7df1(0x2c1)]['spherePosition']=this[_0x2c7df1(0x159)][_0x2c7df1(0x22c)],this[_0x2c7df1(0x247)]['update'](0x10)):this[_0x2c7df1(0x247)][_0x2c7df1(0x3d2)](0x8),this[_0x2c7df1(0x3a1)][_0x2c7df1(0x27e)]=!0x1,this[_0x2c7df1(0x2e3)][_0x2c7df1(0x27e)]=!0x1,this['_mode']===SPHContent[_0x2c7df1(0x285)]&&(this[_0x2c7df1(0x159)]['visible']=!0x1),this[_0x2c7df1(0x1dd)][_0x2c7df1(0x1fe)](this[_0x2c7df1(0x38f)]),this[_0x2c7df1(0x2a2)]['render'](this[_0x2c7df1(0x38f)]),this[_0x2c7df1(0x167)][_0x2c7df1(0x1fe)](),this[_0x2c7df1(0x3a1)][_0x2c7df1(0x27e)]=!0x0,this['_sky']['visible']=!0x0,this['_mode']===SPHContent[_0x2c7df1(0x285)]&&(this[_0x2c7df1(0x159)][_0x2c7df1(0x27e)]=!0x0),this[_0x2c7df1(0x3d4)][_0x2c7df1(0x1fe)](this[_0x2c7df1(0x167)]['texture'],this[_0x2c7df1(0x3a1)],this[_0x2c7df1(0x38f)]),this[_0x2c7df1(0x300)][_0x2c7df1(0x3d2)](this['_fluidMesh'],this[_0x2c7df1(0x38f)],this[_0x2c7df1(0x3d4)][_0x2c7df1(0x126)],this[_0x2c7df1(0x1dd)]['texture'],this[_0x2c7df1(0x2a2)][_0x2c7df1(0x126)]);},'_initCameraController':function(){},'_addLight':function(_0x532dce,_0x597121,_0x5eab94){var _0x472dbe=_0x7112e,_0x2a6ec8=new THREE['DirectionalLight']();_0x2a6ec8['position'][_0x472dbe(0xfc)](_0x532dce,_0x597121,_0x5eab94),this[_0x472dbe(0x16b)]['add'](_0x2a6ec8),_0x2a6ec8=new THREE[(_0x472dbe(0xf3))](),_0x2a6ec8['position']['set'](_0x532dce,_0x597121,_0x5eab94),this[_0x472dbe(0x3d4)][_0x472dbe(0x2de)](_0x2a6ec8);},'_initScene':function(){var _0x64ab2c=_0x7112e,_0x27dfa1=this['_sph']['boxSize'],_0x5b773e=this[_0x64ab2c(0x3ba)][_0x64ab2c(0x183)](_0x64ab2c(0x387));this['_sky']=new Skybox(_0x5b773e,0x32),this[_0x64ab2c(0x16b)][_0x64ab2c(0x284)](this['_sky']),this[_0x64ab2c(0x300)]=new RenderVolumeMaterial(this[_0x64ab2c(0x247)],_0x5b773e,this[_0x64ab2c(0x1f3)]),this[_0x64ab2c(0x300)][_0x64ab2c(0x279)]=this[_0x64ab2c(0x3c7)],this['_fluidMaterial'][_0x64ab2c(0x12e)]=this[_0x64ab2c(0x3c9)];var _0x387f37=new THREE[(_0x64ab2c(0x17d))](_0x27dfa1['x'],_0x27dfa1['y'],_0x27dfa1['z']);this[_0x64ab2c(0x3a1)]=new THREE[(_0x64ab2c(0x117))](_0x387f37,this[_0x64ab2c(0x300)]),this[_0x64ab2c(0x16b)]['add'](this[_0x64ab2c(0x3a1)]),this[_0x64ab2c(0x3d4)]=new VolumetricLightRenderer(this['_renderer'],this[_0x64ab2c(0x247)][_0x64ab2c(0x32f)],this['_sph'][_0x64ab2c(0x2df)],this[_0x64ab2c(0x35d)],!0x0,0.5),this[_0x64ab2c(0x3d4)][_0x64ab2c(0x279)]=this[_0x64ab2c(0x3c7)],this[_0x64ab2c(0x3d4)][_0x64ab2c(0x12e)]=this[_0x64ab2c(0x3c9)],this['_addLight'](0x1,0.3,0x1);},'_initCollider':function(){var _0xfcde34=_0x7112e;this[_0xfcde34(0x3a4)]=new THREE['Raycaster'](),console[_0xfcde34(0x2a7)](this[_0xfcde34(0x3ba)][_0xfcde34(0x183)]('G'));var _0x18a76e=0.1,_0x381521=this['_assetLibrary'][_0xfcde34(0x183)]('G')[_0xfcde34(0x1bc)];n=new DielectricMaterial({'color':0xffffff,'irradianceProbe':this[_0xfcde34(0x3ba)][_0xfcde34(0x183)](_0xfcde34(0x226)),'roughness':0.5}),(this['_blocker']=new THREE[(_0xfcde34(0x117))](_0x381521,n),this[_0xfcde34(0x159)][_0xfcde34(0x22c)]['y']=0.5*-this['_sph']['boxSize']['y']+_0x18a76e,this['_scene']['add'](this[_0xfcde34(0x159)]),this[_0xfcde34(0x3d1)]['collider'][_0xfcde34(0x145)]=_0x18a76e,document[_0xfcde34(0x37c)](_0xfcde34(0x1e7),this[_0xfcde34(0x333)][_0xfcde34(0xff)](this)),document[_0xfcde34(0x37c)]('mouseup',this[_0xfcde34(0x2b9)][_0xfcde34(0xff)](this)),document[_0xfcde34(0x37c)](_0xfcde34(0x342),this[_0xfcde34(0x15b)]['bind'](this)));},'_initTerrain':function(){var _0x3d6b3f=_0x7112e,_0x2525cc=new THREE['PlaneBufferGeometry'](this[_0x3d6b3f(0x247)][_0x3d6b3f(0xee)]['x'],this[_0x3d6b3f(0x247)][_0x3d6b3f(0xee)]['z'],0x7c,0x7c);_0x2525cc[_0x3d6b3f(0x12b)](0.5*-Math['PI']);var _0x49c8d3=this['_assetLibrary'][_0x3d6b3f(0x183)](_0x3d6b3f(0x1d3));_0x49c8d3['wrapS']=THREE[_0x3d6b3f(0x189)],_0x49c8d3[_0x3d6b3f(0x1cb)]=THREE['ClampToEdgeWrapping'];var _0x166906=new THREE['MeshStandardMaterial']({'displacementMap':_0x49c8d3,'displacementScale':this[_0x3d6b3f(0x247)][_0x3d6b3f(0xee)]['y'],'displacementBias':0.5*-this[_0x3d6b3f(0x247)][_0x3d6b3f(0xee)]['y'],'color':new THREE['Color'](0x0),'wireframe':![]});this[_0x3d6b3f(0x159)]=new THREE[(_0x3d6b3f(0x117))](_0x2525cc,_0x166906),this[_0x3d6b3f(0x16b)]['add'](this[_0x3d6b3f(0x159)]);}},Skybox[_0x7112e(0x218)]=Object['create'](THREE['Mesh'][_0x7112e(0x218)],{'texture':{'get':function(){var _0x58a5e1=_0x7112e;return this[_0x58a5e1(0x395)][_0x58a5e1(0x296)];},'set':function(_0x3eaf51){var _0x388c5c=_0x7112e;this[_0x388c5c(0x395)]['envMap']=_0x3eaf51;}}}),SPHDistanceFieldRenderer[_0x7112e(0x218)]={get 'texture'(){var _0x375af3=_0x7112e;return this[_0x375af3(0x22e)][_0x375af3(0x126)];},'render':function(){var _0x587ec0=_0x7112e;this[_0x587ec0(0x399)][_0x587ec0(0x2a8)]=this[_0x587ec0(0x247)][_0x587ec0(0x2a8)],this['_renderer'][_0x587ec0(0x1e9)](new THREE['Color'](0x3e8,0x0,0x0),0x1),this['_pointRenderer'][_0x587ec0(0x252)](this[_0x587ec0(0x22e)]);for(var _0x50ca1b=-this[_0x587ec0(0x358)];_0x50ca1b<=this[_0x587ec0(0x358)];++_0x50ca1b)this[_0x587ec0(0x399)][_0x587ec0(0x206)]=_0x50ca1b,this[_0x587ec0(0x359)][_0x587ec0(0x2b5)](this[_0x587ec0(0x399)],this['_distanceField'],!0x1);this[_0x587ec0(0x137)][_0x587ec0(0x1e9)](0x0,0x1);}},ParticleBlurredRenderer[_0x7112e(0x218)]={get 'texture'(){var _0xf0d06e=_0x7112e;return this[_0xf0d06e(0x211)]['source'];},'resize':function(_0x384487,_0x27689b){var _0x35daa2=_0x7112e;_0x384487=Math['floor'](_0x384487*this[_0x35daa2(0x299)]),_0x27689b=Math['floor'](_0x27689b*this[_0x35daa2(0x299)]),this[_0x35daa2(0x211)]&&this['_renderTarget']['width']===_0x384487&&this[_0x35daa2(0x211)][_0x35daa2(0x390)]===_0x27689b||(this[_0x35daa2(0x211)]=new DoubleBufferTexture(_0x384487,_0x27689b,{'type':this[_0x35daa2(0x1ea)],'minFilter':THREE[_0x35daa2(0x31c)],'magFilter':THREE['LinearFilter'],'generateMipmaps':!0x1,'depthBuffer':!0x0,'stencilBuffer':!0x1}));},'render':function(_0x2b1d14){var _0x2970b8=_0x7112e;this[_0x2970b8(0x30e)](_0x2b1d14,this[_0x2970b8(0x211)][_0x2970b8(0x326)]),this[_0x2970b8(0x211)][_0x2970b8(0x227)](),this[_0x2970b8(0x166)]();},'_renderParticles':function(_0x310a73,_0x2753e5){throw new Error('Abstract\x20method\x20called!');},'_blur':function(){var _0xbaea6f=_0x7112e;this[_0xbaea6f(0xfd)][_0xbaea6f(0x2c8)][_0xbaea6f(0x2a1)]['value']=this['_renderTarget'][_0xbaea6f(0x2dc)],this[_0xbaea6f(0xfd)][_0xbaea6f(0x2c8)][_0xbaea6f(0x3af)][_0xbaea6f(0xeb)]['x']=0x1/this[_0xbaea6f(0x211)]['width'],this[_0xbaea6f(0xfd)][_0xbaea6f(0x2c8)][_0xbaea6f(0x3af)][_0xbaea6f(0xeb)]['y']=0x0,this['_rectRenderer'][_0xbaea6f(0x2b5)](this[_0xbaea6f(0xfd)],this['_renderTarget'][_0xbaea6f(0x326)],!0x0),this[_0xbaea6f(0x211)][_0xbaea6f(0x227)](),this[_0xbaea6f(0xfd)][_0xbaea6f(0x2c8)]['tDiffuse'][_0xbaea6f(0xeb)]=this[_0xbaea6f(0x211)][_0xbaea6f(0x2dc)],this[_0xbaea6f(0xfd)][_0xbaea6f(0x2c8)][_0xbaea6f(0x3af)][_0xbaea6f(0xeb)]['x']=0x0,this[_0xbaea6f(0xfd)][_0xbaea6f(0x2c8)][_0xbaea6f(0x3af)][_0xbaea6f(0xeb)]['y']=0x1/this[_0xbaea6f(0x211)]['height'],this[_0xbaea6f(0x176)][_0xbaea6f(0x2b5)](this['_blurMaterial'],this[_0xbaea6f(0x211)]['target'],!0x0),this[_0xbaea6f(0x211)][_0xbaea6f(0x227)]();},'_getGaussian':function(_0x5a9062){var _0x4aeb1b=_0x7112e;for(var _0x486e3c=CenteredGaussianCurve[_0x4aeb1b(0x3a6)](_0x5a9062,0.2),_0x22106b=[],_0x27627e=0x0,_0x676275=0x0;_0x676275<=_0x5a9062;++_0x676275){var _0x3642c5=_0x486e3c[_0x4aeb1b(0x2b6)](_0x676275);_0x22106b[_0x676275]=_0x3642c5,_0x27627e+=0x0===_0x676275?_0x3642c5:0x2*_0x3642c5;}for(var _0x676275=0x0;_0x676275<=_0x5a9062;++_0x676275)_0x22106b[_0x676275]/=_0x27627e;return _0x22106b;}},ParticleDepthMaterial=function(){var _0x31eac9=_0x7112e;THREE[_0x31eac9(0x389)]['call'](this,{'uniforms':{'positionBuffer':{'value':null},'particleSize':{'value':0x4b0},'viewportSize':{'value':new THREE['Vector2']()},'cameraNear':{'value':0.1},'rcpCameraRange':{'value':0x0}},'vertexShader':ShaderLibrary[_0x31eac9(0x183)](_0x31eac9(0x3aa)),'fragmentShader':ShaderLibrary[_0x31eac9(0x183)](_0x31eac9(0x22d))}),this[_0x31eac9(0x384)][_0x31eac9(0x24d)]=!0x0;},ParticleDepthMaterial[_0x7112e(0x218)]=Object[_0x7112e(0xe9)](THREE[_0x7112e(0x389)][_0x7112e(0x218)],{'positionBuffer':{'get':function(){var _0x2f7dd4=_0x7112e;return this[_0x2f7dd4(0x2c8)]['positionBuffer'][_0x2f7dd4(0xeb)];},'set':function(_0x490d86){var _0x453c94=_0x7112e;this[_0x453c94(0x2c8)][_0x453c94(0x2a8)][_0x453c94(0xeb)]=_0x490d86;}},'particleSize':{'get':function(){var _0x1599ef=_0x7112e;return this[_0x1599ef(0x2c8)][_0x1599ef(0x1f0)]['value'];},'set':function(_0x2d641a){var _0x396244=_0x7112e;this[_0x396244(0x2c8)][_0x396244(0x1f0)][_0x396244(0xeb)]=_0x2d641a;}},'cameraNear':{'get':function(){var _0x515271=_0x7112e;return this[_0x515271(0x2c8)]['cameraNear'][_0x515271(0xeb)];},'set':function(_0x390a99){var _0x3dfa99=_0x7112e;this['uniforms'][_0x3dfa99(0x2ca)][_0x3dfa99(0xeb)]=_0x390a99;}},'rcpCameraRange':{'get':function(){var _0x1c6aed=_0x7112e;return this[_0x1c6aed(0x2c8)][_0x1c6aed(0x3c0)][_0x1c6aed(0xeb)];},'set':function(_0xe55766){var _0x1fac50=_0x7112e;this[_0x1fac50(0x2c8)][_0x1fac50(0x3c0)][_0x1fac50(0xeb)]=_0xe55766;}},'viewportSize':{'get':function(){var _0x2b1e78=_0x7112e;return this['uniforms'][_0x2b1e78(0x382)][_0x2b1e78(0xeb)];},'set':function(_0x16193f){var _0xfa5bdb=_0x7112e;this[_0xfa5bdb(0x2c8)][_0xfa5bdb(0x382)][_0xfa5bdb(0xeb)]=_0x16193f;}}}),ParticleDepthRenderer[_0x7112e(0x218)]=Object['create'](ParticleBlurredRenderer['prototype']),ParticleDepthRenderer[_0x7112e(0x218)]['_renderParticles']=function(_0x331366,_0x6680e6){var _0xa5f70d=_0x7112e;this['_depthMaterial'][_0xa5f70d(0x2a8)]=this[_0xa5f70d(0xfa)][_0xa5f70d(0x2a8)],this[_0xa5f70d(0x220)][_0xa5f70d(0x2ca)]=_0x331366[_0xa5f70d(0x161)],this[_0xa5f70d(0x220)]['rcpCameraRange']=0x1/(_0x331366[_0xa5f70d(0x2b1)]-_0x331366[_0xa5f70d(0x161)]),this[_0xa5f70d(0x137)][_0xa5f70d(0x1e9)](0xffffff,0x1),this['_pointRenderer'][_0xa5f70d(0x2b5)](this['_depthMaterial'],_0x6680e6,!0x0,_0x331366),this[_0xa5f70d(0x137)]['setClearColor'](0x0,0x1);},ParticleDepthRenderer[_0x7112e(0x218)][_0x7112e(0x26b)]=function(_0x15daaa,_0x208b68){var _0x1e033c=_0x7112e;ParticleBlurredRenderer[_0x1e033c(0x218)][_0x1e033c(0x26b)][_0x1e033c(0x281)](this,_0x15daaa,_0x208b68),this[_0x1e033c(0x220)][_0x1e033c(0x382)]['x']=this[_0x1e033c(0x211)][_0x1e033c(0x121)],this[_0x1e033c(0x220)][_0x1e033c(0x382)]['y']=this[_0x1e033c(0x211)]['height'];},SPH[_0x7112e(0x2ad)]={'LOW':0x1,'HIGH':0x2,'EXTREME':0x2},SPH[_0x7112e(0x218)]={get 'quality'(){var _0x380cdc=_0x7112e;return this[_0x380cdc(0x26e)];},get 'halfExtent'(){var _0x32bee4=_0x7112e;return this[_0x32bee4(0x364)];},get 'cellSize'(){var _0x595674=_0x7112e;return this[_0x595674(0x1d9)];},get 'numCells'(){var _0x29b02b=_0x7112e;return this[_0x29b02b(0x229)];},get 'boxSize'(){var _0x4a7de6=_0x7112e;return this[_0x4a7de6(0x393)];},get 'restDensity'(){var _0x4ae328=_0x7112e;return this[_0x4ae328(0x109)];},get 'restDistance'(){var _0x1d2875=_0x7112e;return this[_0x1d2875(0x103)];},get 'particleMass'(){var _0x168a08=_0x7112e;return this[_0x168a08(0x2d7)];},get 'particleRadius'(){var _0x4e0010=_0x7112e;return this[_0x4e0010(0x225)];},get 'smoothingRadius'(){var _0x515221=_0x7112e;return this[_0x515221(0x177)];},get 'particleBufferSize'(){var _0x5e6779=_0x7112e;return this[_0x5e6779(0x3a9)];},get 'bucketPixelSize'(){var _0x3f93da=_0x7112e;return this[_0x3f93da(0x314)];},get 'pointGeometry'(){var _0x34de1d=_0x7112e;return this[_0x34de1d(0x28c)];},get 'positionBuffer'(){var _0x480fb4=_0x7112e;return this[_0x480fb4(0x383)][_0x480fb4(0x2dc)];},get 'bucketBuffer'(){var _0x3b6cb7=_0x7112e;return this[_0x3b6cb7(0x1c1)][_0x3b6cb7(0x126)];},get 'densityBuffer'(){var _0x24757e=_0x7112e;return this[_0x24757e(0x2ff)]['texture'];},get 'accelBuffer'(){var _0x3684c7=_0x7112e;return this[_0x3684c7(0x201)][_0x3684c7(0x2dc)];},get 'velocityBuffer'(){var _0x353255=_0x7112e;return this[_0x353255(0x108)][_0x353255(0x2dc)];},get 'collisionBuffer'(){var _0x4d53d0=_0x7112e;return this[_0x4d53d0(0x3d1)][_0x4d53d0(0x2c1)]['texture'];},get 'initVelocityGLSL'(){var _0x27bf58=_0x7112e;return this[_0x27bf58(0x3d1)]['getInitVelocityGLSL']();},'spawn':function(_0x3dbdbe){var _0x1e60c1=_0x7112e;this[_0x1e60c1(0x29f)]+=Math[_0x1e60c1(0x2c4)](_0x3dbdbe),this[_0x1e60c1(0x29f)]>this[_0x1e60c1(0xe5)]&&(this[_0x1e60c1(0x29f)]=this[_0x1e60c1(0xe5)]);},'reset':function(){var _0x1ee5f6=_0x7112e;this['_numParticles']=0x0,this[_0x1ee5f6(0x367)](),this[_0x1ee5f6(0x137)][_0x1ee5f6(0x1e9)](0x0,0x1),this[_0x1ee5f6(0x1cf)][_0x1ee5f6(0x252)](this[_0x1ee5f6(0x201)][_0x1ee5f6(0x326)]),this[_0x1ee5f6(0x201)][_0x1ee5f6(0x227)](),this[_0x1ee5f6(0x1cf)][_0x1ee5f6(0x252)](this['_accelBuffer']['target']),this[_0x1ee5f6(0x201)][_0x1ee5f6(0x227)](),this['_renderRect'][_0x1ee5f6(0x252)](this[_0x1ee5f6(0x108)][_0x1ee5f6(0x326)]),this[_0x1ee5f6(0x108)][_0x1ee5f6(0x227)]();},'_initParticles':function(){var _0x34913b=_0x7112e;for(var _0x3112e5=new THREE[(_0x34913b(0x397))](),_0x493c13=[],_0x57b4db=0x0;_0x57b4db<this[_0x34913b(0xe5)];++_0x57b4db)this[_0x34913b(0x3d1)]['initParticlePosition'](_0x57b4db,this[_0x34913b(0xe5)],this[_0x34913b(0x364)],_0x3112e5),_0x493c13['push'](_0x3112e5['x'],_0x3112e5['y'],_0x3112e5['z'],_0x57b4db+0x1);var _0x32aa56=this['_particleBufferSize']['x']*this['_particleBufferSize']['y'];for(_0x57b4db=this[_0x34913b(0xe5)];_0x57b4db<_0x32aa56;++_0x57b4db)_0x493c13[_0x34913b(0x2c9)](0x0,0x0,0x0,_0x57b4db+0x1);var _0x2139a9=new Float32Array(_0x493c13);CopyDataToRenderTarget[_0x34913b(0x2b5)](_0x2139a9,this['_positionBuffer'][_0x34913b(0x326)],this['_renderer'],THREE[_0x34913b(0x3c2)]),this['_positionBuffer'][_0x34913b(0x227)]();},'_createPointGeometry':function(){var _0x2856b1=_0x7112e;for(var _0x2d331f=new THREE[(_0x2856b1(0x12c))](),_0x22d6ce=[],_0x203f9f=[],_0x10a3e7=[],_0x2c22c7=this[_0x2856b1(0x3a9)]['x'],_0x193208=this[_0x2856b1(0x3a9)]['y'],_0x531bb9=0x0;_0x531bb9<this[_0x2856b1(0xe5)];++_0x531bb9){var _0x53325d=Math['floor'](_0x531bb9/_0x2c22c7),_0x4b8c11=_0x531bb9-_0x53325d*_0x2c22c7;_0x4b8c11=(_0x4b8c11+0.5)/_0x2c22c7,_0x53325d=(_0x53325d+0.5)/_0x193208,_0x10a3e7[_0x2856b1(0x2c9)](_0x4b8c11,_0x53325d),_0x203f9f[_0x2856b1(0x2c9)](_0x531bb9),_0x22d6ce[_0x2856b1(0x2c9)](_0x531bb9);}return _0x2d331f[_0x2856b1(0x297)](new THREE['BufferAttribute'](new Uint32Array(_0x22d6ce),0x1)),_0x2d331f['addAttribute'](_0x2856b1(0x132),new THREE[(_0x2856b1(0x29a))](new Float32Array(_0x10a3e7),0x2)),_0x2d331f[_0x2856b1(0x3b7)](_0x2856b1(0x38e),new THREE[(_0x2856b1(0x29a))](new Float32Array(_0x203f9f),0x1)),_0x2d331f;},'update':function(_0x3d4a14,_0x1865f1){var _0x28dffe=_0x7112e;_0x3d4a14*=0.001,0x0===_0x3d4a14&&(_0x3d4a14=0.01),this['_pointGeometry']['setDrawRange'](0x0,this[_0x28dffe(0x29f)]),this['_setup'][_0x28dffe(0x2c1)]['update'](),_0x1865f1=0x2|_0x1865f1,_0x3d4a14/=_0x1865f1;for(var _0x5bc217=0x0;_0x5bc217<_0x1865f1;++_0x5bc217)this[_0x28dffe(0x2fc)](),this[_0x28dffe(0x3cb)](),this[_0x28dffe(0x199)](_0x3d4a14),this[_0x28dffe(0x17f)](_0x3d4a14),this[_0x28dffe(0x34a)](_0x3d4a14);},'_updateBucket':function(){var _0x2a70ce=_0x7112e,_0xd8dd39=this[_0x2a70ce(0x137)][_0x2a70ce(0x277)];this[_0x2a70ce(0x376)][_0x2a70ce(0x2a8)]=this['_positionBuffer'][_0x2a70ce(0x2dc)],this[_0x2a70ce(0x376)][_0x2a70ce(0x371)]=this['_maxParticles'],this[_0x2a70ce(0x376)][_0x2a70ce(0x142)]=THREE['LessDepth'];var _0x3ef35e=this[_0x2a70ce(0x137)][_0x2a70ce(0x36d)][_0x2a70ce(0x3b6)]['stencil'];_0x3ef35e[_0x2a70ce(0x136)](0xff),_0x3ef35e[_0x2a70ce(0x1f6)](0x0),_0x3ef35e[_0x2a70ce(0x209)](!0x0),_0x3ef35e['setOp'](_0xd8dd39[_0x2a70ce(0x36c)],_0xd8dd39[_0x2a70ce(0x36c)],_0xd8dd39[_0x2a70ce(0x36c)]),_0x3ef35e[_0x2a70ce(0x180)](_0xd8dd39[_0x2a70ce(0x37a)],0x0,0xff),this[_0x2a70ce(0x137)][_0x2a70ce(0x1e9)](0x0,0x0),this[_0x2a70ce(0x26d)](!0x0,!0x1,!0x1,!0x1,!0x0),_0x3ef35e[_0x2a70ce(0x204)](_0xd8dd39[_0x2a70ce(0x36c)],_0xd8dd39[_0x2a70ce(0x36c)],_0xd8dd39[_0x2a70ce(0xdc)]),_0x3ef35e[_0x2a70ce(0x180)](_0xd8dd39[_0x2a70ce(0x258)],0x1,0xff),this['_bucketMaterial']['depthFunc']=THREE[_0x2a70ce(0x2db)],this[_0x2a70ce(0x26d)](!0x1,!0x0,!0x1,!0x1,!0x1),this['_renderBucketPass'](!0x1,!0x1,!0x0,!0x1,!0x1),this[_0x2a70ce(0x26d)](!0x1,!0x1,!0x1,!0x0,!0x1),_0x3ef35e[_0x2a70ce(0x209)](!0x1),_0x3ef35e[_0x2a70ce(0x204)](_0xd8dd39[_0x2a70ce(0x36c)],_0xd8dd39[_0x2a70ce(0x36c)],_0xd8dd39[_0x2a70ce(0x36c)]),_0x3ef35e[_0x2a70ce(0x180)](_0xd8dd39[_0x2a70ce(0x37a)],0x0,0xffffffff);},'_renderBucketPass':function(_0x468c09,_0x31b31d,_0x27b685,_0x368918,_0x8741af){var _0x2c5497=_0x7112e,_0x141360=this[_0x2c5497(0x137)][_0x2c5497(0x36d)]['buffers']['color'];this['_renderer'][_0x2c5497(0x2b2)](this['_bucketBuffer'],_0x8741af,_0x8741af,!0x0),_0x141360[_0x2c5497(0x136)](_0x468c09,_0x31b31d,_0x27b685,_0x368918),_0x141360[_0x2c5497(0x15e)](!0x0),this[_0x2c5497(0x17a)][_0x2c5497(0x2b5)](this[_0x2c5497(0x376)],this['_bucketBuffer'],!0x1),_0x141360[_0x2c5497(0x15e)](!0x1);},'_updateDensity':function(){var _0x1b2f0c=_0x7112e;this[_0x1b2f0c(0x20f)]['positionBuffer']=this['_positionBuffer'][_0x1b2f0c(0x2dc)],this[_0x1b2f0c(0x20f)][_0x1b2f0c(0x38c)]=this[_0x1b2f0c(0x1c1)][_0x1b2f0c(0x126)],this[_0x1b2f0c(0x20f)][_0x1b2f0c(0x3b1)]=this[_0x1b2f0c(0x3b1)],this[_0x1b2f0c(0x1cf)][_0x1b2f0c(0x2b5)](this['_densityMaterial'],this[_0x1b2f0c(0x2ff)]);},'_updateAccel':function(_0x3646f6){var _0x5617a3=_0x7112e;this[_0x5617a3(0x351)][_0x5617a3(0x2a8)]=this[_0x5617a3(0x383)][_0x5617a3(0x2dc)],this[_0x5617a3(0x351)][_0x5617a3(0x38c)]=this[_0x5617a3(0x1c1)][_0x5617a3(0x126)],this[_0x5617a3(0x351)][_0x5617a3(0x33e)]=this['_densityBuffer'][_0x5617a3(0x126)],this[_0x5617a3(0x351)][_0x5617a3(0xef)]=this[_0x5617a3(0x108)][_0x5617a3(0x2dc)],this['_accelMaterial']['restDensity']=this['restDensity'],this['_accelMaterial'][_0x5617a3(0x3b1)]=this['particleMass'],this[_0x5617a3(0x351)][_0x5617a3(0x1f8)]=this['viscosity'],this[_0x5617a3(0x351)][_0x5617a3(0x164)]=this[_0x5617a3(0x164)],this[_0x5617a3(0x351)]['gravity']=this[_0x5617a3(0x1d6)],this[_0x5617a3(0x351)][_0x5617a3(0x197)]=this[_0x5617a3(0x197)],this[_0x5617a3(0x351)][_0x5617a3(0x1d4)]=this[_0x5617a3(0x1d4)],this[_0x5617a3(0x351)][_0x5617a3(0x1b9)]=this[_0x5617a3(0x29f)]+0x1,this[_0x5617a3(0x351)]['dt']=_0x3646f6,this[_0x5617a3(0x1cf)]['execute'](this[_0x5617a3(0x351)],this[_0x5617a3(0x201)]['target']),this['_accelBuffer'][_0x5617a3(0x227)]();},'_updatePosition':function(_0x558320){var _0x170bbe=_0x7112e;this['_positionMaterial'][_0x170bbe(0x2a8)]=this['_positionBuffer'][_0x170bbe(0x2dc)],this[_0x170bbe(0x116)][_0x170bbe(0xef)]=this[_0x170bbe(0x108)][_0x170bbe(0x2dc)],this['_positionMaterial'][_0x170bbe(0x1f1)]=this[_0x170bbe(0x201)]['source'],this['_positionMaterial'][_0x170bbe(0x1b9)]=this[_0x170bbe(0x29f)]+0x1,this[_0x170bbe(0x116)]['dt']=_0x558320,this[_0x170bbe(0x1cf)]['execute'](this['_positionMaterial'],this[_0x170bbe(0x383)][_0x170bbe(0x326)]),this[_0x170bbe(0x383)][_0x170bbe(0x227)]();},'_updateVelocity':function(_0x180a86){var _0x5d4613=_0x7112e;this[_0x5d4613(0x1d2)][_0x5d4613(0x2a8)]=this[_0x5d4613(0x383)][_0x5d4613(0x2dc)],this[_0x5d4613(0x1d2)][_0x5d4613(0xef)]=this[_0x5d4613(0x108)][_0x5d4613(0x2dc)],this[_0x5d4613(0x1d2)][_0x5d4613(0x102)]=this[_0x5d4613(0x201)]['source'],this[_0x5d4613(0x1d2)][_0x5d4613(0x38b)]=this[_0x5d4613(0x201)]['target']['texture'],this[_0x5d4613(0x1d2)][_0x5d4613(0x1b9)]=this[_0x5d4613(0x29f)]+0x1,this[_0x5d4613(0x1d2)]['dt']=_0x180a86,this[_0x5d4613(0x1cf)][_0x5d4613(0x2b5)](this['_velocityMaterial'],this[_0x5d4613(0x108)][_0x5d4613(0x326)]),this[_0x5d4613(0x108)]['swap']();},'_rtOptions':function(_0x17a645){var _0x15ba5d=_0x7112e;return{'type':THREE[_0x15ba5d(0x3c2)],'minFilter':THREE['NearestFilter'],'magFilter':THREE['NearestFilter'],'generateMipmaps':!0x1,'depthBuffer':_0x17a645||!0x1,'stencilBuffer':_0x17a645||!0x1,'format':THREE[_0x15ba5d(0x1fc)]};}},SPHAccelMaterial=function(_0x204919){var _0x463388=_0x7112e,_0x3f2476={'SAMPLE_RADIUS':_0x204919[_0x463388(0x22f)],'BUCKET_SIZE':0x4};THREE['ShaderMaterial']['call'](this,{'defines':_0x3f2476,'uniforms':{'positionBuffer':{'value':null},'bucketBuffer':{'value':null},'velocityBuffer':{'value':null},'densityBuffer':{'value':null},'dt':{'value':0x1},'drag':{'value':0x0},'maxParticleIndex':{'value':0x0},'numCells':{'value':_0x204919[_0x463388(0x32f)]},'cellSize':{'value':_0x204919[_0x463388(0x2df)]},'stiffness':{'value':_0x204919[_0x463388(0x164)]},'restDensity':{'value':_0x204919[_0x463388(0x331)]},'gravity':{'value':-9.81},'particleBufferSize':{'value':_0x204919['particleBufferSize']},'bucketPixelSize':{'value':_0x204919['bucketPixelSize']},'mass':{'value':_0x204919[_0x463388(0x3b1)]},'h':{'value':_0x204919[_0x463388(0x196)]},'h2':{'value':Math['pow'](_0x204919[_0x463388(0x196)],0x2)},'pressNorm':{'value':-0x2d/(Math['PI']*Math['pow'](_0x204919[_0x463388(0x196)],0x6))},'viscNorm':{'value':0x2d/(Math['PI']*Math[_0x463388(0x1c8)](_0x204919[_0x463388(0x196)],0x6))},'surfaceNorm':{'value':-0x3b1/(0x20*Math['PI']*Math['pow'](_0x204919['smoothingRadius'],0x9))},'curvatureThreshold':{'value':_0x204919[_0x463388(0x197)]},'surfaceTension':{'value':_0x204919[_0x463388(0x1d4)]},'viscosity':{'value':0x0}},'vertexShader':ShaderLibrary['get'](_0x463388(0x262)),'fragmentShader':ShaderLibrary[_0x463388(0x183)]('sph_accel_fragment')});},SPHAccelMaterial[_0x7112e(0x218)]=Object[_0x7112e(0xe9)](THREE[_0x7112e(0x389)][_0x7112e(0x218)],{'positionBuffer':{'get':function(){var _0x14cb32=_0x7112e;return this[_0x14cb32(0x2c8)][_0x14cb32(0x2a8)][_0x14cb32(0xeb)];},'set':function(_0x5c33b2){var _0x4f263b=_0x7112e;this['uniforms'][_0x4f263b(0x2a8)][_0x4f263b(0xeb)]=_0x5c33b2;}},'densityBuffer':{'get':function(){var _0x2343ed=_0x7112e;return this[_0x2343ed(0x2c8)][_0x2343ed(0x33e)][_0x2343ed(0xeb)];},'set':function(_0x354d13){var _0x51e591=_0x7112e;this[_0x51e591(0x2c8)][_0x51e591(0x33e)][_0x51e591(0xeb)]=_0x354d13;}},'velocityBuffer':{'get':function(){var _0x50f5d6=_0x7112e;return this[_0x50f5d6(0x2c8)][_0x50f5d6(0xef)]['value'];},'set':function(_0xaa1c1c){var _0x6effb7=_0x7112e;this[_0x6effb7(0x2c8)][_0x6effb7(0xef)][_0x6effb7(0xeb)]=_0xaa1c1c;}},'viscosity':{'get':function(){var _0x3dc3f8=_0x7112e;return this[_0x3dc3f8(0x2c8)]['viscosity'][_0x3dc3f8(0xeb)];},'set':function(_0x360277){var _0x4ea6bf=_0x7112e;this[_0x4ea6bf(0x2c8)][_0x4ea6bf(0x1f8)][_0x4ea6bf(0xeb)]=_0x360277;}},'restDensity':{'get':function(){var _0x7b59f1=_0x7112e;return this[_0x7b59f1(0x2c8)][_0x7b59f1(0x331)][_0x7b59f1(0xeb)];},'set':function(_0x21b712){var _0xd8e389=_0x7112e;this['uniforms']['restDensity'][_0xd8e389(0xeb)]=_0x21b712;}},'curvatureThreshold':{'get':function(){var _0x4e0544=_0x7112e;return this[_0x4e0544(0x2c8)][_0x4e0544(0x197)][_0x4e0544(0xeb)];},'set':function(_0x3bec08){var _0xb41f5b=_0x7112e;this['uniforms']['curvatureThreshold'][_0xb41f5b(0xeb)]=_0x3bec08;}},'surfaceTension':{'get':function(){var _0x515fe9=_0x7112e;return this['uniforms'][_0x515fe9(0x1d4)][_0x515fe9(0xeb)];},'set':function(_0xcf04ca){var _0x5ab3c1=_0x7112e;this[_0x5ab3c1(0x2c8)][_0x5ab3c1(0x1d4)][_0x5ab3c1(0xeb)]=_0xcf04ca;}},'stiffness':{'get':function(){var _0x13b7bf=_0x7112e;return this[_0x13b7bf(0x2c8)]['stiffness'][_0x13b7bf(0xeb)];},'set':function(_0x3f941d){var _0x90a85a=_0x7112e;this[_0x90a85a(0x2c8)][_0x90a85a(0x164)][_0x90a85a(0xeb)]=_0x3f941d;}},'particleMass':{'get':function(){var _0x4c279e=_0x7112e;return this[_0x4c279e(0x2c8)][_0x4c279e(0x202)][_0x4c279e(0xeb)];},'set':function(_0x83f21b){var _0x133386=_0x7112e;this[_0x133386(0x2c8)][_0x133386(0x202)]['value']=_0x83f21b;}},'gravity':{'get':function(){var _0x304d43=_0x7112e;return this['uniforms'][_0x304d43(0x1d6)]['value'];},'set':function(_0x57f5db){var _0x5624ec=_0x7112e;this[_0x5624ec(0x2c8)][_0x5624ec(0x1d6)][_0x5624ec(0xeb)]=_0x57f5db;}},'bucketBuffer':{'get':function(){var _0x159a58=_0x7112e;return this['uniforms']['bucketBuffer'][_0x159a58(0xeb)];},'set':function(_0x5d425f){var _0x408d0c=_0x7112e;this['uniforms'][_0x408d0c(0x38c)]['value']=_0x5d425f;}},'dt':{'get':function(){var _0x4af05e=_0x7112e;return this[_0x4af05e(0x2c8)]['dt'][_0x4af05e(0xeb)];},'set':function(_0x29b950){var _0x655b9c=_0x7112e;this[_0x655b9c(0x2c8)]['dt'][_0x655b9c(0xeb)]=_0x29b950;}},'drag':{'get':function(){var _0x26817f=_0x7112e;return this[_0x26817f(0x2c8)][_0x26817f(0x20a)][_0x26817f(0xeb)];},'set':function(_0x252225){var _0x5d6024=_0x7112e;this[_0x5d6024(0x2c8)][_0x5d6024(0x20a)][_0x5d6024(0xeb)]=_0x252225;}},'maxParticleIndex':{'get':function(){var _0x46ba66=_0x7112e;return this[_0x46ba66(0x2c8)][_0x46ba66(0x1b9)][_0x46ba66(0xeb)];},'set':function(_0x2e4443){var _0x2e21c2=_0x7112e;this['uniforms'][_0x2e21c2(0x1b9)][_0x2e21c2(0xeb)]=_0x2e4443;}}}),SPHBallCollider[_0x7112e(0x218)]=Object[_0x7112e(0xe9)](SPHCollider[_0x7112e(0x218)],{'sphereRadius':{'get':function(){var _0x506897=_0x7112e;return this[_0x506897(0x399)][_0x506897(0x145)];},'set':function(_0x40d6a4){var _0x206c84=_0x7112e;this[_0x206c84(0x399)][_0x206c84(0x145)]!==_0x40d6a4&&this[_0x206c84(0x20d)](),this[_0x206c84(0x399)][_0x206c84(0x145)]=_0x40d6a4;}},'spherePosition':{'get':function(){var _0x2233f6=_0x7112e;return this[_0x2233f6(0x399)][_0x2233f6(0x112)];},'set':function(_0x483139){var _0xcfa91b=_0x7112e;this[_0xcfa91b(0x399)][_0xcfa91b(0x112)][_0xcfa91b(0x224)](_0x483139)||this['invalidate'](),this[_0xcfa91b(0x399)][_0xcfa91b(0x112)]=_0x483139;}}}),(SPHBallCollider[_0x7112e(0x218)]['_updateMaterial']=function(){},SPHBallColliderMaterial=function(){var _0x137981=_0x7112e;THREE[_0x137981(0x389)][_0x137981(0x281)](this,{'uniforms':{'wallExtent':{'value':null},'numCells':{'value':null},'cellSize':{'value':0x0},'sphereRadius':{'value':0.2},'spherePosition':{'value':new THREE[(_0x137981(0x397))]()}},'vertexShader':ShaderLibrary[_0x137981(0x183)](_0x137981(0x262)),'fragmentShader':ShaderLibrary[_0x137981(0x249)](_0x137981(0x33d))+ShaderLibrary[_0x137981(0x183)](_0x137981(0x200))});},SPHBallColliderMaterial[_0x7112e(0x218)]=Object[_0x7112e(0xe9)](THREE['ShaderMaterial'][_0x7112e(0x218)],{'sphereRadius':{'get':function(){var _0x51beb0=_0x7112e;return this[_0x51beb0(0x2c8)][_0x51beb0(0x145)][_0x51beb0(0xeb)];},'set':function(_0x736c1d){var _0x52ef62=_0x7112e;this['uniforms']['sphereRadius'][_0x52ef62(0xeb)]=_0x736c1d;}},'spherePosition':{'get':function(){var _0x3e8598=_0x7112e;return this['uniforms'][_0x3e8598(0x112)]['value'];},'set':function(_0x3c10f5){var _0xf29742=_0x7112e;this[_0xf29742(0x2c8)][_0xf29742(0x112)][_0xf29742(0xeb)][_0xf29742(0x372)](_0x3c10f5);}}}),SPHBallSetup[_0x7112e(0x218)]={'getStartParticleCount':function(_0x5c1d5e){return 0x0;},'getInitVelocityGLSL':function(){var _0x192b53=_0x7112e;return ShaderLibrary['getInclude'](_0x192b53(0x2e1));},'initParticlePosition':function(_0x1b7b5a,_0xf973b0,_0x32ea69,_0x13284a){var _0x493b8d=_0x7112e,_0x44284d=new THREE[(_0x493b8d(0x3c3))]();return function(_0x1be158,_0x2bddff,_0x47ad7c,_0x15c06f){var _0x3be025=_0x493b8d,_0x5ab9e7=_0x47ad7c[_0x3be025(0x2a4)]()/0x6;_0x44284d[_0x3be025(0x26a)]=Math[_0x3be025(0x3b4)]()*_0x5ab9e7,_0x44284d[_0x3be025(0x1c6)]=Math['random']()*Math['PI'],_0x44284d['theta']=Math[_0x3be025(0x3b4)]()*Math['PI']*0x2,_0x15c06f[_0x3be025(0x286)](_0x44284d),_0x15c06f['x']-=0.5*_0x47ad7c['x'],_0x15c06f['y']+=0.5*_0x47ad7c['y'],_0x15c06f['z']-=0.5*_0x47ad7c['z'];};}()},SPHBucketMaterial=function(_0x482acf){var _0x518bdc=_0x7112e;THREE['ShaderMaterial'][_0x518bdc(0x281)](this,{'uniforms':{'positionBuffer':{'value':null},'numCells':{'value':_0x482acf['numCells']},'numParticles':{'value':_0x482acf[_0x518bdc(0x371)]},'cellSize':{'value':_0x482acf[_0x518bdc(0x2df)]}},'vertexShader':ShaderLibrary[_0x518bdc(0x183)]('sph_bucket_vertex'),'fragmentShader':ShaderLibrary[_0x518bdc(0x183)](_0x518bdc(0x379))});},SPHBucketMaterial[_0x7112e(0x218)]=Object['create'](THREE[_0x7112e(0x389)][_0x7112e(0x218)],{'positionBuffer':{'get':function(){var _0x39c091=_0x7112e;return this[_0x39c091(0x2c8)][_0x39c091(0x2a8)][_0x39c091(0xeb)];},'set':function(_0x3a1cb3){var _0x30b8da=_0x7112e;this[_0x30b8da(0x2c8)][_0x30b8da(0x2a8)][_0x30b8da(0xeb)]=_0x3a1cb3;}},'numParticles':{'get':function(){var _0x1a6b22=_0x7112e;return this[_0x1a6b22(0x2c8)]['numParticles'][_0x1a6b22(0xeb)];},'set':function(_0xa2e1b7){var _0x1ef2f4=_0x7112e;this[_0x1ef2f4(0x2c8)]['numParticles'][_0x1ef2f4(0xeb)]=_0xa2e1b7;}}}),SPHCascadeSetup[_0x7112e(0x218)]={'getStartParticleCount':function(_0x3e2bfe){return 0x0;},'getInitVelocityGLSL':function(){var _0x3df995=_0x7112e;return ShaderLibrary[_0x3df995(0x249)](_0x3df995(0x165));},'initParticlePosition':function(_0x24f611,_0x426f78,_0x559a87,_0x2d016d){var _0x49540a=_0x7112e;_0x2d016d['x']=-_0x559a87['x']*(0.2*Math[_0x49540a(0x3b4)]()+0.8),_0x2d016d['y']=0.9*_0x559a87['y'],_0x2d016d['z']=(0x2*Math[_0x49540a(0x3b4)]()-0x1)*_0x559a87['z']*0.2;}},SPHDensityMaterial=function(_0x4bb1bb){var _0x289bd9=_0x7112e,_0x346333={'SAMPLE_RADIUS':_0x4bb1bb[_0x289bd9(0x22f)],'BUCKET_SIZE':0x4};THREE[_0x289bd9(0x389)][_0x289bd9(0x281)](this,{'defines':_0x346333,'uniforms':{'positionBuffer':{'value':null},'collisionBuffer':{'value':_0x4bb1bb['collisionBuffer']},'bucketBuffer':{'value':null},'numCells':{'value':_0x4bb1bb[_0x289bd9(0x32f)]},'cellSize':{'value':_0x4bb1bb['cellSize']},'particleBufferSize':{'value':_0x4bb1bb[_0x289bd9(0x388)]},'bucketPixelSize':{'value':_0x4bb1bb[_0x289bd9(0x1a8)]},'mass':{'value':_0x4bb1bb[_0x289bd9(0x3b1)]},'h2':{'value':_0x4bb1bb[_0x289bd9(0x196)]*_0x4bb1bb[_0x289bd9(0x196)]},'kernelNorm':{'value':0x13b/(0x40*Math['PI']*Math[_0x289bd9(0x1c8)](_0x4bb1bb[_0x289bd9(0x196)],0x9))}},'vertexShader':ShaderLibrary[_0x289bd9(0x183)](_0x289bd9(0x262)),'fragmentShader':ShaderLibrary[_0x289bd9(0x183)]('sph_density_fragment')});},SPHDensityMaterial['prototype']=Object[_0x7112e(0xe9)](THREE[_0x7112e(0x389)][_0x7112e(0x218)],{'positionBuffer':{'get':function(){var _0x138817=_0x7112e;return this[_0x138817(0x2c8)][_0x138817(0x2a8)][_0x138817(0xeb)];},'set':function(_0x1f4410){var _0x179c29=_0x7112e;this[_0x179c29(0x2c8)]['positionBuffer']['value']=_0x1f4410;}},'bucketBuffer':{'get':function(){var _0x4f88c3=_0x7112e;return this[_0x4f88c3(0x2c8)][_0x4f88c3(0x38c)]['value'];},'set':function(_0x26699c){var _0xbc0bab=_0x7112e;this['uniforms'][_0xbc0bab(0x38c)][_0xbc0bab(0xeb)]=_0x26699c;}},'particleMass':{'get':function(){var _0x44ef62=_0x7112e;return this['uniforms']['mass'][_0x44ef62(0xeb)];},'set':function(_0x51a380){var _0x5baab2=_0x7112e;this['uniforms'][_0x5baab2(0x202)][_0x5baab2(0xeb)]=_0x51a380;}}}),SPHDistanceMaterial=function(_0x1a4d7b){var _0x29304a=_0x7112e;THREE[_0x29304a(0x389)][_0x29304a(0x281)](this,{'uniforms':{'positionBuffer':{'value':null},'numCells':{'value':_0x1a4d7b[_0x29304a(0x32f)]},'cellSize':{'value':_0x1a4d7b[_0x29304a(0x2df)]},'particleRadius':{'value':_0x1a4d7b[_0x29304a(0x1ae)]},'zSliceOffset':{'value':0x0}},'vertexShader':ShaderLibrary['get'](_0x29304a(0x244)),'fragmentShader':ShaderLibrary[_0x29304a(0x183)](_0x29304a(0x3b2))}),this[_0x29304a(0x2f5)]=THREE['CustomBlending'],this['blendEquation']=THREE[_0x29304a(0x13f)],this[_0x29304a(0x1d7)]=THREE[_0x29304a(0x3ac)],this[_0x29304a(0x369)]=THREE[_0x29304a(0x3ac)],this['transparent']=!0x0;},SPHDistanceMaterial['prototype']=Object[_0x7112e(0xe9)](THREE[_0x7112e(0x389)]['prototype'],{'positionBuffer':{'get':function(){var _0x156a5b=_0x7112e;return this[_0x156a5b(0x2c8)]['positionBuffer'][_0x156a5b(0xeb)];},'set':function(_0x56f632){var _0xa01bca=_0x7112e;this[_0xa01bca(0x2c8)][_0xa01bca(0x2a8)][_0xa01bca(0xeb)]=_0x56f632;}},'zSliceOffset':{'get':function(){var _0x4c6698=_0x7112e;return this[_0x4c6698(0x2c8)]['zSliceOffset']['value'];},'set':function(_0x2bfee1){var _0x4c86c7=_0x7112e;this[_0x4c86c7(0x2c8)]['zSliceOffset'][_0x4c86c7(0xeb)]=_0x2bfee1;}}}),SPHHeightMapCollider['prototype']=Object['create'](SPHCollider[_0x7112e(0x218)]),SPHHeightMapColliderMaterial=function(_0x48dd7e){var _0x54faa4=_0x7112e;THREE[_0x54faa4(0x389)][_0x54faa4(0x281)](this,{'uniforms':{'numCells':{'value':null},'cellSize':{'value':0x0},'heightMap':{'value':_0x48dd7e},'wallExtent':{'value':null}},'vertexShader':ShaderLibrary[_0x54faa4(0x183)]('sph_quad_vertex'),'fragmentShader':ShaderLibrary[_0x54faa4(0x249)](_0x54faa4(0x33d))+ShaderLibrary[_0x54faa4(0x183)](_0x54faa4(0x304))});},SPHHeightMapColliderMaterial[_0x7112e(0x218)]=Object[_0x7112e(0xe9)](THREE[_0x7112e(0x389)]['prototype']),SPHPositionMaterial=function(_0x54c729){var _0x5cce42=_0x7112e;THREE['ShaderMaterial'][_0x5cce42(0x281)](this,{'uniforms':{'positionBuffer':{'value':null},'velocityBuffer':{'value':null},'accelBuffer':{'value':null},'dt':{'value':0x1},'wallExtent':{'value':_0x54c729[_0x5cce42(0x1c7)]},'restDistance':{'value':_0x54c729[_0x5cce42(0x32e)]},'maxParticleIndex':{'value':0x0}},'vertexShader':ShaderLibrary[_0x5cce42(0x183)](_0x5cce42(0x262)),'fragmentShader':ShaderLibrary['get'](_0x5cce42(0x11a))});},SPHPositionMaterial[_0x7112e(0x218)]=Object['create'](THREE[_0x7112e(0x389)][_0x7112e(0x218)],{'positionBuffer':{'get':function(){var _0x45a135=_0x7112e;return this[_0x45a135(0x2c8)]['positionBuffer'][_0x45a135(0xeb)];},'set':function(_0x4bbd7b){var _0x3b1101=_0x7112e;this[_0x3b1101(0x2c8)][_0x3b1101(0x2a8)][_0x3b1101(0xeb)]=_0x4bbd7b;}},'velocityBuffer':{'get':function(){var _0x28599d=_0x7112e;return this[_0x28599d(0x2c8)][_0x28599d(0xef)][_0x28599d(0xeb)];},'set':function(_0x236af4){var _0x231c13=_0x7112e;this['uniforms']['velocityBuffer'][_0x231c13(0xeb)]=_0x236af4;}},'accelBuffer':{'get':function(){var _0x3c3770=_0x7112e;return this[_0x3c3770(0x2c8)][_0x3c3770(0x1f1)][_0x3c3770(0xeb)];},'set':function(_0x20715f){var _0x227ffc=_0x7112e;this[_0x227ffc(0x2c8)][_0x227ffc(0x1f1)][_0x227ffc(0xeb)]=_0x20715f;}},'dt':{'get':function(){var _0xebb06=_0x7112e;return this['uniforms']['dt'][_0xebb06(0xeb)];},'set':function(_0x2893de){var _0x3f05a8=_0x7112e;this[_0x3f05a8(0x2c8)]['dt']['value']=_0x2893de;}},'maxParticleIndex':{'get':function(){var _0x2c43e8=_0x7112e;return this['uniforms'][_0x2c43e8(0x1b9)][_0x2c43e8(0xeb)];},'set':function(_0x3982a2){var _0x45439a=_0x7112e;this[_0x45439a(0x2c8)][_0x45439a(0x1b9)][_0x45439a(0xeb)]=_0x3982a2;}}}),SPHVelocityMaterial=function(_0x11a561){var _0x5ac67e=_0x7112e;THREE['ShaderMaterial'][_0x5ac67e(0x281)](this,{'uniforms':{'positionBuffer':{'value':null},'velocityBuffer':{'value':null},'accelBuffer1':{'value':null},'accelBuffer2':{'value':null},'collisionBuffer':{'value':_0x11a561['collisionBuffer']},'dt':{'value':0x1},'numCells':{'value':_0x11a561[_0x5ac67e(0x32f)]},'cellSize':{'value':_0x11a561[_0x5ac67e(0x2df)]},'restDistance':{'value':_0x11a561[_0x5ac67e(0x32e)]},'particleBufferSize':{'value':_0x11a561['particleBufferSize']},'maxParticleIndex':{'value':0x0}},'vertexShader':ShaderLibrary[_0x5ac67e(0x183)](_0x5ac67e(0x262)),'fragmentShader':_0x11a561[_0x5ac67e(0x16e)]+ShaderLibrary[_0x5ac67e(0x183)](_0x5ac67e(0x386))});},SPHVelocityMaterial[_0x7112e(0x218)]=Object[_0x7112e(0xe9)](THREE[_0x7112e(0x389)][_0x7112e(0x218)],{'positionBuffer':{'get':function(){var _0xb80312=_0x7112e;return this['uniforms'][_0xb80312(0x2a8)][_0xb80312(0xeb)];},'set':function(_0x732c49){var _0x4fe386=_0x7112e;this['uniforms'][_0x4fe386(0x2a8)][_0x4fe386(0xeb)]=_0x732c49;}},'velocityBuffer':{'get':function(){var _0x2627ab=_0x7112e;return this[_0x2627ab(0x2c8)][_0x2627ab(0xef)]['value'];},'set':function(_0x5437db){var _0x26740b=_0x7112e;this[_0x26740b(0x2c8)][_0x26740b(0xef)]['value']=_0x5437db;}},'accelBuffer1':{'get':function(){var _0x1c3fac=_0x7112e;return this['uniforms'][_0x1c3fac(0x102)][_0x1c3fac(0xeb)];},'set':function(_0x3bf27b){var _0x905a4d=_0x7112e;this[_0x905a4d(0x2c8)][_0x905a4d(0x102)][_0x905a4d(0xeb)]=_0x3bf27b;}},'accelBuffer2':{'get':function(){var _0x4af44e=_0x7112e;return this[_0x4af44e(0x2c8)][_0x4af44e(0x38b)][_0x4af44e(0xeb)];},'set':function(_0x23c166){var _0x40106c=_0x7112e;this[_0x40106c(0x2c8)][_0x40106c(0x38b)][_0x40106c(0xeb)]=_0x23c166;}},'dt':{'get':function(){return this['uniforms']['dt']['value'];},'set':function(_0x48e822){var _0x39e976=_0x7112e;this[_0x39e976(0x2c8)]['dt']['value']=_0x48e822;}},'maxParticleIndex':{'get':function(){var _0x3b2b4c=_0x7112e;return this['uniforms'][_0x3b2b4c(0x1b9)][_0x3b2b4c(0xeb)];},'set':function(_0x1787bd){var _0x4ee3b1=_0x7112e;this[_0x4ee3b1(0x2c8)]['maxParticleIndex']['value']=_0x1787bd;}}}),SPHWallCollider['prototype']=Object[_0x7112e(0xe9)](SPHCollider[_0x7112e(0x218)]),SPHWallColliderMaterial=function(){var _0x5870d7=_0x7112e;THREE[_0x5870d7(0x389)]['call'](this,{'uniforms':{'numCells':{'value':null},'cellSize':{'value':0x0},'wallExtent':{'value':null}},'vertexShader':ShaderLibrary[_0x5870d7(0x183)]('sph_quad_vertex'),'fragmentShader':ShaderLibrary[_0x5870d7(0x249)](_0x5870d7(0x33d))+ShaderLibrary[_0x5870d7(0x183)](_0x5870d7(0x2f9))});},SPHWallColliderMaterial[_0x7112e(0x218)]=Object[_0x7112e(0xe9)](THREE[_0x7112e(0x389)][_0x7112e(0x218)]),VolumetricLighting[_0x7112e(0x218)]=Object[_0x7112e(0xe9)](THREE[_0x7112e(0x389)]['prototype'],{'densityField':{'get':function(){var _0x3b1517=_0x7112e;return this[_0x3b1517(0x2c8)][_0x3b1517(0x29c)][_0x3b1517(0xeb)];},'set':function(_0xfb786a){var _0x6f81a6=_0x7112e;this[_0x6f81a6(0x2c8)][_0x6f81a6(0x29c)]['value']=_0xfb786a;}},'cameraPos':{'get':function(){var _0x4086b3=_0x7112e;return this[_0x4086b3(0x2c8)]['cameraPos'][_0x4086b3(0xeb)];},'set':function(_0x5e1feb){var _0x34ed26=_0x7112e;this[_0x34ed26(0x2c8)][_0x34ed26(0x2b8)][_0x34ed26(0xeb)]=_0x5e1feb;}},'mieG':{'get':function(){var _0x3a88d2=_0x7112e;return this[_0x3a88d2(0x2c8)][_0x3a88d2(0x14f)][_0x3a88d2(0xeb)];},'set':function(_0x492495){var _0x4740f4=_0x7112e;this[_0x4740f4(0x2c8)][_0x4740f4(0x14f)][_0x4740f4(0xeb)]=_0x492495;}},'absorption':{'get':function(){var _0xcc534c=_0x7112e;return this['uniforms']['absorption'][_0xcc534c(0xeb)];},'set':function(_0x37a01a){var _0x569fef=_0x7112e;this[_0x569fef(0x2c8)]['absorption'][_0x569fef(0xeb)][_0x569fef(0x372)](_0x37a01a);}}}),VolumetricLightRenderer[_0x7112e(0x218)]={get 'absorption'(){var _0x565649=_0x7112e;return this[_0x565649(0x399)][_0x565649(0x279)];},set 'absorption'(_0x3ca1d6){var _0x1ff18a=_0x7112e;this[_0x1ff18a(0x399)][_0x1ff18a(0x279)]=_0x3ca1d6;},get 'texture'(){var _0x42639f=_0x7112e;return this[_0x42639f(0xda)][_0x42639f(0x126)];},'addLight':function(_0x2a31e6){var _0x5dac1a=_0x7112e;this['_rectRenderer'][_0x5dac1a(0x16b)]['add'](_0x2a31e6);},'removeLight':function(_0x6e30c3){var _0x3eec49=_0x7112e;this[_0x3eec49(0x176)]['_scene'][_0x3eec49(0x238)](_0x6e30c3);},'render':function(_0x5d80d3,_0x228bcc,_0x52462c){var _0xad1caa=_0x7112e,_0x29f297=new THREE[(_0xad1caa(0x2ec))]();_0x29f297[_0xad1caa(0x2e6)](_0x228bcc['matrixWorld']);var _0x2a1a81=this[_0xad1caa(0x399)][_0xad1caa(0x2b8)];_0x2a1a81[_0xad1caa(0x372)](_0x52462c[_0xad1caa(0x22c)]),_0x2a1a81[_0xad1caa(0x198)](_0x29f297),this['_material'][_0xad1caa(0x29c)]=_0x5d80d3,this['_rectRenderer'][_0xad1caa(0x2b5)](this['_material'],this[_0xad1caa(0xda)],!0x0);}},VolumetricNormals[_0x7112e(0x218)]=Object[_0x7112e(0xe9)](THREE['ShaderMaterial'][_0x7112e(0x218)],{'densityField':{'get':function(){var _0x28614c=_0x7112e;return this[_0x28614c(0x2c8)][_0x28614c(0x29c)][_0x28614c(0xeb)];},'set':function(_0x30028c){var _0x2d570e=_0x7112e;this[_0x2d570e(0x2c8)]['densityField'][_0x2d570e(0xeb)]=_0x30028c;}}}),VolumetricNormalsRenderer[_0x7112e(0x218)]={'render':function(_0x1d5dee,_0x550937){var _0x29bdbb=_0x7112e;this[_0x29bdbb(0x399)]['densityField']=_0x1d5dee,this[_0x29bdbb(0x137)][_0x29bdbb(0x1fe)](this[_0x29bdbb(0x16b)],this[_0x29bdbb(0x38f)],_0x550937,!0x0);}});